{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Topics","text":"<p>Note</p> <p>Early Beta</p> <p>[ v0.0.11 ]</p> <p>Last update: April 1, 2023</p> <p>The purpose of this website is quick access to topics of interest</p> <p>Some topics are edited transcripts of conversations with the OpenAI chatGPT-4 product</p> <p>Some chatGPT-4 limitations are:</p> <pre><code>- May occasionally generate incorrect information\n\n- May occasionally produce harmful instructions or biased content\n\n- Limited knowledge of world and events after 2021\n</code></pre> <ul> <li>Other topics are from pursuing what\u2019s new and improved in the ever changing  Electronics, Internet, Science, and Software industries. Checking out what\u2019s new or not, a pipe dream or not, or what\u2019s new and improved</li> </ul> <p>The Hype Curve helps separate reality from fiction. Keep it in mind when reading this website</p>"},{"location":"agenda/","title":"Agenda","text":"<ul> <li> <p>Home: </p> <ul> <li>Welcome: index.md</li> <li> <p>Hype Curve: hype_curve.md</p> </li> <li> <p>(AI):</p> </li> <li>What is AI</li> <li>ELIZA</li> <li>GPT</li> <li>AI Hype Curve: img/ai_hype.png</li> <li>Large Language Model</li> <li>Generalized Learning</li> <li>Generative Pre-Learning Transform</li> <li>Neural Networks</li> <li>Forward Propagation</li> <li>Loss Calculation</li> <li>Back Propagation</li> <li>Parameters</li> <li>Tensor Flow</li> <li> <p>Singularity</p> </li> <li> <p>(Astronomy):</p> </li> <li>Neutrino</li> <li> <p>Sun</p> </li> <li> <p>(Autonomous Vehicles): </p> </li> <li>Autonomous Cars</li> <li>Autonomous Trucks</li> <li>Autonomous Vehicles Video</li> <li>Autonomous Vehicles Black Box</li> <li> <p>5G - Autonomous Vehicles</p> </li> <li> <p>(Electronics):</p> </li> <li>Nonlinear Modulation</li> <li> <p>Software Defined Radio</p> </li> <li> <p>(Health):</p> </li> <li>Why Do We Yawn</li> <li>What Is Cellulitis</li> <li>What is Pilonidal Cyst</li> <li> <p>What is Quadriceps Rupture</p> </li> <li> <p>(Metaverse)</p> </li> <li> <p>(Science / Physics):</p> </li> <li>Math</li> <li>Maxwell Equations</li> <li>Neutrino</li> <li>Theory of Relativity</li> <li>Space-Time</li> <li> <p>Quantum Mechanics: </p> <ul> <li>Introduction</li> <li>Quantum Computers</li> <li>Quantum Field Theory</li> <li>Boson</li> </ul> </li> <li> <p>(Security): </p> </li> <li>2FA TOTP</li> <li>Block Chain</li> <li> <p>Cloudflare Warp</p> </li> <li> <p>(Software):</p> </li> <li>Python</li> <li>Markdown Math processing</li> <li>NZB Files</li> <li>VScode</li> <li>Material for MkDocs</li> <li> <p>Web Languages</p> </li> <li> <p>(Telecom):</p> </li> <li>Cellular Networks</li> <li>4G</li> <li>5G</li> <li> <p>6G</p> </li> <li> <p>(Web): </p> </li> <li>Browsers</li> <li> <p>Servers</p> </li> <li> <p>(UNIX):</p> </li> <li>UNIX History</li> <li>UNIX</li> <li>USENET</li> <li>macOS</li> <li>Linux</li> </ul> </li> </ul>"},{"location":"hype_curve/","title":"Hype Curve","text":""},{"location":"hype_curve/#hype-curve","title":"Hype Curve","text":"<p>The Hype Curve helps separate reality from fiction. Keep it in mind when reading this site</p> Hype Curve <p>The hype curve or Gartner Hype Cycle is a graphical representation of the life cycle stages that various technologies go through, from their inception to eventual mainstream adoption. It was first introduced by the research firm Gartner in 1995, and it has since become a widely recognized model in the technology industry.</p> <p>The hype curve consists of five main phases:</p> <p>Technology Trigger: This is the initial phase when a new technology is introduced, and it generates a lot of excitement and expectations about its potential.</p> <p>Peak of Inflated Expectations: The hype around the technology reaches its peak, and expectations are very high. At this stage, there is often a lot of speculation, hype, and unrealistic projections about what the technology can do.</p> <p>Trough of Disillusionment: As the hype subsides and early adopters start using the technology, they discover limitations, drawbacks, and failures. This leads to disappointment and decreased enthusiasm, and the technology falls into what is known as the \"trough of disillusionment.\"</p> <p>Slope of Enlightenment: As more and more people gain experience with the technology and learn how to use it effectively, its potential benefits become clearer. This stage is characterized by more realistic expectations and a better understanding of the technology's strengths and limitations.</p> <p>Plateau of Productivity: The technology has reached widespread adoption and becomes an integral part of society. Its benefits are well understood and accepted, and further improvements and innovations continue to evolve.</p> <p>Understanding where a technology lies on the hype curve can help businesses and individuals make strategic decisions about investing in or adopting the technology. A technology that is still in the early stages of development may not be ready for investment or adoption, while one that is in the plateau of productivity may be a safe bet with proven results.</p>"},{"location":"hype_curve/#some-hype-curve-guestimates","title":"Some Hype Curve Guestimates","text":"<p>Here are some of my gustimates of where a few technologies are on their Hype Curve journeys:</p>"},{"location":"hype_curve/#5g-hype","title":"5G Hype","text":"<p>Big time 5G hype by major carriers, started its Hype Curve climb a few years ago starting at the Hype Curve Technology Trigger, and well on its way to Peak of Inflated Expectations</p> <p>A 2019 survey reported 5G hype is working as 1/3 of smartphone owners thought they had a 5G devices and service, but they didn't. Since then, major carriers have ramped up their hype machines and they are working. More 5G phones being are being sold now, but more smartphone owners think they have reliable 5G service, but they don't.</p> <p>A few of those with 5G smartphones are experiencing 5G service. Illinois has the top 5G availability of 27.6% of the time, representing the proportion of time those users with 5G devices and subscription had an active 5G connection. Higher urban population areas like Illinois is where the money is for major carriers.</p> <p>Some of the reasons for such service are the flavors of 5G.</p> <ul> <li> <p>Low-Band</p> </li> <li> <p>Mid-Band</p> </li> <li> <p>High-Band</p> </li> </ul> <p>The higher the band, the faster transmission speeds are, at the expense of distance and penetrating building materials. </p> <p>The High-Band has much higher speed, yet degrades traveling a few hundred feet of open space, and worsens if trees are on its path. Other questions are how will smartphones receive 5G indoors and will there be 5G WiFi?</p>"},{"location":"hype_curve/#self-driving-cars","title":"Self-driving Cars","text":"<p>Self-driving cars, also known as an autonomous vehicles (AV), driverless car, Auto Pilot, Full Self-Driving, Super Cruise, robotic car (robo-car), and other marketing terms, are incorporating automation. One day, some may survive to reach the Hype Curve Plateau of Productivity and evolve into cars being capable of sensing its environment and moving safely with little or no human input.</p> <p>Some early entries who have survived their own smoke tests, entered the Hype Curve race. Some withdrew early and some have literally crashed, burned, killed, or disobey traffic laws, in their Hype Curve race.</p>"},{"location":"hype_curve/#levels-of-autonomous-driving","title":"Levels of Autonomous Driving","text":"<p>Levels of Autonomous Driving, Explained</p> <p>\"To set agreed-upon standards early in the transition to autonomous vehicles, the Society of Automotive Engineers (SAE) developed a classification system that defines the degree of driving automation a car and its equipment may offer. Ranging from levels zero to five, the driving automation spectrum begins with vehicles without this technology and ends with entirely self-driving vehicles.</p> <p>If a vehicle has Level 0, Level 1, or Level 2 driver support systems, an active and engaged driver is required. She is always responsible for the vehicle\u2019s operation, must supervise the technology at all times, and must take complete control of the vehicle when necessary.</p> <p>In the future, if a vehicle has Level 3, Level 4, or Level 5 automated driving systems, the technology takes complete control of the driving without human supervision. However, with Level 3, if the vehicle alerts the driver and requests she takes control of the vehicle, she must be prepared and able to do so.</p> <p>It is worth repeating and emphasizing the following: As of May 2021, no vehicles sold in the U.S. market have a Level 3, Level 4, or Level 5 automated driving system. All of them require an alert driver sitting in the driver\u2019s seat, ready to take control at any time. If you believe otherwise, you are mistaken, and it could cost you your life, the life of someone you love, or the life of an innocent bystander.\" </p>"},{"location":"hype_curve/#where-we-are","title":"Where We Are","text":"<p>Regardless of what the self-driving car industry carnie barkers are shouting, the industry has a tough technology Hype Curve road ahead to get to Level 3, Level 4, or Level 5 automated driving systems.</p> <p>This is not a self-driving car. \"To be sure, there are thousands of autonomous test vehicles on the road, even some without human safety monitors behind the wheel, but anything for which you can plunk down your hard-earned cash is still just a regular car. Maybe it\u2019s a bit smarter than the cars you\u2019re normally used to, but it\u2019s still dumber than anything that can accurately describe itself as \u201cautonomous.\u201d And we need to be really clear about that.\" </p> <p>Maybe this is good advice Please make a dumb car \"Today\u2019s cars are dumb where they should be smart, and smart where they should be dumb. Enough already. Make a car that\u2019s pretty much all dumb and watch it sell \u2014 because what automakers are giving people is so bad, they\u2019ll pay more to have less of it.\" </p>"},{"location":"hype_curve/#metaverse","title":"Metaverse","text":"<p>Metaverse is the sum of all virtual spaces such as Virtual Reality and Augmented Reality.</p> <p>Facebook, oops Meta, is saying \"The metaverse is the next evolution of social connection. Our company's vision is to help bring the metaverse to life, so we are changing our name to reflect our commitment to this future. The metaverse will be social 3D spaces in the metaverse will let you socialize, learn, collaborate and play in ways that go beyond what we can imagine.\" </p> <p>Is that hype or what? I think metaverse is just starting its roller coaster Hype Curve ride starting at the Technology Trigger point. Who knows, it could make it to the Plateau of Productivity in some form or other. I doubt it though, because of the many unknown thrills and spills awaiting it on its Hype Curve roller coaster ride.</p>"},{"location":"References/bash/","title":"Bash","text":""},{"location":"References/bash/#introduction.-intro","title":"Introduction","text":"<p>Bash (short for Bourne-Again SHell) is a Unix shell, which is a command-line interface for interacting with the operating system. Bash commands are used to execute various tasks on a Unix-based system. Here are some common Bash commands and their explanations:</p> <ul> <li><code>cd</code>: Change directory. This command is used to change the current working directory.</li> <li><code>ls</code>: List. This command is used to list the contents of a directory.</li> <li><code>mkdir</code>: Make directory. This command is used to create a new directory.</li> <li><code>touch</code>: Create file. This command is used to create a new empty file.</li> <li><code>rm</code>: Remove. This command is used to remove a file or directory.</li> <li><code>cp</code>: Copy. This command is used to copy a file or directory.</li> <li><code>mv</code>: Move. This command is used to move a file or directory.</li> <li><code>cat</code>: Concatenate. This command is used to display the contents of a file.</li> <li><code>grep</code>: Global regular expression print. This command is used to search for a pattern in a file.</li> <li><code>echo</code>: Echo. This command is used to display text on the terminal.</li> </ul> <p>These are just a few examples of Bash commands, but there are many more available depending on the specific task you need to perform</p> <p>Check out Bash References</p>"},{"location":"References/bash/#example_1","title":"Example","text":"<pre><code>#!/usr/bin/env bash\n\nname=\"John\"\necho \"Hello $name!\"\n</code></pre>"},{"location":"References/bash/#variables","title":"Variables","text":"<pre><code>name=\"John\"\necho $name  # see below\necho \"$name\"\necho \"${name}!\"\n</code></pre> <p>Generally quote your variables unless they contain wildcards to expand\\ or command fragments.</p> <pre><code>wildcard=\"*.txt\"\noption=\"iv\"\ncp -$options $wildcard /tmp\n</code></pre>"},{"location":"References/bash/#stringquotes","title":"String quotes","text":"<pre><code>name=\"John\"\necho \"Hi $name\"  #=&gt; Hi John\necho 'Hi $name'  #=&gt; Hi $name\n</code></pre>"},{"location":"References/bash/#shellexecution","title":"Shell execution","text":"<pre><code>echo \"I'm in $(pwd)\"\necho \"I'm in `pwd`\"  # obsolescent\n# Same\n</code></pre> <p>See Command\\ substitution</p>"},{"location":"References/bash/#conditionalexecution","title":"Conditional execution","text":"<pre><code>git commit &amp;&amp; git push\ngit commit || echo \"Commit failed\"\n</code></pre>"},{"location":"References/bash/#functions-example","title":"Functions","text":"<pre><code>get_name() {\necho \"John\"\n}\n\necho \"You are $(get_name)\"\n</code></pre>"},{"location":"References/bash/#conditionals-example","title":"Conditionals","text":"<pre><code>if [[ -z \"$string\" ]]; then\necho \"String is empty\"\nelif [[ -n \"$string\" ]]; then\necho \"String is not empty\"\nfi\n</code></pre>"},{"location":"References/bash/#strictmode","title":"Strict mode","text":"<pre><code>set -euo pipefail\nIFS=$'\\n\\t'\n</code></pre> <p>See: Unofficial bash strict mode</p>"},{"location":"References/bash/#braceexpansion","title":"Brace expansion","text":"<pre><code>echo {A,B}.js\n</code></pre>"},{"location":"References/bash/#expression-description","title":"Expression Description","text":"<ul> <li><code>{A,B}</code> Same as <code>A B</code></li> <li><code>{A,B}.js</code> Same as <code>A.js B.js</code></li> <li><code>{1..5}</code> Same as <code>1 2 3 4 5</code></li> </ul> <p>See: Brace expansion</p>"},{"location":"References/bash/#parameter-expansions.-three-column","title":"Parameter expansions","text":""},{"location":"References/bash/#basics","title":"Basics","text":"<pre><code>name=\"John\"\necho \"${name}\"\necho \"${name/J/j}\"    #=&gt; \"john\" (substitution)\necho \"${name:0:2}\"    #=&gt; \"Jo\" (slicing)\necho \"${name::2}\"     #=&gt; \"Jo\" (slicing)\necho \"${name::-1}\"    #=&gt; \"Joh\" (slicing)\necho \"${name:(-1)}\"   #=&gt; \"n\" (slicing from right)\necho \"${name:(-2):1}\" #=&gt; \"h\" (slicing from right)\necho \"${food:-Cake}\"  #=&gt; $food or \"Cake\"\n</code></pre> <pre><code>length=2\necho \"${name:0:length}\"  #=&gt; \"Jo\"\n</code></pre> <p>See: Parameter expansion</p> <pre><code>str=\"/path/to/foo.cpp\"\necho \"${str%.cpp}\"    # /path/to/foo\necho \"${str%.cpp}.o\"  # /path/to/foo.o\necho \"${str%/*}\"      # /path/to\n\necho \"${str##*.}\"     # cpp (extension)\necho \"${str##*/}\"     # foo.cpp (basepath)\n\necho \"${str#*/}\"      # path/to/foo.cpp\necho \"${str##*/}\"     # foo.cpp\n\necho \"${str/foo/bar}\" # /path/to/bar.cpp\n</code></pre> <pre><code>str=\"Hello world\"\necho \"${str:6:5}\"   # \"world\"\necho \"${str: -5:5}\"  # \"world\"\n</code></pre> <pre><code>src=\"/path/to/foo.cpp\"\nbase=${src##*/}   #=&gt; \"foo.cpp\" (basepath)\ndir=${src%$base}  #=&gt; \"/path/to/\" (dirpath)\n</code></pre>"},{"location":"References/bash/#substitution","title":"Substitution","text":"<p>Code Description</p> <ul> <li><code>${foo%suffix}</code> Remove suffix</li> <li><code>${foo#prefix}</code> Remove prefix</li> <li><code>${foo%%suffix}</code> Remove long suffix</li> <li><code>${foo/%suffix}</code> Remove long suffix</li> <li><code>${foo##prefix}</code> Remove long prefix</li> <li><code>${foo/#prefix}</code> Remove long prefix</li> <li><code>${foo/from/to}</code> Replace first match</li> <li><code>${foo//from/to}</code> Replace all</li> <li><code>${foo/%from/to}</code> Replace suffix</li> <li><code>${foo/#from/to}</code> Replace prefix</li> </ul>"},{"location":"References/bash/#comments","title":"Comments","text":"<pre><code># Single line comment\n</code></pre> <pre><code>: '\nThis is a\nmulti line\ncomment\n'\n</code></pre>"},{"location":"References/bash/#substrings","title":"Substrings","text":"<p>Expression Description</p> <ul> <li><code>${foo:0:3}</code> Substring (position, length)</li> <li><code>${foo:(-3):3}</code> Substring from the right</li> </ul>"},{"location":"References/bash/#length","title":"Length","text":"<p>Expression Description\\</p> <ul> <li><code>${#foo}</code> Length of <code>$foo</code></li> </ul>"},{"location":"References/bash/#manipulation","title":"Manipulation","text":"<pre><code>str=\"HELLO WORLD!\"\necho \"${str,}\"   #=&gt; \"hELLO WORLD!\" (lowercase 1st letter)\necho \"${str,,}\"  #=&gt; \"hello world!\" (all lowercase)\n\nstr=\"hello world!\"\necho \"${str^}\"   #=&gt; \"Hello world!\" (uppercase 1st letter)\necho \"${str^^}\"  #=&gt; \"HELLO WORLD!\" (all uppercase)\n</code></pre>"},{"location":"References/bash/#defaultvalues","title":"Default values","text":""},{"location":"References/bash/#expression-description_1","title":"Expression Description","text":"<ul> <li><code>${foo:-val}</code> <code>$foo</code>, or <code>val</code> if unset (or null)</li> <li><code>${foo:=val}</code> Set <code>$foo</code> to <code>val</code> if unset (or null)</li> <li><code>${foo:+val}</code> <code>val</code> if <code>$foo</code> is set (and not null)</li> <li><code>${foo:?message}</code> Show error message and exit if <code>$foo</code> is unset (or null)</li> </ul> <p>Omitting the <code>:</code> removes the (non)nullity checks, e.g. <code>${foo-val}</code>\\ expands to <code>val</code> if unset otherwise <code>$foo</code>.</p>"},{"location":"References/bash/#loops.-three-column","title":"Loops","text":""},{"location":"References/bash/#basicforloop","title":"Basic for loop","text":"<pre><code>for i in /etc/rc.*; do\necho \"$i\"\ndone\n</code></pre>"},{"location":"References/bash/#c-likeforloop","title":"C-like for loop","text":"<pre><code>for ((i = 0 ; i &lt; 100 ; i++)); do\necho \"$i\"\ndone\n</code></pre>"},{"location":"References/bash/#ranges","title":"Ranges","text":"<pre><code>for i in {1..5}; do\necho \"Welcome $i\"\ndone\n</code></pre>"},{"location":"References/bash/#withstepsize","title":"With step size","text":"<pre><code>for i in {5..50..5}; do\necho \"Welcome $i\"\ndone\n</code></pre>"},{"location":"References/bash/#readinglines","title":"Reading lines","text":"<pre><code>while read -r line; do\necho \"$line\"\ndone &lt;file.txt\n</code></pre>"},{"location":"References/bash/#forever","title":"Forever","text":"<pre><code>while true; do\n\u00b7\u00b7\u00b7\ndone\n</code></pre>"},{"location":"References/bash/#functions.-three-column","title":"Functions","text":""},{"location":"References/bash/#definingfunctions","title":"Defining functions","text":"<pre><code>myfunc() {\necho \"hello $1\"\n}\n</code></pre> <pre><code># Same as above (alternate syntax)\nfunction myfunc() {\necho \"hello $1\"\n}\n</code></pre> <pre><code>myfunc \"John\"\n</code></pre>"},{"location":"References/bash/#returningvalues","title":"Returning values","text":"<pre><code>myfunc() {\nlocal myresult='some value'\necho \"$myresult\"\n}\n</code></pre> <pre><code>result=$(myfunc)\n</code></pre>"},{"location":"References/bash/#raisingerrors","title":"Raising errors","text":"<pre><code>myfunc() {\nreturn 1\n}\n</code></pre> <pre><code>if myfunc; then\necho \"success\"\nelse\necho \"failure\"\nfi\n</code></pre>"},{"location":"References/bash/#arguments","title":"Arguments","text":"<p>Expression Description</p> <ul> <li><code>$#</code> Number of arguments</li> <li><code>$*</code> All positional arguments (as a single word)</li> <li><code>$@</code> All positional arguments (as separate strings)\\</li> <li><code>$1</code> First argument\\</li> <li><code>$_</code> Last argument of the previous command</li> </ul> <p>Note: <code>$@</code> and <code>$*</code> must be quoted in order to perform as described. Otherwise, they do exactly the same thing (arguments as separate\\ strings).</p> <p>See Special parameters.</p>"},{"location":"References/bash/#conditionals.-three-column","title":"Conditionals","text":""},{"location":"References/bash/#conditions","title":"Conditions","text":"<p>Note that <code>[[</code> is actually a command/program that returns either <code>0</code>\\ (true) or <code>1</code> (false). Any program that obeys the same logic (like all\\ base utils, such as <code>grep(1)</code> or <code>ping(1)</code>) can be used as condition,\\ see examples.</p> <p>Condition Description </p> <ul> <li><code>[[ -z STRING ]]</code> Empty string</li> <li><code>[[ -n STRING ]]</code> Not empty string</li> <li><code>[[ STRING == STRING ]]</code> Equal</li> <li><code>[[ STRING != STRING ]]</code> Not Equal</li> <li><code>[[ NUM -eq NUM ]]</code> Equal</li> <li><code>[[ NUM -ne NUM ]]</code> Not equal</li> <li><code>[[ NUM -lt NUM ]]</code> Less than</li> <li><code>[[ NUM -le NUM ]]</code> Less than or equal</li> <li><code>[[ NUM -gt NUM ]]</code> Greater than</li> <li><code>[[ NUM -ge NUM ]]</code> Greater than or equal</li> <li><code>[[ STRING =~ STRING ]]</code> Regexp</li> <li><code>(( NUM &lt; NUM ))</code> Numeric conditions</li> </ul>"},{"location":"References/bash/#moreconditions","title":"More conditions","text":"<p>Condition Description</p> <ul> <li><code>[[ -o noclobber ]]</code> If OPTIONNAME is enabled</li> <li><code>[[ ! EXPR ]]</code> Not</li> <li><code>[[ X &amp;&amp; Y ]]</code> And</li> <li><code>[[ X || Y ]]</code> Or</li> </ul>"},{"location":"References/bash/#fileconditions","title":"File conditions","text":"<p>Condition Description</p> <ul> <li><code>[[ -e FILE ]]</code> Exists</li> <li><code>[[ -r FILE ]]</code> Readable</li> <li><code>[[ -h FILE ]]</code> Symlink</li> <li><code>[[ -d FILE ]]</code> Director</li> <li><code>[[ -w FILE ]]</code> Writable</li> <li><code>[[ -s FILE ]]</code> Size is &gt; 0 bytes</li> <li><code>[[ -f FILE ]]</code> File</li> <li><code>[[ -x FILE ]]</code> Executable</li> <li><code>[[ FILE1 -nt FILE2 ]]</code> 1 is more recent than 2</li> <li><code>[[ FILE1 -ot FILE2 ]]</code> 2 is more recent than 1</li> <li><code>[[ FILE1 -ef FILE2 ]]</code> Same files</li> </ul>"},{"location":"References/bash/#example","title":"Example","text":"<pre><code># String\nif [[ -z \"$string\" ]]; then\necho \"String is empty\"\nelif [[ -n \"$string\" ]]; then\necho \"String is not empty\"\nelse\necho \"This never happens\"\nfi\n</code></pre> <pre><code># Combinations\nif [[ X &amp;&amp; Y ]]; then\n...\nfi\n</code></pre> <pre><code># Equal\nif [[ \"$A\" == \"$B\" ]]\n</code></pre> <pre><code># Regex\nif [[ \"A\" =~ . ]]\n</code></pre> <pre><code>if (( $a &lt; $b )); then\necho \"$a is smaller than $b\"\nfi\n</code></pre> <pre><code>if [[ -e \"file.txt\" ]]; then\necho \"file exists\"\nfi\n</code></pre>"},{"location":"References/bash/#arrays","title":"Arrays","text":""},{"location":"References/bash/#definingarrays","title":"Defining arrays","text":"<pre><code>Fruits=('Apple' 'Banana' 'Orange')\n</code></pre> <pre><code>Fruits[0]=\"Apple\"\nFruits[1]=\"Banana\"\nFruits[2]=\"Orange\"\n</code></pre>"},{"location":"References/bash/#workingwitharrays","title":"Working with arrays","text":"<pre><code>echo \"${Fruits[0]}\"           # Element #0\necho \"${Fruits[-1]}\"          # Last element\necho \"${Fruits[@]}\"           # All elements, space-separated\necho \"${#Fruits[@]}\"          # Number of elements\necho \"${#Fruits}\"             # String length of the 1st element\necho \"${#Fruits[3]}\"          # String length of the Nth element\necho \"${Fruits[@]:3:2}\"       # Range (from position 3, length 2)\necho \"${!Fruits[@]}\"          # Keys of all elements, space-separated\n</code></pre>"},{"location":"References/bash/#operations_1","title":"Operations","text":"<pre><code>Fruits=(\"${Fruits[@]}\" \"Watermelon\")    # Push\nFruits+=('Watermelon')                  # Also Push\nFruits=( \"${Fruits[@]/Ap*/}\" )          # Remove by regex match\nunset Fruits[2]                         # Remove one item\nFruits=(\"${Fruits[@]}\")                 # Duplicate\nFruits=(\"${Fruits[@]}\" \"${Veggies[@]}\") # Concatenate\nlines=(`cat \"logfile\"`)                 # Read from file\n</code></pre>"},{"location":"References/bash/#iteration_1","title":"Iteration","text":"<pre><code>for i in \"${arrayName[@]}\"; do\necho \"$i\"\ndone\n</code></pre>"},{"location":"References/bash/#dictionaries.-three-column","title":"Dictionaries","text":""},{"location":"References/bash/#defining","title":"Defining","text":"<pre><code>declare -A sounds\n</code></pre> <pre><code>sounds[dog]=\"bark\"\nsounds[cow]=\"moo\"\nsounds[bird]=\"tweet\"\nsounds[wolf]=\"howl\"\n</code></pre> <p>Declares <code>sound</code> as a Dictionary object (aka associative array).</p>"},{"location":"References/bash/#workingwithdictionaries","title":"Working with dictionaries","text":"<pre><code>echo \"${sounds[dog]}\" # Dog's sound\necho \"${sounds[@]}\"   # All values\necho \"${!sounds[@]}\"  # All keys\necho \"${#sounds[@]}\"  # Number of elements\nunset sounds[dog]     # Delete dog\n</code></pre>"},{"location":"References/bash/#iteration","title":"Iteration","text":""},{"location":"References/bash/#iterateovervalues","title":"Iterate over values","text":"<pre><code>for val in \"${sounds[@]}\"; do\necho \"$val\"\ndone\n</code></pre>"},{"location":"References/bash/#iterateoverkeys","title":"Iterate over keys","text":"<pre><code>for key in \"${!sounds[@]}\"; do\necho \"$key\"\ndone\n</code></pre>"},{"location":"References/bash/#options_1","title":"Options","text":""},{"location":"References/bash/#options","title":"Options","text":"<pre><code>set -o noclobber  # Avoid overlay files (echo \"hi\" &gt; foo)\nset -o errexit    # Used to exit upon error, avoiding cascading errors\nset -o pipefail   # Unveils hidden failures\nset -o nounset    # Exposes unset variables\n</code></pre>"},{"location":"References/bash/#globoptions","title":"Glob options","text":"<pre><code>shopt -s nullglob    # Non-matching globs are removed  ('*.foo' =&gt; '')\nshopt -s failglob    # Non-matching globs throw errors\nshopt -s nocaseglob  # Case insensitive globs\nshopt -s dotglob     # Wildcards match dotfiles (\"*.sh\" =&gt; \".foo.sh\")\nshopt -s globstar    # Allow ** for recursive matches ('lib/**/*.rb' =&gt; 'lib/a/b/c.rb')\n</code></pre> <p>Set <code>GLOBIGNORE</code> as a colon-separated list of patterns to be removed\\ from glob matches.</p>"},{"location":"References/bash/#history","title":"History","text":""},{"location":"References/bash/#commands","title":"Commands","text":"<p>Command Description</p> <ul> <li><code>history</code> Show history</li> <li><code>shopt -s histverify</code> Don't execute expanded result immediately</li> </ul>"},{"location":"References/bash/#expansions","title":"Expansions","text":"<p>Expression Description</p> <ul> <li><code>!$</code> Expand last parameter of most recent command</li> <li><code>!*</code> Expand all parameters of most recent command</li> <li><code>!-n</code> Expand <code>n</code>th most recent command</li> <li><code>!n</code> Expand <code>n</code>th command in history</li> <li><code>!&lt;command&gt;</code> Expand most recent invocation of command <code>&lt;command&gt;</code></li> </ul>"},{"location":"References/bash/#operations","title":"Operations","text":""},{"location":"References/bash/#code-description","title":"Code Description","text":"<ul> <li><code>!!</code> Execute last command again</li> <li><code>!!:s/&lt;FROM&gt;/&lt;TO&gt;/</code> Replace first occurrence of <code>&lt;FROM&gt;</code> to <code>&lt;TO&gt;</code> in most recent command</li> <li><code>!!:gs/&lt;FROM&gt;/&lt;TO&gt;/</code> Replace all occurrences of <code>&lt;FROM&gt;</code> to <code>&lt;TO&gt;</code> in most recent command</li> <li><code>!$:t</code> Expand only basename from last parameter of most recent command</li> <li> <p><code>!$:h</code> Expand only directory from last parameter of most recent command</p> </li> <li> <p><code>!!</code> and <code>!$</code> can be replaced with any valid expansion.</p> </li> </ul>"},{"location":"References/bash/#slices","title":"Slices","text":"<p>### Code Description\\</p> <ul> <li><code>!!:n</code> Expand only <code>n</code>th token from most recent command (command is <code>0</code>; first argument is <code>1</code>)</li> <li><code>!^</code> Expand first argument from most recent command</li> <li><code>!$</code> Expand last token from most recent command</li> <li><code>!!:n-m</code> Expand range of tokens from most recent command</li> <li> <p><code>!!:n-$</code> Expand <code>n</code>th token to last from most recent command</p> </li> <li> <p><code>!!</code> can be replaced with any valid expansion i.e. <code>!cat</code>, <code>!-2</code>,</p> </li> <li><code>!42</code>, etc.</li> </ul>"},{"location":"References/bash/#miscellaneous","title":"Miscellaneous","text":""},{"location":"References/bash/#numericcalculations","title":"Numeric calculations","text":"<pre><code>$((a + 200))      # Add 200 to $a\n</code></pre> <pre><code>$(($RANDOM%200))  # Random number 0..199\n</code></pre> <pre><code>declare -i count  # Declare as type integer \ncount+=1          # Increment\n</code></pre>"},{"location":"References/bash/#subshells","title":"Subshells","text":"<pre><code>(cd somedir; echo \"I'm now in $PWD\")\npwd # still in first directory\n</code></pre>"},{"location":"References/bash/#redirection","title":"Redirection","text":"<pre><code>python hello.py &gt; output.txt            # stdout to (file)\npython hello.py &gt;&gt; output.txt           # stdout to (file), append\npython hello.py 2&gt; error.log            # stderr to (file)\npython hello.py 2&gt;&amp;1                    # stderr to stdout\npython hello.py 2&gt;/dev/null             # stderr to (null)\npython hello.py &gt;output.txt 2&gt;&amp;1        # stdout and stderr to (file), equivalent to &amp;&gt;\npython hello.py &amp;&gt;/dev/null             # stdout and stderr to (null)\necho \"$0: warning: too many users\" &gt;&amp;2  # print diagnostic message to stderr\n</code></pre> <pre><code>python hello.py &lt; foo.txt      # feed foo.txt to stdin for python\ndiff &lt;(ls -r) &lt;(ls)            # Compare two stdout without files\n</code></pre>"},{"location":"References/bash/#inspectingcommands","title":"Inspecting commands","text":"<pre><code>command -V cd\n#=&gt; \"cd is a function/alias/whatever\"\n</code></pre>"},{"location":"References/bash/#traperrors","title":"Trap errors","text":"<pre><code>trap 'echo Error at about $LINENO' ERR\n</code></pre> <p>or</p> <pre><code>traperr() {\necho \"ERROR: ${BASH_SOURCE[1]} at about ${BASH_LINENO[0]}\"\n}\n\nset -o errtrace\ntrap traperr ERR\n</code></pre>"},{"location":"References/bash/#caseswitch","title":"Case/switch","text":"<pre><code>case \"$1\" in\nstart | up)\nvagrant up\n    ;;\n\n*)\necho \"Usage: $0 {start|stop|ssh}\"\n;;\nesac\n</code></pre>"},{"location":"References/bash/#sourcerelative","title":"Source relative","text":"<pre><code>source \"${0%/*}/../share/foo.sh\"\n</code></pre>"},{"location":"References/bash/#printf","title":"printf","text":"<pre><code>printf \"Hello %s, I'm %s\" Sven Olga\n#=&gt; \"Hello Sven, I'm Olga\n\nprintf \"1 + 1 = %d\" 2\n#=&gt; \"1 + 1 = 2\"\n\nprintf \"This is how you print a float: %f\" 2\n#=&gt; \"This is how you print a float: 2.000000\"\n\nprintf '%s\\n' '#!/bin/bash' 'echo hello' &gt;file\n# format string is applied to each group of arguments\nprintf '%i+%i=%i\\n' 1 2 3  4 5 9\n</code></pre>"},{"location":"References/bash/#transformstrings","title":"Transform strings","text":""},{"location":"References/bash/#command-option-description","title":"Command option Description","text":"<ul> <li><code>-c</code> Operations apply to characters not in the given set</li> <li><code>-d</code> Delete characters</li> <li><code>-s</code> Replaces repeated characters with single occurrence</li> <li><code>-t</code> Truncates</li> <li><code>[:upper:]</code> All upper case letters</li> <li><code>[:lower:]</code> All lower case letters</li> <li><code>[:digit:]</code> All digits</li> <li><code>[:space:]</code> All whitespace</li> <li><code>[:alpha:]</code> All letters</li> <li><code>[:alnum:]</code> All letters and digits</li> </ul>"},{"location":"References/bash/#example","title":"Example","text":"<pre><code>echo \"Welcome To Devhints\" | tr '[:lower:]' '[:upper:]'\nWELCOME TO DEVHINTS\n</code></pre>"},{"location":"References/bash/#directoryofscript","title":"Directory of script","text":"<pre><code>dir=${0%/*}\n</code></pre>"},{"location":"References/bash/#gettingoptions","title":"Getting options","text":"<pre><code>while [[ \"$1\" =~ ^- &amp;&amp; ! \"$1\" == \"--\" ]]; do case $1 in\n-V | --version )\necho \"$version\"\nexit\n;;\n-s | --string )\nshift; string=$1\n;;\n-f | --flag )\nflag=1\n;;\nesac; shift; done\nif [[ \"$1\" == '--' ]]; then shift; fi\n</code></pre>"},{"location":"References/bash/#heredoc","title":"Heredoc","text":"<pre><code>cat &lt;&lt;END\nhello world\nEND\n</code></pre>"},{"location":"References/bash/#readinginput","title":"Reading input","text":"<pre><code>echo -n \"Proceed? [y/n]: \"\nread -r ans\necho \"$ans\"\n</code></pre> <p>The <code>-r</code> option disables a peculiar legacy behavior with backslashes.</p> <pre><code>read -n 1 ans    # Just one character\n</code></pre>"},{"location":"References/bash/#specialvariables","title":"Special variables","text":"<p>Expression Description\\</p> <ul> <li><code>$?</code> Exit status of last task</li> <li><code>$!</code> PID of last background task</li> <li><code>$$</code> PID of shell</li> <li><code>$0</code> Filename of the shell script</li> <li><code>$_</code> Last argument of the previous command</li> <li><code>${PIPESTATUS[n]}</code> return value of piped commands (array)</li> </ul> <p>See Special\\ parameters.</p>"},{"location":"References/bash/#gotopreviousdirectory","title":"Go to previous directory","text":"<pre><code>pwd # /home/user/foo\ncd bar/\npwd # /home/user/foo/bar\ncd -\npwd # /home/user/foo\n</code></pre>"},{"location":"References/bash/#checkforcommandsresult","title":"Check for command's result","text":"<pre><code>if ping -c 1 google.com; then\necho \"It appears you have a working internet connection\"\nfi\n</code></pre>"},{"location":"References/bash/#grepcheck","title":"Grep check","text":"<pre><code>if grep -q 'foo' ~/.bash_history; then\necho \"You appear to have typed 'foo' in the past\"\nfi\n</code></pre>"},{"location":"References/bash/#bash-references","title":"Bash References","text":"<ul> <li>Bash Guide</li> <li>Bash Hackers Wiki</li> <li>Bash Reference Manual</li> <li>Learn Bash</li> <li>ShellCheck</li> <li>Shell vars</li> </ul>"},{"location":"References/file_/","title":"File","text":"<p>bash_scripting_cheatsheet.html git_notes.html how_to.html jupyter_refs.html learning_python3.html mac_commands.html markdown.html rust_utilities.html sort_url_list.html technology_references.html tvdb_v4.html url_list.html</p>"},{"location":"References/git_notes./","title":"git Notes","text":"<ul> <li>Fork Your Own Repo</li> <li>How to Rename a Local and Remote Git     Branch</li> </ul>"},{"location":"References/git_notes./#forkyourownrepo","title":"Fork Your Own Repo","text":"<p>How to fork your own repo in Github</p> <p>While forking your own repo sounds like it should be fairly obvious, its definitely not.</p> <p>I searched around a bit and found a bunch of circular references to other posts about how to do it, and none were very clear. So I'm posting this to try to make it as clear as possible how to fork your own repo (and its quite easy actually).</p> <p>Create a new blank repo\\ First, create a new blank repo that you want to ultimately be a fork of your existing repo. We will call this new repo \"forkedrepo\".</p> <p>Clone that new repo on your local machine\\ Next, make a clone of that new blank repo on your machine:</p> <pre><code>git clone https://github.com/YOURUSERNAME/forkedrepo.git\n</code></pre> <p>Add an upstream remote to your original repo\\ While this technically isn't forking, its basically the same thing. What you want to do is add a remote upstream to this new empty repo that points to your original repo you want to fork:</p> <pre><code>git remote add upstream https://github.com/YOURUSERNAME/originalrepo.git\n</code></pre> <p>Pull down a copy of the original repo to your new repo\\ The last step is to pull down a complete copy of the original repo:</p> <pre><code>git fetch upstream\n\ngit merge upstream/master\n</code></pre> <p>Or, an easier way:</p> <pre><code>git pull upstream master\n</code></pre> <p>Now, you can work on your new repo to your hearts content. If any changes are made to the original repo, simply execute a git pull upstream master and your new repo will receive the updates that were made to the original!</p> <p>Psst: Don't forget to upload the fresh copy of your new repo back up to git:</p> <pre><code>git push origin master\n</code></pre> <p>.gitignore\\ Even though you've added them to your .gitignore, sometimes Git will not ignore\\ them once it already knows about them. You can fix it by executing these:</p> <pre><code>git rm -r \u2014cached\ngit add\ngit commit -m \u201cIgnore eclipse files\u201d\n</code></pre> <p>Staged\\ To remove the file from the local staged changes list and cache we can use a simple commands.</p> <pre><code>git rm \u2014cached &lt;FILE&gt;\ngit config \u2014global core.excludesfile ~/.gitignore_global\ngit check-ignore [&lt;options&gt;] &lt;pathname&gt;\nhttps://git-scm.com/docs/git-check-ignore\ngit check-ignore bin/a.dll \u2014verbose\n</code></pre> <p>Branch</p> <pre><code>git branch -m &lt;old-name&gt; &lt;new-name&gt;\ngit status\n</code></pre> <p>Push an existing repository from the command line</p> <pre><code>git remote add origin https://github.com/JohnTelford/delete.git\ngit branch -M main\ngit push -u origin main\n</code></pre> <p>After this, you should see something along the lines of</p> <pre><code>On branch master\nYour branch is ahead of \u2018origin/master\u2019 by 2 commits.\n  (use \u201cgit push\u201d to publish your local commits)\n\nnothing to commit, working tree clean\n</code></pre> <p>The important part is the \"2 commits\"! From here, go ahead and type in:</p> <pre><code>git reset HEAD~&lt;HOWEVER MANY COMMITS YOU WERE BEHIND&gt;\n</code></pre> <p>So, for the example above, one would type:</p> <pre><code>git reset HEAD~2\n</code></pre> <p>After you typed that, your <code>git status</code> should say:</p> <pre><code>On branch master\nYour branch is up to date with \u2018origin/master\u2019.\n\nnothing to commit, working tree clean\n</code></pre> <p>From there, you can delete the large file (assuming you haven't already done so), and you should be able to re-commit everything without losing your work.\\ I know this isn't a super fancy reply, but I hope it helps!</p>"},{"location":"References/git_notes./#howtorenamealocalandremotegitbranch","title":"How to Rename a Local and Remote Git Branch","text":"<p>How to Rename a Local and Remote Git Branch -- A Quick Guide</p>"},{"location":"References/how_to./","title":"How To","text":"<ul> <li>macOS How-to</li> <li>Shortcut Document Links</li> <li>Use HTML to set image size</li> </ul>"},{"location":"References/how_to./#macoshow-to","title":"macOS How-to","text":"<p>Apple macOS How-to guides and examples</p>"},{"location":"References/how_to./#shortcutdocumentlinks","title":"Shortcut Document Links","text":"<ul> <li><code>IA Writer</code><ul> <li>Create new document in <code>Commands</code> folder</li> <li>Select new document</li> <li>Run <code>ia-markd script</code> to invoke <code>marked 2</code></li> </ul> </li> <li>Select <code>marked 2</code> window<ul> <li>Export<ul> <li>HTML</li> <li>Output to <code>Dropbox/Commands/&lt;document&gt;</code></li> </ul> </li> </ul> </li> <li>Manage Shortcuts<ul> <li>Select Commands Group</li> <li>Create Shortcut to <code>Dropbox/Commands/&lt;document&gt;</code></li> </ul> </li> </ul>"},{"location":"References/how_to./#usehtmltosetimagesize","title":"Use HTML to set image size","text":"<pre><code>&lt;img src=\"APC_1021.jpg\" alt=\"Build Fence and Gate\" height=\"500\" width= \"500\"/&gt;\n</code></pre>"},{"location":"References/jupyter_refs/","title":"Jupyter - Python References","text":""},{"location":"References/jupyter_refs/#jupyter","title":"Jupyter","text":"<ul> <li> <p>28 Jupyter Notebook Tips, Tricks, and     Shortcuts</p> </li> <li> <p>datetime</p> </li> <li> <p>ipsheet</p> </li> <li> <p>Jupyter Discourse     Forum</p> </li> <li> <p>Jupyter Notebook keyboard     shortcuts</p> </li> <li> <p>Jupyter     Widgets</p> </li> <li> <p>List of Useful Magic Commands in     Jupyter</p> </li> </ul>"},{"location":"References/jupyter_refs/#jupyterlab","title":"Jupyter Lab","text":"<ul> <li> <p>JupyterLab</p> </li> <li> <p>JupyterLab Documentation</p> </li> <li> <p>JuputerLab     FAQ</p> </li> </ul>"},{"location":"References/jupyter_refs/#pandasnumpy","title":"Pandas &amp; NumPy","text":""},{"location":"References/jupyter_refs/#dataanalysis","title":"Data Analysis","text":"<ul> <li> <p>Analyze Data with Pandas &amp;     Numpy - Datagy</p> </li> <li> <p>Python for Data Analysis Book -     Wesm</p> </li> <li> <p>Built-In Data Structures, Functions, and     Files</p> </li> <li> <p>Data Cleaning and     Preparation</p> </li> <li> <p>regex</p> </li> </ul>"},{"location":"References/jupyter_refs/#pandas","title":"Pandas","text":"<ul> <li> <p>Pandas Cheat Sheet for Data     Science</p> </li> <li> <p>How to Add / Insert a Row into a Pandas     DataFrame</p> </li> <li> <p>Pandas     Documentation -     pandas</p> </li> <li> <p>Pandas String     Methods</p> </li> <li> <p>User Guide     Cookbook</p> </li> <li> <p>User Guide     Pandas</p> </li> <li> <p>Pandas vs SQL Cheat     Sheet</p> </li> </ul>"},{"location":"References/jupyter_refs/#numpy","title":"NumPy","text":"<ul> <li> <p>NumPy</p> </li> <li> <p>NumPy documentation</p> </li> </ul>"},{"location":"References/jupyter_refs/#python","title":"Python","text":"<ul> <li> <p>Basic Input, Output, and String Formatting in     Python</p> </li> <li> <p>How To Create Stunning Visualizations Using Python From     Scratch</p> </li> <li> <p>Ipython As A System     Shell</p> </li> <li> <p>Learning-Python--3</p> </li> <li> <p>PEP 8 -- Style Guide for Python     Code</p> </li> <li> <p>PyGithub</p> </li> <li> <p>Python CSV File Reading and     Writing</p> </li> <li> <p>Python f-String Tips &amp; Cheat     Sheets</p> </li> <li> <p>Python f-String Tutorial</p> </li> <li> <p>Python f-Strings - PEP 498 - Literal String     Interpolation</p> </li> <li> <p>Python Standard Library</p> </li> <li> <p>Python Tips</p> </li> <li> <p>System Shell     Access</p> </li> <li> <p>Python Regular Expression     Operations</p> </li> </ul>"},{"location":"References/jupyter_refs/#regex","title":"Regex","text":"<ul> <li>Regular Expressions     Tutorial</li> </ul>"},{"location":"References/jupyter_refs/#miniconda","title":"Miniconda","text":"<ul> <li> <p>Miniconda</p> </li> <li> <p>How To Use Miniconda With Python and     JupyterLab</p> </li> <li> <p>Conda     Cheatsheet</p> </li> </ul>"},{"location":"References/jupyter_refs/#cheetsheets","title":"Cheet Sheets","text":"<ul> <li> <p>Jupyter keyboard     shortcuts</p> </li> <li> <p>Jupyter     Notebook</p> </li> <li> <p>Matplotlib Cheat     Sheet</p> </li> <li> <p>NumPy Cheat     Sheet</p> </li> <li> <p>Pandas Cheat     Sheet</p> </li> <li> <p>Scikit-Learn Cheat     Sheet</p> </li> </ul>"},{"location":"References/jupyter_refs/#visualstudiocode","title":"Visual Studio Code","text":"<ul> <li> <p>Getting Started with Python in VS     Code</p> </li> <li> <p>Jupyter Notebooks in VS     Code</p> </li> <li> <p>Working with GitHub in VS     Code</p> </li> </ul>"},{"location":"References/learning_python3./","title":"Learning python3.","text":"<p>Right-click -&gt; \"save link as\" https://gist.githubusercontent.com/kenjyco/69eeb503125035f21a9d/raw/learning-python3.ipynb to get most up-to-date version of this notebook file.\\ Click -&gt; https://mybinder.org/v2/gist/kenjyco/69eeb503125035f21a9d/HEAD?filepath=learning-python3.ipynb to load this notebook in the browser via mybinder.org</p>"},{"location":"References/learning_python3./#quick-note-about-jupyter-cells","title":"Quick note about Jupyter cells","text":"<p>When you are editing a cell in Jupyter notebook, you need to re-run the cell by pressing <code>&lt;Shift&gt; + &lt;Enter&gt;</code>. This will allow changes you made to be available to other cells.</p> <p>Use <code>&lt;Enter&gt;</code> to make new lines inside a cell you are editing.</p>"},{"location":"References/learning_python3./#code-cells","title":"Code cells","text":"<p>Re-running will execute any statements you have written. To edit an existing code cell, click on it.</p>"},{"location":"References/learning_python3./#markdown-cells","title":"Markdown cells","text":"<p>Re-running will render the markdown text. To edit an existing markdown cell, double-click on it.</p>"},{"location":"References/learning_python3./#common-jupyter-operations","title":"Common Jupyter operations","text":"<p>Near the top of the Jupyter notebook window, there are a row of menu options (<code>File</code>, <code>Edit</code>, <code>View</code>, <code>Insert</code>, ...) and a row of tool bar icons (disk, plus sign, scissors, 2 files, clipboard and file, up arrow, ...).</p>"},{"location":"References/learning_python3./#inserting-and-removing-cells","title":"Inserting and removing cells","text":"<ul> <li>Use the \"plus sign\" icon to insert a cell below the currently     selected cell</li> <li>Use \"Insert\" -&gt; \"Insert Cell Above\" from the menu to insert above</li> </ul>"},{"location":"References/learning_python3./#clear-the-output-of-all-cells","title":"Clear the output of all cells","text":"<ul> <li>Use \"Kernel\" -&gt; \"Restart\" from the menu to restart the kernel<ul> <li>click on \"clear all outputs &amp; restart\" to have all the output     cleared</li> </ul> </li> </ul>"},{"location":"References/learning_python3./#save-your-notebook-file-locally","title":"Save your notebook file locally","text":"<ul> <li>Clear the output of all cells</li> <li>Use \"File\" -&gt; \"Download as\" -&gt; \"IPython Notebook (.ipynb)\" to     download a notebook file representing your https://mybinder.org     session</li> </ul>"},{"location":"References/learning_python3./#references","title":"References","text":"<ul> <li>https://jupyter-notebook.readthedocs.io/en/latest/notebook.html</li> <li>https://mybinder.readthedocs.io/en/latest/introduction.html</li> <li>https://docs.python.org/3/tutorial/index.html</li> <li>https://docs.python.org/3/tutorial/introduction.html</li> <li>https://daringfireball.net/projects/markdown/syntax</li> </ul>"},{"location":"References/learning_python3./#python-objects-basic-types-and-variables","title":"Python objects, basic types, and variables","text":"<p>Everything in Python is an object and every object in Python has a type. Some of the basic types include:</p> <ul> <li><code>int</code> (integer; a whole number with no decimal place)<ul> <li><code>10</code></li> <li><code>-3</code></li> </ul> </li> <li><code>float</code> (float; a number that has a decimal place)<ul> <li><code>7.41</code></li> <li><code>-0.006</code></li> </ul> </li> <li><code>str</code> (string; a sequence of characters enclosed in single     quotes, double quotes, or triple quotes)<ul> <li><code>'this is a string using single quotes'</code></li> <li><code>\"this is a string using double quotes\"</code></li> <li><code>'''this is a triple quoted string using single quotes'''</code></li> <li><code>\"\"\"this is a triple quoted string using double quotes\"\"\"</code></li> </ul> </li> <li><code>bool</code> (boolean; a binary value that is either true or false)<ul> <li><code>True</code></li> <li><code>False</code></li> </ul> </li> <li><code>NoneType</code> (a special type representing the absence of a value)<ul> <li><code>None</code></li> </ul> </li> </ul> <p>In Python, a variable is a name you specify in your code that maps to a particular object, object instance, or value.</p> <p>By defining variables, we can refer to things by names that make sense to us. Names for variables can only contain letters, underscores (<code>_</code>), or numbers (no spaces, dashes, or other characters). Variable names must start with a letter or underscore.</p>"},{"location":"References/learning_python3./#basic-operators","title":"Basic operators","text":"<p>In Python, there are different types of operators (special symbols) that operate on different values. Some of the basic operators include:</p> <ul> <li>arithmetic operators<ul> <li><code>+</code> (addition)</li> <li><code>-</code> (subtraction)</li> <li><code>*</code> (multiplication)</li> <li><code>/</code> (division)</li> <li><code>**</code> (exponent)</li> </ul> </li> <li>assignment operators<ul> <li><code>=</code> (assign a value)</li> <li><code>+=</code> (add and re-assign; increment)</li> <li><code>-=</code> (subtract and re-assign; decrement)</li> <li><code>*=</code> (multiply and re-assign)</li> </ul> </li> <li>comparison operators (return either <code>True</code> or <code>False</code>)<ul> <li><code>==</code> (equal to)</li> <li><code>!=</code> (not equal to)</li> <li><code>&lt;</code> (less than)</li> <li><code>&lt;=</code> (less than or equal to)</li> <li><code>&gt;</code> (greater than)</li> <li><code>&gt;=</code> (greater than or equal to)</li> </ul> </li> </ul> <p>When multiple operators are used in a single expression, operator precedence determines which parts of the expression are evaluated in which order. Operators with higher precedence are evaluated first (like PEMDAS in math). Operators with the same precedence are evaluated from left to right.</p> <ul> <li><code>()</code> parentheses, for grouping</li> <li><code>**</code> exponent</li> <li><code>*</code>, <code>/</code> multiplication and division</li> <li><code>+</code>, <code>-</code> addition and subtraction</li> <li><code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code> comparisons</li> </ul> <p>See https://docs.python.org/3/reference/expressions.html#operator-precedence</p> <pre><code># Assigning some numbers to different variables\nnum1 = 10\nnum2 = -3\nnum3 = 7.41\nnum4 = -.6\nnum5 = 7\nnum6 = 3\nnum7 = 11.11\n</code></pre> <pre><code># Addition\nnum1 + num2\n</code></pre> <pre><code># Subtraction\nnum2 - num3\n</code></pre> <pre><code># Multiplication\nnum3 * num4\n</code></pre> <pre><code># Division\nnum4 / num5\n</code></pre> <pre><code># Exponent\nnum5 ** num6\n</code></pre> <pre><code># Increment existing variable\nnum7 += 4\nnum7\n</code></pre> <pre><code># Decrement existing variable\nnum6 -= 2\nnum6\n</code></pre> <pre><code># Multiply &amp; re-assign\nnum3 *= 5\nnum3\n</code></pre> <pre><code># Assign the value of an expression to a variable\nnum8 = num1 + num2 * num3\nnum8\n</code></pre> <pre><code># Are these two expressions equal to each other?\nnum1 + num2 == num5\n</code></pre> <pre><code># Are these two expressions not equal to each other?\nnum3 != num4\n</code></pre> <pre><code># Is the first expression less than the second expression?\nnum5 &lt; num6\n</code></pre> <pre><code># Is this expression True?\n5 &gt; 3 &gt; 1\n</code></pre> <pre><code># Is this expression True?\n5 &gt; 3 &lt; 4 == 3 + 1\n</code></pre> <pre><code># Assign some strings to different variables\nsimple_string1 = 'an example'\nsimple_string2 = \"oranges \"\n</code></pre> <pre><code># Addition\nsimple_string1 + ' of using the + operator'\n</code></pre> <pre><code># Notice that the string was not modified\nsimple_string1\n</code></pre> <pre><code># Multiplication\nsimple_string2 * 4\n</code></pre> <pre><code># This string wasn't modified either\nsimple_string2\n</code></pre> <pre><code># Are these two expressions equal to each other?\nsimple_string1 == simple_string2\n</code></pre> <pre><code># Are these two expressions equal to each other?\nsimple_string1 == 'an example'\n</code></pre> <pre><code># Add and re-assign\nsimple_string1 += ' that re-assigned the original string'\nsimple_string1\n</code></pre> <pre><code># Multiply and re-assign\nsimple_string2 *= 3\nsimple_string2\n</code></pre> <pre><code># Note: Subtraction, division, and decrement operators do not apply to strings.\n</code></pre>"},{"location":"References/learning_python3./#basic-containers","title":"Basic containers","text":"<p>Note: mutable objects can be modified after creation and immutable objects cannot.</p> <p>Containers are objects that can be used to group other objects together. The basic container types include:</p> <ul> <li><code>str</code> (string: immutable; indexed by integers; items are stored     in the order they were added)</li> <li><code>list</code> (list: mutable; indexed by integers; items are stored in     the order they were added)<ul> <li><code>[3, 5, 6, 3, 'dog', 'cat', False]</code></li> </ul> </li> <li><code>tuple</code> (tuple: immutable; indexed by integers; items are stored     in the order they were added)<ul> <li><code>(3, 5, 6, 3, 'dog', 'cat', False)</code></li> </ul> </li> <li><code>set</code> (set: mutable; not indexed at all; items are NOT stored in     the order they were added; can only contain immutable objects; does     NOT contain duplicate objects)<ul> <li><code>{3, 5, 6, 3, 'dog', 'cat', False}</code></li> </ul> </li> <li><code>dict</code> (dictionary: mutable; key-value pairs are indexed by     immutable keys; items are NOT stored in the order they were added)<ul> <li><code>{'name': 'Jane', 'age': 23, 'fav_foods': ['pizza', 'fruit', 'fish']}</code></li> </ul> </li> </ul> <p>When defining lists, tuples, or sets, use commas (,) to separate the individual items. When defining dicts, use a colon (:) to separate keys from values and commas (,) to separate the key-value pairs.</p> <p>Strings, lists, and tuples are all sequence types that can use the <code>+</code>, <code>*</code>, <code>+=</code>, and <code>*=</code> operators.</p> <pre><code># Assign some containers to different variables\nlist1 = [3, 5, 6, 3, 'dog', 'cat', False]\ntuple1 = (3, 5, 6, 3, 'dog', 'cat', False)\nset1 = {3, 5, 6, 3, 'dog', 'cat', False}\ndict1 = {'name': 'Jane', 'age': 23, 'fav_foods': ['pizza', 'fruit', 'fish']}\n</code></pre> <pre><code># Items in the list object are stored in the order they were added\nlist1\n</code></pre> <pre><code># Items in the tuple object are stored in the order they were added\ntuple1\n</code></pre> <pre><code># Items in the set object are not stored in the order they were added\n# Also, notice that the value 3 only appears once in this set object\nset1\n</code></pre> <pre><code># Items in the dict object are not stored in the order they were added\ndict1\n</code></pre> <pre><code># Add and re-assign\nlist1 += [5, 'grapes']\nlist1\n</code></pre> <pre><code># Add and re-assign\ntuple1 += (5, 'grapes')\ntuple1\n</code></pre> <pre><code># Multiply\n[1, 2, 3, 4] * 2\n</code></pre> <pre><code># Multiply\n(1, 2, 3, 4) * 3\n</code></pre>"},{"location":"References/learning_python3./#accessing-data-in-containers","title":"Accessing data in containers","text":"<p>For strings, lists, tuples, and dicts, we can use subscript notation (square brackets) to access data at an index.</p> <ul> <li>strings, lists, and tuples are indexed by integers, starting at     0 for first item<ul> <li>these sequence types also support accesing a range of items,     known as slicing</li> <li>use negative indexing to start at the back of the sequence</li> </ul> </li> <li>dicts are indexed by their keys</li> </ul> <p>Note: sets are not indexed, so we cannot use subscript notation to access data elements.</p> <pre><code># Access the first item in a sequence\nlist1[0]\n</code></pre> <pre><code># Access the last item in a sequence\ntuple1[-1]\n</code></pre> <pre><code># Access a range of items in a sequence\nsimple_string1[3:8]\n</code></pre> <pre><code># Access a range of items in a sequence\ntuple1[:-3]\n</code></pre> <pre><code># Access a range of items in a sequence\nlist1[4:]\n</code></pre> <pre><code># Access an item in a dictionary\ndict1['name']\n</code></pre> <pre><code># Access an element of a sequence in a dictionary\ndict1['fav_foods'][2]\n</code></pre>"},{"location":"References/learning_python3./#python-built-in-functions-and-callables","title":"Python built-in functions and callables","text":"<p>A function is a Python object that you can \"call\" to perform an action or compute and return another object. You call a function by placing parentheses to the right of the function name. Some functions allow you to pass arguments inside the parentheses (separating multiple arguments with a comma). Internal to the function, these arguments are treated like variables.</p> <p>Python has several useful built-in functions to help you work with different objects and/or your environment. Here is a small sample of them:</p> <ul> <li><code>type(obj)</code> to determine the type of an object</li> <li><code>len(container)</code> to determine how many items are in a container</li> <li><code>callable(obj)</code> to determine if an object is callable</li> <li><code>sorted(container)</code> to return a new list from a container, with     the items sorted</li> <li><code>sum(container)</code> to compute the sum of a container of numbers</li> <li><code>min(container)</code> to determine the smallest item in a container</li> <li><code>max(container)</code> to determine the largest item in a container</li> <li><code>abs(number)</code> to determine the absolute value of a number</li> <li><code>repr(obj)</code> to return a string representation of an object</li> </ul> <p>Complete list of built-in functions: https://docs.python.org/3/library/functions.html</p> <p>There are also different ways of defining your own functions and callable objects that we will explore later.</p> <pre><code># Use the type() function to determine the type of an object\ntype(simple_string1)\n</code></pre> <pre><code># Use the len() function to determine how many items are in a container\nlen(dict1)\n</code></pre> <pre><code># Use the len() function to determine how many items are in a container\nlen(simple_string2)\n</code></pre> <pre><code># Use the callable() function to determine if an object is callable\ncallable(len)\n</code></pre> <pre><code># Use the callable() function to determine if an object is callable\ncallable(dict1)\n</code></pre> <pre><code># Use the sorted() function to return a new list from a container, with the items sorted\nsorted([10, 1, 3.6, 7, 5, 2, -3])\n</code></pre> <pre><code># Use the sorted() function to return a new list from a container, with the items sorted\n# - notice that capitalized strings come first\nsorted(['dogs', 'cats', 'zebras', 'Chicago', 'California', 'ants', 'mice'])\n</code></pre> <pre><code># Use the sum() function to compute the sum of a container of numbers\nsum([10, 1, 3.6, 7, 5, 2, -3])\n</code></pre> <pre><code># Use the min() function to determine the smallest item in a container\nmin([10, 1, 3.6, 7, 5, 2, -3])\n</code></pre> <pre><code># Use the min() function to determine the smallest item in a container\nmin(['g', 'z', 'a', 'y'])\n</code></pre> <pre><code># Use the max() function to determine the largest item in a container\nmax([10, 1, 3.6, 7, 5, 2, -3])\n</code></pre> <pre><code># Use the max() function to determine the largest item in a container\nmax('gibberish')\n</code></pre> <pre><code># Use the abs() function to determine the absolute value of a number\nabs(10)\n</code></pre> <pre><code># Use the abs() function to determine the absolute value of a number\nabs(-12)\n</code></pre> <pre><code># Use the repr() function to return a string representation of an object\nrepr(set1)\n</code></pre>"},{"location":"References/learning_python3./#python-object-attributes-%28methods-and-properties%29","title":"Python object attributes (methods and properties)","text":"<p>Different types of objects in Python have different attributes that can be referred to by name (similar to a variable). To access an attribute of an object, use a dot (<code>.</code>) after the object, then specify the attribute (i.e. <code>obj.attribute</code>)</p> <p>When an attribute of an object is a callable, that attribute is called a method. It is the same as a function, only this function is bound to a particular object.</p> <p>When an attribute of an object is not a callable, that attribute is called a property. It is just a piece of data about the object, that is itself another object.</p> <p>The built-in <code>dir()</code> function can be used to return a list of an object's attributes.</p>"},{"location":"References/learning_python3./#some-methods-on-string-objects","title":"Some methods on string objects","text":"<ul> <li><code>.capitalize()</code> to return a capitalized version of the string     (only first char uppercase)</li> <li><code>.upper()</code> to return an uppercase version of the string (all     chars uppercase)</li> <li><code>.lower()</code> to return an lowercase version of the string (all     chars lowercase)</li> <li><code>.count(substring)</code> to return the number of occurences of the     substring in the string</li> <li><code>.startswith(substring)</code> to determine if the string starts with     the substring</li> <li><code>.endswith(substring)</code> to determine if the string ends with the     substring</li> <li><code>.replace(old, new)</code> to return a copy of the string with     occurences of the \"old\" replaced by \"new\"</li> </ul> <pre><code># Assign a string to a variable\na_string = 'tHis is a sTriNg'\n</code></pre> <pre><code># Return a capitalized version of the string\na_string.capitalize()\n</code></pre> <pre><code># Return an uppercase version of the string\na_string.upper()\n</code></pre> <pre><code># Return a lowercase version of the string\na_string.lower()\n</code></pre> <pre><code># Notice that the methods called have not actually modified the string\na_string\n</code></pre> <pre><code># Count number of occurences of a substring in the string\na_string.count('i')\n</code></pre> <pre><code># Count number of occurences of a substring in the string after a certain position\na_string.count('i', 7)\n</code></pre> <pre><code># Count number of occurences of a substring in the string\na_string.count('is')\n</code></pre> <pre><code># Does the string start with 'this'?\na_string.startswith('this')\n</code></pre> <pre><code># Does the lowercase string start with 'this'?\na_string.lower().startswith('this')\n</code></pre> <pre><code># Does the string end with 'Ng'?\na_string.endswith('Ng')\n</code></pre> <pre><code># Return a version of the string with a substring replaced with something else\na_string.replace('is', 'XYZ')\n</code></pre> <pre><code># Return a version of the string with a substring replaced with something else\na_string.replace('i', '!')\n</code></pre> <pre><code># Return a version of the string with the first 2 occurences a substring replaced with something else\na_string.replace('i', '!', 2)\n</code></pre>"},{"location":"References/learning_python3./#some-methods-on-list-objects","title":"Some methods on list objects","text":"<ul> <li><code>.append(item)</code> to add a single item to the list</li> <li><code>.extend([item1, item2, ...])</code> to add multiple items to the list</li> <li><code>.remove(item)</code> to remove a single item from the list</li> <li><code>.pop()</code> to remove and return the item at the end of the list</li> <li><code>.pop(index)</code> to remove and return an item at an index</li> </ul> <pre><code>```\n</code></pre> <p>python</p> <pre><code>## Some methods on set objects\n\n- **`.add(item)`** to add a single item to the set\n- **`.update([item1, item2, ...])`** to add multiple items to the set\n- **`.update(set2, set3, ...)`** to add items from all provided sets to the set\n- **`.remove(item)`** to remove a single item from the set\n- **`.pop()`** to remove and return a random item from the set\n- **`.difference(set2)`** to return items in the set that are not in another set\n- **`.intersection(set2)`** to return items in both sets\n- **`.union(set2)`** to return items that are in either set\n- **`.symmetric_difference(set2)`** to return items that are only in one set (not both)\n- **`.issuperset(set2)`** does the set contain everything in the other set?\n- **`.issubset(set2)`** is the set contained in the other set?\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Some methods on dict objects\n\n- **`.update([(key1, val1), (key2, val2), ...])`** to add multiple key-value pairs to the dict\n- **`.update(dict2)`** to add all keys and values from another dict to the dict\n- **`.pop(key)`** to remove key and return its value from the dict (error if key not found)\n- **`.pop(key, default_val)`** to remove key and return its value from the dict (or return default_val if key not found)\n- **`.get(key)`** to return the value at a specified key in the dict (or None if key not found)\n- **`.get(key, default_val)`** to return the value at a specified key in the dict (or default_val if key not found)\n- **`.keys()`** to return a list of keys in the dict\n- **`.values()`** to return a list of values in the dict\n- **`.items()`** to return a list of key-value pairs (tuples) in the dict\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Positional arguments and keyword arguments to callables\n\nYou can call a function/method in a number of different ways:\n\n- `func()`: Call `func` with no arguments\n- `func(arg)`: Call `func` with one positional argument\n- `func(arg1, arg2)`: Call `func` with two positional arguments\n- `func(arg1, arg2, ..., argn)`: Call `func` with many positional arguments\n- `func(kwarg=value)`: Call `func` with one keyword argument \n- `func(kwarg1=value1, kwarg2=value2)`: Call `func` with two keyword arguments\n- `func(kwarg1=value1, kwarg2=value2, ..., kwargn=valuen)`: Call `func` with many keyword arguments\n- `func(arg1, arg2, kwarg1=value1, kwarg2=value2)`: Call `func` with positonal arguments and keyword arguments\n- `obj.method()`: Same for `func`.. and every other `func` example\n\nWhen using **positional arguments**, you must provide them in the order that the function defined them (the function's **signature**).\n\nWhen using **keyword arguments**, you can provide the arguments you want, in any order you want, as long as you specify each argument's name.\n\nWhen using positional and keyword arguments, positional arguments must come first.\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Formatting strings and using placeholders\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Python \"for loops\"\n\nIt is easy to **iterate** over a collection of items using a **for loop**. The strings, lists, tuples, sets, and dictionaries we defined are all **iterable** containers.\n\nThe for loop will go through the specified container, one item at a time, and provide a temporary variable for the current item. You can use this temporary variable like a normal variable.\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Python \"if statements\" and \"while loops\"\n\nConditional expressions can be used with these two **conditional statements**.\n\nThe **if statement** allows you to test a condition and perform some actions if the condition evaluates to `True`. You can also provide `elif` and/or `else` clauses to an if statement to take alternative actions if the condition evaluates to `False`.\n\nThe **while loop** will keep looping until its conditional expression evaluates to `False`.\n\n&gt; Note: It is possible to \"loop forever\" when using a while loop with a conditional expression that never evaluates to `False`.\n&gt;\n&gt; Note: Since the **for loop** will iterate over a container of items until there are no more, there is no need to specify a \"stop looping\" condition.\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## List, set, and dict comprehensions\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Creating objects from arguments or other objects\n\nThe basic types and containers we have used so far all provide **type constructors**:\n\n- `int()`\n- `float()`\n- `str()`\n- `list()`\n- `tuple()`\n- `set()`\n- `dict()`\n\nUp to this point, we have been defining objects of these built-in types using some syntactic shortcuts, since they are so common.\n\nSometimes, you will have an object of one type that you need to convert to another type. Use the **type constructor** for the type of object you want to have, and pass in the object you currently have.\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Importing modules\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Exceptions\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Classes: Creating your own objects\n</code></pre> <p>python</p>"},{"location":"References/learning_python3./#define-a-new-class-called-thing-that-is-derived-from-the-base-python-object","title":"Define a new class called <code>Thing</code> that is derived from the base Python object","text":"<p>class Thing(object):\\ my_property = 'I am a \"Thing\"'</p>"},{"location":"References/learning_python3./#define-a-new-class-called-dictthing-that-is-derived-from-the-dict-type","title":"Define a new class called <code>DictThing</code> that is derived from the <code>dict</code> type","text":"<p>class DictThing(dict):\\ my_property = 'I am a \"DictThing\"'</p> <p>python\\ print(Thing)\\ print(type(Thing))\\ print(DictThing)\\ print(type(DictThing))\\ print(issubclass(DictThing, dict))\\ print(issubclass(DictThing, object))</p> <p>python</p>"},{"location":"References/learning_python3./#create--instances--of-our-new-classes","title":"Create \"instances\" of our new classes","text":"<p>t = Thing()\\ d = DictThing()\\ print(t)\\ print(type(t))\\ print(d)\\ print(type(d))</p> <p>python</p>"},{"location":"References/learning_python3./#interact-with-a-dictthing-instance-just-as-you-would-a-normal-dictionary","title":"Interact with a DictThing instance just as you would a normal dictionary","text":"<p>d['name'] = 'Sally'\\ print(d)</p> <p>python\\ d.update({\\ 'age': 13,\\ 'fav_foods': ['pizza', 'sushi', 'pad thai', 'waffles'],\\ 'fav_color': 'green',\\ })\\ print(d)</p> <p>python\\ print(d.my_property)</p> <pre><code>## Defining functions and methods\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Creating an initializer method for your classes\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Other \"magic methods\"\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <pre><code>## Context managers and the \"with statement\"\n</code></pre> <p>python</p> <pre><code>\n</code></pre> <p>python</p> <p>```</p>"},{"location":"References/mac_commands./","title":"Mac Commands","text":"<ul> <li>macOS bash</li> <li>Links to Apple Stuff</li> <li>Mac Shortcuts<ul> <li>Scroll</li> <li>Zoom</li> <li>Emoji</li> </ul> </li> <li>Bash Commands<ul> <li>gzip</li> <li>List Open Ports</li> <li>MacPort</li> <li>print directory and unique sort names files except .git and     .DS_Store{.wiki-link     orig-id=\"printdirectoryanduniquesortnamesfilesexcept.gitand.ds_store\"}</li> <li>Show Hidden Files</li> <li>Translate .tsv to .csv{.wiki-link     orig-id=\"translate.tsvto.csv\"}</li> </ul> </li> <li>EagleFiler Files<ul> <li>Concatenate All Library Files To A Single Library     File</li> </ul> </li> <li>iA Writer<ul> <li>Create HTLM From Markdown</li> </ul> </li> </ul>"},{"location":"References/mac_commands./#macosbash","title":"macOS bash","text":"<p>An A-Z Index of the Apple macOS command line</p>"},{"location":"References/mac_commands./#linkstoapplestuff","title":"Links to Apple Stuff","text":"<p>Links to Apple Websites, Books, Apps &amp; Utilities</p>"},{"location":"References/mac_commands./#macshortcuts","title":"Mac Shortcuts","text":""},{"location":"References/mac_commands./#scroll","title":"Scroll","text":"<ul> <li>Fn--Up Arrow: Page Up: Scroll up one page.</li> <li>Fn--Down Arrow: Page Down: Scroll down one page.</li> <li>Fn--Left Arrow: Home: Scroll to the beginning of a document.</li> <li>Fn--Right Arrow: End: Scroll to the end of a document.</li> </ul>"},{"location":"References/mac_commands./#zoom","title":"Zoom","text":"<ul> <li>zoom in (Option-Command-Equal)</li> <li>zoom out (Option-Command-Minus)</li> <li>switch between the two settings (Option-Command--8).</li> </ul>"},{"location":"References/mac_commands./#emoji","title":"Emoji","text":"<ul> <li>Click on any text input area, and when you see a cursor, press     Control+Command+Space</li> </ul>"},{"location":"References/mac_commands./#bashcommands","title":"Bash Commands","text":""},{"location":"References/mac_commands./#gzip","title":"gzip","text":"<pre><code>gzip -c filename.ext &gt; anotherfile.gz\n</code></pre>"},{"location":"References/mac_commands./#listopenports","title":"List Open Ports","text":"<pre><code>sudo lsof -i :3000`\n</code></pre>"},{"location":"References/mac_commands./#macport","title":"MacPort","text":"<pre><code>sudo port &lt;app&gt;\n</code></pre> <pre><code>sudo port reclaim\n</code></pre> <pre><code>sudo port selfupdate\n</code></pre> <pre><code>sudo port upgrade outdated\n</code></pre>"},{"location":"References/mac_commands./#printdirectoryanduniquesortnamesfilesexcept.gitand.ds_store","title":"print directory and unique sort names files except .git and .DS_Store","text":"<pre><code>find . -name .git -prune -name \u2018.DS_Store\u2019 -prune -o -print | sed -e \u201cs/[^-][^\\/]*\\// |/g\u201d -e \u201cs/|\\([^ ]\\)/|-\\1/\u201c | gawk -F\u201d-\u201c \u2018{ print $2}\u2019 | sort -u\n</code></pre>"},{"location":"References/mac_commands./#showhiddenfiles","title":"Show Hidden Files","text":"<pre><code>cmd+shift+.\n</code></pre>"},{"location":"References/mac_commands./#translate.tsvto.csv","title":"Translate .tsv to .csv","text":"<pre><code>tr \u2018\\t\u2019 \u2018,\u2019 &lt; file.tsv &gt; file.csv\n</code></pre>"},{"location":"References/mac_commands./#eaglefilerfiles","title":"EagleFiler Files","text":""},{"location":"References/mac_commands./#concatenatealllibraryfilestoasinglelibraryfile","title":"Concatenate All Library Files To A Single Library File","text":"<pre><code>cd Dcuments/EagleFiler/\nfind . -name Files -type d -exec cp -R {} webarchive/Libs \\;\n</code></pre> <p>Use <code>broot</code> to read the concatenated libraries</p>"},{"location":"References/mac_commands./#iawriter","title":"iA Writer","text":""},{"location":"References/mac_commands./#createhtlmfrommarkdown","title":"Create HTLM From Markdown","text":"<p>Open an iA Writer markdown file with <code>markd 2</code> then\\ <code>marked 2 &gt; File &gt; Export &gt; HTML</code></p> <p>##</p>"},{"location":"References/markdown./","title":"Markdown","text":"<ul> <li>Markdown Guide</li> <li>Markdown Flavors</li> </ul>"},{"location":"References/markdown./#markdownguide","title":"Markdown Guide","text":"<p>The Markdown Guide is a free and open-source reference guide that explains how to use Markdown, the simple and easy-to-use markup language you can use to format virtually any document.</p> <ul> <li>Markdown Guide</li> </ul>"},{"location":"References/markdown./#markdownflavors","title":"Markdown Flavors","text":"<p>Markdown is a lightweight markup language for creating formatted text using a plain-text editor. John Gruber and Aaron Swartz created Markdown in 2004 as a markup language that is appealing to human readers in its source code form</p> <ul> <li> <p>Markdown 1.0.1 (18 KB)\u2009---\u200917 Dec     2004</p> <p>John Gruber and Aaron Swartz</p> </li> <li> <p>CommonMark</p> <p>A strongly defined, highly compatible specification of Markdown</p> </li> <li> <p>MultiMarkdown</p> <p>MMD is a superset of the Markdown syntax, originally created by John Gruber. It adds multiple syntax features (tables, footnotes, and citations, to name a few), in addition to the various output formats listed above (Markdown only creates HTML). Additionally, it builds in \"smart\" typography for various languages (proper left- and right-sided quotes, for example).</p> </li> <li> <p>GitHub Flavored Markdown</p> </li> <li> <p>A List of More Markdown     Flavors</p> </li> </ul>"},{"location":"References/rust_utilities./","title":"Rust Commands","text":"<ul> <li>Rust Utils</li> <li>rualdi - Rust Aliasing     Directory</li> </ul>"},{"location":"References/rust_utilities./#rustutils","title":"Rust Utils","text":"<ul> <li> <p>bandwhich\\     Display current network utilization by process, connection and     remote IP/hostname</p> </li> <li> <p>broot\\     A new file manager</p> </li> <li> <p>bat\\     like cat</p> </li> <li> <p>bottom\\     Graphical process/system monitor</p> </li> <li> <p>Crate.io</p> </li> <li> <p>exa\\     A modern replacement for ls</p> </li> <li> <p>fd\\     <code>find</code> is a simple, fast and user-friendly alternative to find</p> </li> <li> <p>gitui\\     Blazing fast terminal client for git written in Rust</p> </li> <li> <p>Lib.rs</p> </li> <li> <p>lms\\     A fast and reliable alternative to rsync for synchronizing local     files</p> </li> <li> <p>mdbook\\     Creates a book from markdown files</p> </li> <li> <p>obliviate\\     Small utility that removes file older than a certain amount of days</p> </li> <li> <p>procs\\     A modern replacement for ps</p> </li> <li> <p>rg\\     <code>ripgrep</code> searches your current directory for a regex pattern</p> </li> <li> <p>Rust regex</p> </li> <li> <p>scrubcsv\\     Remove bad lines from large CSV files and normalize the rest</p> </li> <li> <p>stdrename\\     Renams all files in a folder according to a specified naming     convention (camelCase, snake_case, kebab-case, etc)</p> </li> <li> <p>xsv\\     A high performance CSV command line toolkit</p> </li> </ul>"},{"location":"References/rust_utilities./#rualdi-rustaliasingdirectory","title":"<code>rualdi</code> - Rust Aliasing Directory","text":"<ul> <li> <p>rualdi</p> <ul> <li> <p><code>rada workdir</code>\\     Add current directory with workdir as alias</p> </li> <li> <p><code>rada www /var/www</code>\\     Add /var/www directory with www as alias</p> </li> <li> <p><code>rada stuff ~/stuff</code>\\     Works with home tild alias</p> </li> <li> <p><code>radax workdir</code>\\     Add current directory with workdir as alias and add environment     variable named <code>RAD_WORKDIR</code> in current environment and in     configuration file</p> </li> <li> <p><code>radax workdir . wd</code>\\     Add current directory with workdir as alias\\     and add environment variable named <code>RAD_WD</code> in current     environment and to the configuration file</p> </li> <li> <p><code>radx workdir wd</code>\\     Add environment variable named RAD_WD which points on alias     <code>workdir</code> in current environment and to the configuration file</p> </li> <li> <p><code>radx workdir</code>\\     Add environment variable named <code>RAD_WORKDIR</code> which points on     alias <code>workdir</code> in current environment and to the configuration     file</p> </li> <li> <p><code>radxn workdir wd</code>\\     Add environment variable named RAD_WD which points on alias     workdir` in current environment without adding it to the     configuration file</p> </li> <li> <p><code>rad www/some-site</code>\\     Perform cd in /var/www/some-site</p> </li> <li> <p><code>rad -</code>\\     Go back to previous directory as cd do it</p> </li> <li> <p><code>radr workdir</code>\\     Remove workdir alias and environment variable associated if     exists</p> </li> <li> <p><code>radr www stuff</code>\\     Works with multiple aliases at same time</p> </li> <li> <p><code>radxr workdir</code>\\     Remove environment variable which points on alias <code>workdir</code></p> </li> <li> <p><code>radl</code>\\     List aliases and environment variables</p> </li> </ul> </li> </ul>"},{"location":"References/sort_url_list./","title":"Sort url list.","text":""},{"location":"References/sort_url_list./#mkdocs-2urllinks","title":"Mkdocs--2 URL Links","text":""},{"location":"References/sort_url_list./#sorting","title":"Sorting","text":"<p><code>sort -u -o sort_url_list.md url_list.md</code></p>"},{"location":"References/sort_url_list./#imageurls","title":"Image URLS","text":"<pre><code>![Apple](/img/AppleLogo.png)\n![ChronoSync](/img/CSLogo300.png)\n![Git Desk Top](/img/gitdesktop.png)\n![Linux](/img/LinuxLogo.jpeg)\n![Microsoft](/img/MicrosoftLogo.png)\n![Mug Shot](/img/mugShot.png)\n![Web Material](/img/material.png)\n![bugFixChart](/img/bugFixChart.jpg)\n![ialogo](/img/ialogo.png)\n![iterativedev](/img/iterativedev.png)\n![mdxLogo](/img/markdownlogo.png)\n![vscodelogo](/img/vscodelogo.png)\n</code></pre>"},{"location":"References/sort_url_list./#linksurls","title":"Links URLS","text":"<pre><code>[ARM-based](https://en.wikipedia.org/wiki/ARM_architecture)\n[Apple](/img/AppleLogo.png)\n[Apple](https://www.apple.com)\n[CSS](https://developer.mozilla.org/oyn-US/docs/Web/CSS)\n[ChronoSync](#chronosync)\n[ChronoSync](/img/CSLogo300.png)\n[ChronoSync](https://www.econtechnologies.com/chronosync/overview.html)\n[Cloudflare](#deploy/cloudflare)\n[Cloudflare](https://www.cloudflare.com)\n[Commits](#commits)\n[Content Delivery Network (CDN)](https://en.wikipedia.org/wiki/Content_delivery_network)\n[Create a Site](creating site.md)\n[Defect Remediation Costs](defect_costs.md)\n[Development Frameworks](https://squidfunk.github.io/mkdocs-material/alternatives/)\n[Docusaurus](https://docusaurus.io/)\n[Fork a Repo](https://docs.github.com/en/enterprise-server@3.4/get-started/quickstart/fork-a-repo)\n[Git Branch](https://www.w3schools.com/git/git_branch.asp?remote=github)\n[Git Clone from GitHub](https://www.w3schools.com/git/git_clone.asp?remote=github)\n[Git Desk Top](/img/gitdesktop.png)\n[Git GitHub Fork](https://www.w3schools.com/git/git_remote_fork.asp?remote=github)\n[Git Tutorial](https://www.w3schools.com/git/default.asp?remote=github)\n[Git and GitHub Introduction](https://www.w3schools.com/git/git_intro.asp?remote=github)\n[Git version-control tools in Visual Studio Code](https://docs.microsoft.com/en-us/learn/modules/use-git-from-vs-code/)\n[GitHub Desktop](https://docs.github.com/en/desktop)\n[GitHub for Teams](https://github.com/team)\n[GitHub](#github)\n[GitHub](developmenttools#github)\n[GitHub](git-github#gitHub)\n[GitHub](git-github#github)\n[GitHub](https://docs.microsoft.com/en-us/learn/modules/introduction-to-github/)\n[Git](#git)\n[Git](https://git-scm.com/book/en/v2)\n[Github](#github)\n[HTML](https://developer.mozilla.org/en-US/docs/Web/HTML)\n[JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript)\n[Linux](/img/LinuxLogo.jpeg)\n[Linux](https://www.linux.org/)\n[M1](https://en.wikipedia.org/wiki/Apple_M1)\n[Material for MkDocs](https://squidfunk.github.io/mkdocs-material/)\n[Microsoft](/img/MicrosoftLogo.png)\n[Microsoft](https://www.microsoft.com/en-us/)\n[Minimum Viable Product](siteoverview#minimum-viable-product)\n[MkDocs Marteral](https://squidfunk.github.io/mkdocs-material/)\n[MkDocs](https://www.mkdocs.org/)\n[Mug Shot](/img/mugShot.png)\n[PageSpeed Insights](https://pagespeed.web.dev/)\n[Philosophy](https://squidfunk.github.io/mkdocs-material/philosophy/)\n[Preview Deployments](glossary#preview-deployments)\n[Preview ](deploy#preview)\n[Preview](deploy#preview)\n[Private](deploy#preview)\n[Pull Request](git-github#pull-request)\n[Pulls](git-github#pull)\n[RISC-architecture](https://en.wikipedia.org/wiki/Reduced_instruction_set_computer)\n[React](https://reactjs.org/)\n[Troika](programming#troika)\n[VScode](#vscode)\n[VScode](developmenttools#vscode)\n[VScode](http://127.0.0.1:8000/developmenttools/#vscode)\n[VScode](https://code.visualstudio.com/)\n[Version Control System](https://www.w3docs.com/learn-git/introduction4.html)\n[Visual Studio Code](https://code.visualstudio.com)\n[Web Material](/img/material.png)\n[Website Development Stack](website-development-stack)\n[What is a static site generator?](https://www.cloudflare.com/learning/performance/static-site-generator/)\n[bugFixChart](/img/bugFixChart.jpg)\n[clone](glossary#clone)\n[forks](git-github#fork)\n[git](#git)\n[git](developmenttools#git)\n[git](git-github#git)\n[iA Writer](#ia-writer)\n[iA Writer](https://apps.apple.com/us/app/ia-writer/id775737590?mt=12)\n[iA Writer](https://ia.net/writer)\n[ialogo](/img/ialogo.png)\n[iterativedev](/img/iterativedev.png)\n[johntelford.com LLC](Company)\n[mdxLogo](/img/markdownlogo.png)\n[pull](#pull)\n[vscodelogo](/img/vscodelogo.png)\n</code></pre>"},{"location":"References/technology_references./","title":"Technology Reference","text":"<ul> <li>Apple M1</li> <li>Apple</li> <li>ARM-based</li> <li>AsciiDoctor</li> <li>CSS</li> <li>CommonMark Spec</li> <li>CommonMark</li> <li>Cargo Book</li> <li>ChronoSync</li> <li>Docusaurus</li> <li>Docutils</li> <li>EagleFiler</li> <li>Git</li> <li>GitHub</li> <li>HTML</li> <li>iA Writer</li> <li>Jamstack</li> <li>JavaScript</li> <li>JohnTelford.com</li> <li>JSX</li> <li>Linux</li> <li>Markdown</li> <li>mdBook</li> <li>MDX</li> <li>MDX Deck</li> <li>Microsoft</li> <li>Netlify CLI Command</li> <li>Netlify</li> <li>Next.js</li> <li>Node</li> <li>React</li> <li>React     JSX</li> <li>Site Generators</li> <li>Static Site     Generator</li> <li>Tailwindcss Utility CSS Classes</li> <li>Tailwindcss     Typography</li> <li>Taio</li> <li>Templates</li> <li>TechtalkJohn</li> <li>Vercel</li> <li>Visual Studio Code</li> <li>Visual Studio Code     Extension</li> <li>Web.dev</li> </ul>"},{"location":"References/tvdb_v4./","title":"tvdb-v4-python","text":"<p>This is the official tvdb api v4 python package</p>"},{"location":"References/tvdb_v4./#installation","title":"Installation","text":"<pre><code>python3 -m pip install tvdb_v4_official\n</code></pre>"},{"location":"References/tvdb_v4./#getting-started","title":"Getting Started","text":"<p>some projects require a user supplied pin as well as an apikey</p> <pre><code>import tvdb_v4_official\n\ntvdb = tvdb_v4_official.TVDB(\"APIKEY\")\n# OR:\n# tvdb = tvdb_v4_official.TVDB(\"APIKEY\", pin=\"YOUR PIN HERE\")\n\n# fetching several pages of series info\nseries_list = [ ]\nfor j in range(5): # Pages are numbered from 0\n    series_list += tvdb.get_all_series(j)\n\n# fetching a series\nseries = tvdb.get_series(121361)\n\n# fetching a season's episode list\nseries = tvdb.get_series_extended(121361)\nfor season in sorted(series[\"seasons\"], key=lambda x: (x[\"type\"][\"name\"], x[\"number\"])):\n    if season[\"type\"][\"name\"] == \"Aired Order\" and season[\"number\"] == 1:\n        season = tvdb.get_season_extended(season[\"id\"])\n        break\nelse:\n    season = None\nif season is not None:\n    print(season[\"episodes\"])\n\n# fetch a page of episodes from a series by season_type (type is \"default\" if unspecified)\ninfo = tvdb.get_series_episodes(121361, page=0)\nprint(info[\"series\"])\nfor ep in info[\"episodes\"]:\n    print(ep)\n\n# fetching a movie\nmovie = tvdb.get_movie(31) # avengers\n\n# access a movie's characters\nmovie = tvdb.get_movie_extended(31)\nfor c in movie[\"characters\"]:\n    print(c)\n\n# fetching a person record\nperson = tvdb.get_person_extended(characters[0][\"peopleId\"])\nprint(person)\n\n# using since If-Modifed-Since parameter\nseries = tvdb.get_series_extended(393199, if_modified_since=\"Wed, 30 Jun 2022 07:28:00 GMT\")\n</code></pre>"},{"location":"References/url_list./","title":"Url list.","text":""},{"location":"References/url_list./#mkdocs-2urllinks","title":"Mkdocs--2 URL Links","text":"<pre><code>[Mug Shot](/img/mugShot.png)\n[Material for MkDocs](https://squidfunk.github.io/mkdocs-material/)\n[bugFixChart](/img/bugFixChart.jpg)\n[VScode](developmenttools#vscode)\n[Preview Deployments](glossary#preview-deployments)\n[Defect Remediation Costs](defect_costs.md)\n[Preview](deploy#preview)\n[Minimum Viable Product](siteoverview#minimum-viable-product)\n[Defect Remediation Costs](defect_costs.md)\n[Material for MkDocs](https://squidfunk.github.io/mkdocs-material/)\n[Development Frameworks](https://squidfunk.github.io/mkdocs-material/alternatives/)\n[Philosophy](https://squidfunk.github.io/mkdocs-material/philosophy/)\n[MkDocs](https://www.mkdocs.org/)\n[Create a Site](creating site.md)\n[Defect Remediation Costs](defect_costs.md)\n[Troika](programming#troika)\n[HTML](https://developer.mozilla.org/en-US/docs/Web/HTML)\n[CSS](https://developer.mozilla.org/oyn-US/docs/Web/CSS)\n[JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript)\n[Troika](programming#troika)\n[Troika](programming#troika)\n[Troika](programming#troika)\n[What is a static site generator?](https://www.cloudflare.com/learning/performance/static-site-generator/)\n[Docusaurus](https://docusaurus.io/)\n[React](https://reactjs.org/)\n[vscodelogo](/img/vscodelogo.png)\n[Visual Studio Code](https://code.visualstudio.com)\n[VScode](#vscode)\n[Troika](programming#troika)\n[git](#git)\n[GitHub](#github)\n[Git](#git)\n[GitHub](#github)\n[GitHub](#github)\n[GitHub](#github)\n[VScode](#vscode)\n[VScode](#vscode)\n[VScode](#vscode)\n[Git Desk Top](/img/gitdesktop.png)\n[VScode](#vscode)\n[Github](#github)\n[Git](#git)\n[Git](#git)\n[Github](#github)\n[Version Control System](https://www.w3docs.com/learn-git/introduction4.html)\n[VScode](#vscode)\n[Git version-control tools in Visual Studio Code](https://docs.microsoft.com/en-us/learn/modules/use-git-from-vs-code/)\n[Git and GitHub Introduction](https://www.w3schools.com/git/git_intro.asp?remote=github)\n[Git](https://git-scm.com/book/en/v2)\n[GitHub](https://docs.microsoft.com/en-us/learn/modules/introduction-to-github/)\n[GitHub Desktop](https://docs.github.com/en/desktop)\n[Git](#git)\n[Cloudflare](#deploy/cloudflare)\n[Preview](deploy#preview)\n[Website Development Stack](website-development-stack)\n[Preview ](deploy#preview)\n[Preview ](deploy#preview)\n[Git Tutorial](https://www.w3schools.com/git/default.asp?remote=github)\n[Git GitHub Fork](https://www.w3schools.com/git/git_remote_fork.asp?remote=github)\n[pull](#pull)\n[Fork a Repo](https://docs.github.com/en/enterprise-server@3.4/get-started/quickstart/fork-a-repo)\n[Git Clone from GitHub](https://www.w3schools.com/git/git_clone.asp?remote=github)\n[Commits](#commits)\n[Git Branch](https://www.w3schools.com/git/git_branch.asp?remote=github)\n[ialogo](/img/ialogo.png)\n[iA Writer](https://apps.apple.com/us/app/ia-writer/id775737590?mt=12)\n[iA Writer](#ia-writer)\n[ChronoSync](https://www.econtechnologies.com/chronosync/overview.html)\n[johntelford.com LLC](Company)\n[Preview](deploy#preview)\n[Defect Remediation Costs](defect_costs.md)\n[Web Material](/img/material.png)\n[Troika](programming#troika)\n[iA Writer](#ia-writer)\n[Troika](programming#troika)\n[iA Writer](https://ia.net/writer)\n[VScode](#vscode)\n[ialogo](/img/ialogo.png)\n[iA Writer](https://apps.apple.com/us/app/ia-writer/id775737590?mt=12)\n[ChronoSync](#chronosync)\n[VScode](#vscode)\n[ChronoSync](/img/CSLogo300.png)\n[ChronoSync](https://www.econtechnologies.com/chronosync/overview.html)\n[mdxLogo](/img/markdownlogo.png)\n[HTML](https://developer.mozilla.org/en-US/docs/Web/HTML)\n[VScode](http://127.0.0.1:8000/developmenttools/#vscode)\n[git](developmenttools#git)\n[GitHub](developmenttools#github)\n[Private](deploy#preview)\n[GitHub](git-github#gitHub)\n[GitHub](git-github#gitHub)\n[GitHub](git-github#gitHub)\n[Preview](deploy#preview)\n[PageSpeed Insights](https://pagespeed.web.dev/)\n[Defect Remediation Costs](defect_costs.md)\n[iterativedev](/img/iterativedev.png)\n[Defect Remediation Costs](defect_costs.md)\n[Preview](deploy#preview)\n[Preview Deployments](glossary#preview-deployments)\n[VScode](https://code.visualstudio.com/)\n[MkDocs Marteral](https://squidfunk.github.io/mkdocs-material/)\n[GitHub](git-github#github)\n[git](git-github#git)\n[Content Delivery Network (CDN)](https://en.wikipedia.org/wiki/Content_delivery_network)\n[Cloudflare](https://www.cloudflare.com)\n[forks](git-github#fork)\n[clone](glossary#clone)\n[clone](glossary#clone)\n[Preview](deploy#preview)\n[GitHub for Teams](https://github.com/team)\n[Pull Request](git-github#pull-request)\n[Pull Request](git-github#pull-request)\n[Preview](deploy#preview)\n[Pulls](git-github#pull)\n[ARM-based](https://en.wikipedia.org/wiki/ARM_architecture)\n[RISC-architecture](https://en.wikipedia.org/wiki/Reduced_instruction_set_computer)\n[Apple](/img/AppleLogo.png)\n[Apple](https://www.apple.com)\n[M1](https://en.wikipedia.org/wiki/Apple_M1)\n[Linux](/img/LinuxLogo.jpeg)\n[Linux](https://www.linux.org/)\n[Microsoft](/img/MicrosoftLogo.png)\n[Microsoft](https://www.microsoft.com/en-us/)\n</code></pre>"},{"location":"References/url_list./#urlimagelinks","title":"URL Image Links","text":"<pre><code>![Mug Shot](/img/mugShot.png)\n![bugFixChart](/img/bugFixChart.jpg)\n![vscodelogo](/img/vscodelogo.png)\n![Git Desk Top](/img/gitdesktop.png)\n![ialogo](/img/ialogo.png)\n![Web Material](/img/material.png)\n![ialogo](/img/ialogo.png)\n![ChronoSync](/img/CSLogo300.png)\n![mdxLogo](/img/markdownlogo.png)\n![iterativedev](/img/iterativedev.png)\n![Apple](/img/AppleLogo.png)\n![Linux](/img/LinuxLogo.jpeg)\n![Microsoft](/img/MicrosoftLogo.png)\n</code></pre>"},{"location":"References/iterative_development/content_delivery_network/","title":"Content delivery network","text":""},{"location":"References/iterative_development/content_delivery_network/#cdn","title":"CDN","text":""},{"location":"References/iterative_development/content_delivery_network/#cloudflare","title":"Cloudflare","text":"<ul> <li> <p>The Cloudflare global network runs every service in every data center so your users have a consistent experience everywhere \u2014 whether they are in Chicago or Cape Town. This means all customer traffic is processed at the data center closest to its source, with no backhauling or performance tradeoffs. And with single-pass inspection, security is streamlined and built-in.</p> </li> <li> <p>Cloudflare's network is one of the biggest, most connected, and fastest in the world. It extends to more than 250 cities. In those cities, we're often present in multiple data centers in order to connect to as many networks and bring our services as close to as many users as possible. </p> </li> <li> <p>95% of the entire Internet-connected world is now within 50 ms of a Cloudflare presence, and 80% of the entire Internet-connected world is within 20ms (for reference, it takes 300-400 ms for a human to blink):</p> </li> </ul>"},{"location":"References/iterative_development/content_delivery_network/#dns-resolver","title":"DNS Resolver","text":"<p>1.1.1.1 is Cloudflare\u2019s public DNS resolver. It offers a fast and Private way to browse the Internet. DNS resolversOpen external link translate domains like cloudflare.com into the IP addresses necessary to reach the website (like 104.16.123.96).</p> <p>Unlike most DNS resolvers like most ISPs, the 1.1.1.1 does not sell user data to advertisers. 1.1.1.1 has also been measured to be the fastest DNS resolver available</p>"},{"location":"References/iterative_development/content_delivery_network/#what-is-a-cdn","title":"What is a CDN?","text":"<p>What is a CDN?</p> <p>Cloudflare is a content delivery network (CDN) and security provider that helps speed up websites and protect them from malicious threats. It uses a distributed network of caching servers across the world to cache websites and minimize loading times, while also providing a range of security features such as DDoS protection and Web Application Firewall (WAF).</p>"},{"location":"References/iterative_development/content_delivery_network/#branch-build-controls","title":"Branch build controls","text":"<p>Branch build controls</p> <p>When connected to your git source, Pages allows you to control which environments and branches you would like to automatically build. By default, Pages will trigger a build any time you commit to either your production or preview environment. However, with branch build controls, you can configure automatic deployments to suit your preference on a per project basis.</p>"},{"location":"References/iterative_development/content_delivery_network/#skip-builds","title":"Skip builds","text":"<p>Skip builds</p> <p>Without any configuration required, you can choose to skip a build and deployment on an adhoc basis. By adding the [CI Skip], [CI-Skip], [Skip CI], [Skip-CI] or [CF-Pages-Skip] flag as a prefix in your commit message, Pages will omit that build/deployment. The prefixes are case insensitive.</p>"},{"location":"References/iterative_development/content_delivery_network/#production-branch-control","title":"Production branch control","text":"<p>Production branch control</p> <p>To configure deployment options, go to your Pages project &gt; Settings &gt; Builds &amp; deployments &gt; Configure Production deployments. Pages will default to setting your production environment to the branch you first push, but you can set your production to another branch if you choose.</p>"},{"location":"References/iterative_development/content_delivery_network/#preview-branch-control","title":"Preview branch control","text":"<p>Preview branch control</p> <p>When configuring automatic builds for preview deployments, there are three options to choose from.</p> <ul> <li>All non-Production branches: By default, Pages will automatically deploy any and every commit to a preview branch.</li> <li>None: Turns off automatic builds for all preview branches.</li> <li>Custom branches: Customize the automatic deployments of certain preview branches.</li> </ul>"},{"location":"References/iterative_development/content_delivery_network/#custom-preview-branch-control","title":"Custom preview branch control","text":"<p>https://developers.cloudflare.com/pages/platform/branch-build-controls/#custom-preview-branch-controlhttps://developers.cloudflare.com/pages/platform/branch-build-controls/#custom-preview-branch-control</p> <p>Custom preview branch control</p> <p>By selecting Custom branches, you can specify branches you wish to include and exclude from automatic deployments in the provided configuration fields. The configuration fields can be filled in two ways:</p> <ul> <li> <p>Static branch names: Enter the precise name of the branch you are looking to include or exclude (for example, staging or dev).</p> </li> <li> <p>Wildcard syntax: Use wildcards to match multiple branches. You can specify wildcards at the start or end of your rule. The order of execution for the configuration is:</p> <ul> <li>Excludes</li> <li>Includes</li> <li>Skip</li> </ul> </li> </ul> <p>Pages will process the exclude configuration first, then go to the include configuration. If a branch does not match either then it will be skipped.</p>"},{"location":"References/iterative_development/content_delivery_network/#wildcards","title":"Wildcards","text":"<p>Wildcards</p> <p>A wildcard (*) is a character that is used within rules. It can be placed alone to match anything or placed at the start or end of a rule to allow for better control over branch configuration. A wildcard will match zero or more characters.</p> <p>For example, if you wanted to match all branches that started with fix/ then you would create the rule fix/* to match strings like fix/1, fix/bugsor fix/.</p>"},{"location":"References/iterative_development/content_delivery_network/#preview-deployments","title":"Preview deployments","text":"<p>Preview Deployment</p> <p>Preview deployments allow you to preview new versions of your project without deploying it to production. To view preview deployments, navigate from the Account Home Pages and select your project</p>"},{"location":"References/iterative_development/content_delivery_network/#customizing-preview-deployments-access","title":"Customizing preview deployments access","text":"<p>Customizing preview deployments access</p> <p>You can use Cloudflare AccessOpen external link to manage access to your deployment previews. By default, these deployment URLs are public. Enabling the access policy will restrict viewing project deployments to your Cloudflare account.</p>"},{"location":"References/iterative_development/content_delivery_network/#preview-aliases","title":"Preview aliases","text":"<p>Preview aliases</p> <p>When a preview deployment is published, it is given a unique, hash-based address \u2014 for example, ..pages.dev. These are atomic and may always be visited in the future. However, Pages also creates an alias for git branch\u2019s name and updates it so that the alias always maps to the latest commit of that branch."},{"location":"References/iterative_development/dev_stack/","title":"Development Stack","text":"<p>Abstract</p> <p>The Iterative Website Development Stack outlines a process for building and launching websites, typically involving iteration and collaboration between development and design teams.</p>"},{"location":"References/iterative_development/dev_stack/#dev-stack","title":"Dev Stack","text":"<pre><code>flowchart TB\n\n    crepo --- cdn\n\n    cdn --- mkdcdn\n\n    mkdcdn --- net\n\n    dev --- vsc \n\n    github --- crepo\n\n    github --- net\n\n    vsc --- lrepo\n\n    net --- prevweb\n\n    net --- proweb\n\n    vsc --- net\n\n    vsc --- mkd\n\n    mkd --- lpreweb\n\n    dev([Team Developers])\n\n    cdn([Content Delivery Network])\n\n    crepo([Central Project Repository])\n\n    github([GitHub]) \n\n    lrepo([Local Projet Repository])\n\n    lpreweb([Local Preview Website])\n\n    mkd([MkDocs Static Site Generator])\n\n    mkdcdn([MkDocs Static Site Generator])\n\n    net([Internet]) \n\n    prevweb([Stakeholders Private Preview Website])\n\n    proweb([Production Website])\n\n    vsc([VScode - Command and Control]) \n</code></pre> Iterative  Development Stack <p>The iterative website development process uses these core technologies: Visual Studio Code, Git version control, GitHub as the Central Project Repository, Content Delivery Network, and MkDocs Static Site Generator.</p> <p>A clone of the central repository kept by each team member Cloudflare for content delivery network The process involves forking the central repository to individual team members' GitHub accounts and cloning it to workstations. Changes made to the cloned repositories cannot directly affect the central repository, which is managed by a gatekeeper team member. This helps maintain a unified source of truth for project history and files. Developers use VScode as their development environment, with access to their local website repository. They submit changes to the central website repository through GitHub and changes approved by the project gatekeeper are incorporated into the central repository. Developers can then update their local repositories.</p>"},{"location":"References/iterative_development/dev_stack/#github","title":"GitHub","text":"<p>GitHub is a Distributed Version Control Systems enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted Central Website Repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes, and helps answer the questions who changed what, where, when, and why for the lifetime of the project</p> <p>The core technology of Iterative Development is Git, GitHub, a central website repository controlled by a project gatekeeper, and a CDN like Cloudflare which deploys private preview websites, production sites and individual team member's private previews.</p> <p>GitHub is a web-hosted VCS that helps teams collaborate on a project without affecting each other's work by having one central repository acting as the source of truth. Team members use the website dev stack to develop, deploy, and maintain sites using a central repository to avoid confusion/defects.</p> <p>Team members fork a copy of the central repo to their GitHub account, then make a clone on workstations to make changes. They cannot directly make changes to the central repo and commit to their own repo clone. Stakeholders determine when changes are ready, then developers open PRs to the central repository, which the gatekeeper merges after team agreement. The central repo is deployed to the Internet after sufficient testing.</p>"},{"location":"References/iterative_development/dev_stack/#github-central-repository","title":"GitHub Central Repository.","text":"<p>Iterative website development in teams uses Git, GitHub, and a central repository controlled by the project gatekeeper. The team members use the website development stack to develop, deploy, and maintain websites. Team members make changes to their local repository clone, commit changes to their local repository, and may deploy their local repository to a private preview internet website to get stakeholder feedback. A GitHub pull request is made when stakeholders determine the changes are ready, which is examined and tested before being committed to the central repository by the gatekeeper. Developers then pull the central repository changes and commit them to their local repository copy of the central project. After sufficient development and testing iterations, the gatekeeper deploys the central project repository to the public internet.</p>"},{"location":"References/iterative_development/dev_stack/#github-workflow","title":"GitHub Workflow","text":"<p>GitHub workflow uses the following steps for teams:</p> <p>Fork central repo to personal GitHub account Clone the forked repo to workstation Create topic branch from cloned repo Make changes and commits on topic branch Push topic branch to forked repo in GitHub account Regularly pull from central repo to get updated develop branch Occasionally deploy to private preview site for stakeholder feedback Open a Pull Request on forked repo for integrating local changes to central repo Team discusses, approves, and updates the Pull Request.---</p> <ul> <li>Reference GitHub Details</li> </ul>"},{"location":"References/iterative_development/dev_stack/#mkdocs-material-static-site-generator","title":"MkDocs Material - Static Site Generator","text":"<p>MkDocs Material</p>"},{"location":"References/iterative_development/dev_stack/#content-delivery-network","title":"Content Delivery Network","text":"<p>Content Delivery Network</p> <p>A \"MkDocs Static Site Generator\" tools are used to create the \"Production Website\" by the \"CDN - Deploy Website to Web\"</p>"},{"location":"References/iterative_development/git-github/","title":"Git - Github","text":"<p>Version control system records changes to files  over time so specific versions can be recalled later</p> <p>When teams make changes to project files, the version control system tracks the history of changes. Earlier version of project files can be recovered at any time.</p> <p>The version primary components are GigHub, Git, and VScode</p>"},{"location":"References/iterative_development/git-github/#version-control-and-git","title":"Version Control and Git","text":""},{"location":"References/iterative_development/git-github/#github","title":"GitHub","text":"<p>GitHub is is a Distributed Version Control Systems is a Microsoft product. It enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted Central Website Repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes, and helps answer the questions who changed what, where, when, and why for the lifetime of the project</p> <p>About version control and Git</p>"},{"location":"References/iterative_development/git-github/#getting-started","title":"Getting Started","text":"<p>Getting Started</p>"},{"location":"References/iterative_development/git-github/#how-github-works","title":"How GitHub works","text":"<p>How GitHub works</p>"},{"location":"References/iterative_development/git-github/#git","title":"git","text":"<p>Git is the most widely used modern version control system in the world today. Git is mature, actively maintained open source project originally developed in 2005 by Linus Torvalds, the famous creator of the Linux operating system kernel. A staggering number of software projects rely on Git for version control, including commercial projects as well as open source. Developers who have worked with Git are well represented in the pool of available software development talent and it works well on a wide range of operating systems and Integrated Development Environments such as VScode.</p> <p>Git Distributed Version Control System. Rather than have only one single place for the full version history of the software as in Git, every developer's working copy of the code is also a repository that can contain the full history of all changes.</p> <p>In addition to being distributed, Git has been designed with performance, security and flexibility in mind.</p>"},{"location":"References/iterative_development/git-github/#basic-git-commands","title":"Basic Git Commands","text":"<p>Basic Git Commands</p> <p>To use Git, developers use specific commands to copy, create, change, and combine code. These commands can be executed directly from the command line or by using an application like GitHub Desktop. Here are some common commands for using Git:</p>"},{"location":"References/iterative_development/git-github/#git-init","title":"git init","text":"<p><code>git init</code> initializes a brand new Git repository and begins tracking an existing directory. It adds a hidden subfolder within the existing directory that houses the internal data structure required for version control.</p>"},{"location":"References/iterative_development/git-github/#git-clone","title":"git clone","text":"<p><code>git clone</code> creates a local copy of a project that already exists remotely. The clone includes all the project's files, history, and branches.</p>"},{"location":"References/iterative_development/git-github/#git-add","title":"git add","text":"<p><code>git add</code> stages a change. Git tracks changes to a developer's codebase, but it's necessary to stage and take a snapshot of the changes to include them in the project's history. This command performs staging, the first part of that two-step process. Any changes that are staged will become a part of the next snapshot and a part of the project's history. Staging and committing separately gives developers complete control over the history of their project without changing how they code and work.</p>"},{"location":"References/iterative_development/git-github/#git-commit","title":"git commit","text":"<p><code>git commit</code> saves the snapshot to the project history and completes the change-tracking process. In short, a commit functions like taking a photo. Anything that's been staged with git add will become a part of the snapshot with git commit.</p>"},{"location":"References/iterative_development/git-github/#git-status","title":"git status","text":"<p><code>git status</code> shows the status of changes as untracked, modified, or staged.</p>"},{"location":"References/iterative_development/git-github/#git-branch","title":"git branch","text":"<p><code>git branch</code> shows the branches being worked on locally.</p>"},{"location":"References/iterative_development/git-github/#git-merge","title":"git merge","text":"<p><code>git merge</code> merges lines of development together. This command is typically used to combine changes made on two distinct branches. For example, a developer would merge when they want to combine changes from a feature branch into the main branch for deployment.</p>"},{"location":"References/iterative_development/git-github/#git-pull","title":"git pull","text":"<p><code>git pull</code> updates the local line of development with updates from its remote counterpart. Developers use this command if a teammate has made commits to a branch on a remote, and they would like to reflect those changes in their local environment.</p>"},{"location":"References/iterative_development/git-github/#git-push","title":"git push","text":"<p><code>git push</code> updates the remote repository with any commits made locally to a branch.</p>"},{"location":"References/iterative_development/git-github/#full-reference-guide-to-git-commands","title":"Full Reference Guide To Git Commands","text":"<p>Full Reference Guide To Git Commands.</p>"},{"location":"References/iterative_development/git-github/#models-for-collaborative-development","title":"Models for collaborative development","text":"<p>Models for collaborative development</p>"},{"location":"References/iterative_development/git-github/#importing-a-git-repository-using-the-command-line","title":"Importing a Git repository using the command line","text":"<p>Importing a Git repository using the command line</p>"},{"location":"References/iterative_development/git/","title":"Git","text":"<p>Git is the most widely used modern version control system in the world today. Git is mature, actively maintained open source project originally developed in 2005 by Linus Torvalds, the famous creator of the Linux operating system kernel. A staggering number of software projects rely on Git for version control, including commercial projects as well as open source. Developers who have worked with Git are well represented in the pool of available software development talent and it works well on a wide range of operating systems and Integrated Development Environments such as VScode.</p> <p>Git Distributed Version Control System. Rather than have only one single place for the full version history of the software as in Git, every developer's working copy of the code is also a repository that can contain the full history of all changes.</p> <p>In addition to being distributed, Git has been designed with performance, security and flexibility in mind.</p>"},{"location":"References/iterative_development/git/#basic-git-commands","title":"Basic Git Commands","text":"<p>Basic Git Commands</p> <p>To use Git, developers use specific commands to copy, create, change, and combine code. These commands can be executed directly from the command line or by using an application like GitHub Desktop. Here are some common commands for using Git:</p>"},{"location":"References/iterative_development/git/#init","title":"init","text":"<p><code>git init</code> initializes a brand new Git repository and begins tracking an existing directory. It adds a hidden subfolder within the existing directory that houses the internal data structure required for version control.</p>"},{"location":"References/iterative_development/git/#add","title":"add","text":"<p><code>git add</code> stages a change. Git tracks changes to a developer's codebase, but it's necessary to stage and take a snapshot of the changes to include them in the project's history. This command performs staging, the first part of that two-step process. Any changes that are staged will become a part of the next snapshot and a part of the project's history. Staging and committing separately gives developers complete control over the history of their project without changing how they code and work.</p>"},{"location":"References/iterative_development/git/#branch","title":"branch","text":"<p><code>git branch</code> shows the branches being worked on locally.</p>"},{"location":"References/iterative_development/git/#clone","title":"clone","text":"<p><code>git clone</code> creates a local copy of a project that already exists remotely. The clone includes all the project's files, history, and branches.</p>"},{"location":"References/iterative_development/git/#commit","title":"commit","text":"<p><code>git commit</code> saves the snapshot to the project history and completes the change-tracking process. In short, a commit functions like taking a photo. Anything that's been staged with git add will become a part of the snapshot with git commit.</p>"},{"location":"References/iterative_development/git/#fork","title":"fork","text":"<p>Fork in not a git command. It is a GitHub process. See:   </p> <ul> <li> <p>GitGub documentation About forks</p> </li> <li> <p>Git Documentation GitHub - Contributing to a Project</p> </li> </ul>"},{"location":"References/iterative_development/git/#merge","title":"merge","text":"<p><code>git merge</code> merges lines of development together. This command is typically used to combine changes made on two distinct branches. For example, a developer would merge when they want to combine changes from a feature branch into the main branch for deployment.</p>"},{"location":"References/iterative_development/git/#pull","title":"pull","text":"<p><code>pull</code> updates the local line of development with updates from its remote counterpart. Developers use this command if a teammate has made commits to a branch on a remote, and they would like to reflect those changes in their local environment.</p>"},{"location":"References/iterative_development/git/#push","title":"push","text":"<p><code>git push</code> updates the remote repository with any commits made locally to a branch.</p>"},{"location":"References/iterative_development/git/#git-status","title":"git status","text":"<p><code>git status</code> shows the status of changes as untracked, modified, or staged.</p>"},{"location":"References/iterative_development/git/#git-switch","title":"git switch","text":"<p><code>git switch</code> switch to a specified branch. The working tree and the index are updated to match the branch. All new commits will be added to the tip of this branch.</p>"},{"location":"References/iterative_development/git/#git-references","title":"Git References","text":""},{"location":"References/iterative_development/git/#git-book","title":"Git Book","text":"<p>Everything You need to know</p> <ul> <li> <p>Read online Git Book </p> </li> <li> <p>Download PDF book Git Book </p> </li> </ul> <p>Full Reference Guide To Git Commands</p>"},{"location":"References/iterative_development/git/#git-cheat-sheet","title":"Git Cheat Sheet","text":""},{"location":"References/iterative_development/git/#git-cheat-sheet_1","title":"Git Cheat Sheet","text":""},{"location":"References/iterative_development/git/#models-for-collaborative-development","title":"Models for collaborative development","text":"<p>Models for collaborative development</p>"},{"location":"References/iterative_development/git/#importing-a-git-repository-using-the-command-line","title":"Importing a Git repository using the command line","text":"<p>Importing a Git repository using the command line</p>"},{"location":"References/iterative_development/github/","title":"Github","text":"<p>GitHub is is a Distributed Version Control Systems is a Microsoft product. It enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted Central Website Repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes, and helps answer the questions who changed what, where, when, and why for the lifetime of the project</p>"},{"location":"References/iterative_development/github/#version-control","title":"Version Control","text":"<p>About version control and Git</p>"},{"location":"References/iterative_development/github/#github-references","title":"GitHub References","text":"<ul> <li> <p>How GitHub works</p> </li> <li> <p>GitHub Docs</p> </li> <li> <p>GitHub is free for teams</p> </li> <li> <p>Using GitHub To Be More Productive, Collaborative, And Secure</p> </li> </ul>"},{"location":"References/iterative_development/github/#github-flow","title":"GitHub Flow","text":"<p>GitHub flow is a lightweight, branch-based workflow. See GitHub Flow for details</p>"},{"location":"References/iterative_development/preview/","title":"Private Preview Website","text":"<p>As team members makes changes to their Local Website Repository, they may deploy it to a Preview for them and Stakeholders to quickly view and give feedback.</p> <p>When team members and Stakeholders agree the changes are ready to be added to the Production Website, the team member makes a Central Website Repository update request</p> <p>The repository guardian and other team members evaluating Central Website Repository update requests, may deploy them to a Preview for Stakeholders holders to preview and give feedback.</p>"},{"location":"References/iterative_development/preview/#repository-guardian-preview","title":"Repository Guardian Preview","text":"<p>When the repository guardian and other team members evaluating Central Website Repository update requests changes are ready for deployment, the repository guardian deploys the updated production version of the website to a Preview for Stakeholders to preview and give feedback. When the Stakeholders are satisfied with the updated preview production version, the repository guardian deploys the updated production version of the website to the Internet</p>"},{"location":"References/iterative_development/remediation/","title":"remediation.md","text":"<p>Defects</p> <p>The slightest configuration, programming or security defect issues during the project will require Remediating and increasing overall lifetime costs </p>"},{"location":"References/iterative_development/team_define/","title":"Team - Define","text":"<p>Defining websites helps the Iterative Development teams and Stakeholders understand the project.</p>"},{"location":"References/iterative_development/team_define/#define-prerequisites","title":"Define - Prerequisites","text":"<p>Defining website prerequisites is the first steps in optimizing website costs</p> <ul> <li> <p>Defining what the project is about</p> </li> <li> <p>Funding</p> </li> <li> <p>Purpose</p> </li> <li> <p>Functionality</p> </li> <li> <p>Stakeholders</p> </li> <li> <p>Content</p> </li> <li> <p>The Must and Want features</p> </li> <li> <p>Security requirements</p> </li> </ul>"},{"location":"References/iterative_development/team_deploy/","title":"Team - Deploy","text":"<ul> <li> <p>Deploying a website is making it available on the Internet. The production version is deployed when Stakeholders agree.</p> </li> <li> <p>Developers working on features, fixes, or testing may deploy a Private Preview website with their changes, without disturbing other developers work or the production version. This enables the Stakeholders to monitor progress. See Preview Deployments</p> </li> <li> <p>The slightest errors or security issues during Deploy will require Remediating sometime during the life time of the website</p> </li> </ul>"},{"location":"References/iterative_development/team_deploy/#deploy-prerequisites","title":"Deploy - Prerequisites","text":"<ul> <li> <p>Decisions about resources required for deploying production version of the website to the Internet</p> </li> <li> <p>Decisions about resources required for team developers working on features, fixes, or testing to deploy Private Preview Internet websites with their changes, for Stakeholders holders to view and give feedback, without disturbing other developers work or the production version</p> </li> </ul>"},{"location":"References/iterative_development/team_design/","title":"Team - Design","text":"<p>The core foundations of a user's website experience are:</p> <ul> <li> <p>Fast - Website responds quickly to user interactions with smooth scrolling.</p> </li> <li> <p>Integrated - The website uses the full capabilities of the user device to create an experience true to the device.</p> </li> <li> <p>Reliable - Loads quickly and reliably even in uncertain network conditions.</p> </li> <li> <p>Engaging - Keeps user coming back to a website</p> </li> </ul>"},{"location":"References/iterative_development/team_design/#design-prerequisites","title":"Design - Prerequisites","text":"<ul> <li> <p>Decisions about Website Design</p> </li> <li> <p>Consistency</p> </li> <li> <p>Theme</p> </li> <li> <p>Color Scheme</p> </li> <li> <p>Typology</p> </li> <li> <p>Navigation</p> </li> <li> <p>User interaction</p> </li> </ul>"},{"location":"References/iterative_development/team_design/#design-website","title":"Design - Website","text":"<ul> <li> <p>Responsive Website Design</p> <p>The majority of users access websites using mobile devices. Users have little tolerance for slow loading website pages or pages that do not conform to their screen size</p> </li> <li> <p>Ensures pages load quickly</p> </li> <li> <p>Website pages are display correctly on a variety of devices and window or screen size</p> </li> <li> <p>The website look and feel, users experience, and functionality are consistently maintain</p> </li> <li> <p>Consistency website consistency is the look and feel of the site. The users experience, and functionality does not vary between website pages.</p> </li> <li> <p>The website theme is:</p> <ul> <li> <p>Color scheme</p> </li> <li> <p>Header</p> </li> <li> <p>Pages</p> </li> <li> <p>Fonts</p> </li> <li> <p>Footer</p> </li> <li> <p>Typology</p> </li> <li> <p>Navigation</p> </li> <li> <p>User interaction</p> </li> </ul> </li> </ul>"},{"location":"References/iterative_development/team_develop/","title":"Team - Develop","text":"<ul> <li> <p>Translates the Define and Design teams processes into website pages </p> </li> <li> <p>Uses development languages to create website material such as text, graphics, and abstract logical structures. These languages are nonhuman, and strict </p> </li> <li> <p>Configures and uses website development tools</p> </li> </ul>"},{"location":"References/iterative_development/team_develop/#develop-prerequisites","title":"Develop - Prerequisites","text":"<ul> <li> <p>Decisions about resources required to transform the Define and Design work into a website and infrastructure</p> </li> <li> <p>Decisions about static site generator and programming tools</p> <p>The slightest configuration, programming or security defect issues during the project will require Remediating and increasing overall lifetime costs </p> </li> </ul>"},{"location":"References/iterative_development/team_maintenance/","title":"Team maintenance","text":"<ul> <li> <p>Maintain is remediating Define, Design,Develop, Deploy, or Security defects</p> </li> <li> <p>All teams may have members on the Maintain team to solve defects.</p> </li> <li> <p>Hot fixes are immediate fixes required for the production deployment.</p> </li> <li> <p>Problems requiring remediation are triaged. They are ranked from immediate Hot Fixes to those that are not show stoppers.</p> </li> <li> <p>The guardian and Stakeholders may choose to Rollback the production deployment to a previous production deployment if triage determines the remediation time is unacceptable.</p> </li> <li> <p>All fixes use the established fork, solution development, pull request processes, and version incrementing, including Hot Fixes.</p> </li> </ul>"},{"location":"References/iterative_development/team_maintenance/#maintenance-prerequisites","title":"Maintenance - Prerequisites","text":"<ul> <li> <p>Decisions about remediating deployed websites</p> </li> <li> <p>Organizing members from other teams to be part of the Maintain team while remediating specific defects.</p> </li> </ul> <p>Defects</p> <p>The slightest configuration, programming or security defect issues during the project will require Remediating and increasing overall lifetime costs </p>"},{"location":"References/iterative_development/team_overview/","title":"Team Overview","text":""},{"location":"References/iterative_development/team_overview/#overview","title":"Overview","text":"<p>Iterative website Define, Design, Develop, Deploy and Maintenance teams may be operational at the same time creating, testing, and helping with maintenance  </p> Teams <pre><code>    graph TD\n    dev --- def\n    dev --- des\n    dev --- dep\n    dev --- mnt\n    def --- des\n    dep --- mnt\n\n    dev([Development])\n    def([Define])\n    des([Design])\n    dep([Deploy])\n    mnt([Maintenance])</code></pre> Iterative Development Teams <p>Reaching a Minimum Viable Product is the first Development teams goal</p> <ul> <li> <p>Team Define    Defining websites helps the Iterative Development helps teams and Stakeholders understand the project.</p> </li> <li> <p>Team Design   Determines the core found   ations of a user's website experience are:</p> </li> <li> <p>Team Develop   Translates the Define and Design teams processes into website pages </p> </li> <li> <p>Team Deploy   Deploys the website making it available on the Internet. The production version is deployed when Stakeholders agree.</p> </li> <li> <p>Team Maintenance   Remediates the Define, Design, Develop, Deploy, or Security teams defects</p> </li> </ul>"},{"location":"References/iterative_development/version_control_overview/","title":"Version control overview","text":""},{"location":"References/iterative_development/version_control_overview/#version-control-overview","title":"Version Control Overview","text":"<p>Version control is the primary technology for Iterative Development</p> <ul> <li> <p>It enables multiple teams to work separately on the same project without having an impact on the work of others</p> </li> <li> <p>Private preview websites are deployed to allow stakeholders to monitor progress and provide feedback</p> </li> <li> <p>Version control is handled by Git and Github</p> </li> </ul>"},{"location":"References/iterative_development/version_control_overview/#git","title":"Git","text":"<p>Git is a popular Distributed Version Control System (DVCS) that tracks changes in software projects &amp; provides a unified view of project history. Developers can see the entire timeline of changes, who made them, why, &amp; when. Each developer has a full copy of the project &amp; maintains source code integrity through branches. Git enables businesses to leverage collaboration and align experts. </p> <p>Git repositories help teams build the best product because they enable collaboration between all team members </p>"},{"location":"References/iterative_development/version_control_overview/#github","title":"GitHub","text":"<p>GitHub is a platform that hosts Git repositories and offers tools for better code development, collaboration, and integration with other apps. It's useful for organizing work through repositories and facilitating collaboration through the GitHub flow: create branch - commit changes - open pull request - merge.</p> <p>GitHub is is a Distributed Version Control Systems Microsoft product. GitHub manages an online web hosted Central Website Repository containing all project files. It offers tools for better code development, collaboration, and integration with other apps. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes, and helps answer the questions who changed what, where, when, and why for the lifetime of the project</p>"},{"location":"References/iterative_development/version_control_overview/#structure","title":"Structure","text":"<p>The structure of Git and GitHub is centered around repositories and branches. Repositories are the entire collection of files and folders associated with a project and their revision history, represented as snapshots called commits. Branches in Git allow organizations of different lines of development, allowing developers to safely propose changes to the production code.</p> <p>GitHub provides tools for collaboration, hosting Git repositories and offering features such as issues, pull requests, code review and integration with other apps to improve the software development process. With the GitHub flow, work is organized into repositories where developers can outline requirements and create branches for work on updates, before committing changes, opening a pull request, discussing and then merging changes, along with 15 million other developers worldwide.</p>"},{"location":"References/iterative_development/vscode/","title":"Vscode","text":""},{"location":"References/iterative_development/vscode/#vscode","title":"VScode","text":"<p>Visual Studio Code (VScode) is a Microsoft product and commonly referred to as VScode. It is a code editor redefined and optimized for building and debugging modern software projects. VCcode is free and available on  Linux, macOS, and Windows platforms. Developer surveys show VScode is ranked the most popular developer environment tool </p> <p>Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded git</p>"},{"location":"References/iterative_development/vscode/#git","title":"Git","text":"<p>Use Git version-control tools in Visual Studio Code</p> <p>Utilize the tight integration of Visual Studio Code with the Git source-control management system.</p> <p>Perform common GitHub tasks by using the Command Palette in Visual Studio.</p> <p>Monitor  status </p> <p>Committing  files to the developers \"Local Project Repository\"</p> <p>VScode is the Command And Control center for the project development stack.</p> <p>The development Command And Control tasks are:</p> <ul> <li>Editing Markdown  programming materials</li> <li>Use git and GitHub commands to manage project files. Git is built-in and optimized to work with Microsoft GitHub</li> <li>Some VScode extensions continually check for syntax and other errors</li> <li>Live edit browser previews show how edits will looks on a web page</li> <li>Built-in command shell</li> <li>Run MkDocs to create a local workstation website</li> </ul> <ul> <li>Use the Built-in command shell to create preview to the Internet using  for Stakeholders</li> <li>Deploy production website to the Internet</li> <li>And much more</li> </ul>"},{"location":"References/iterative_development/vscode/#extensions","title":"Extensions","text":"<p>Some useful extensions available at the VScode Marketplace are:</p> <ul> <li> <p>Git Graph View a Git Graph of your repository, and easily perform Git actions from the graph</p> </li> <li> <p>Dark+ Material. The default Dark+ theme, using Material's color palette</p> </li> <li> <p>GitHub Repositories. Remotely browse and edit any GitHub repository</p> </li> <li> <p>Lorem Text Generator Lorem text generator extension for VScode</p> </li> <li> <p>Markdown All in One All you need for Markdown (keyboard shortcuts, table of contents, auto preview and more)</p> </li> <li> <p>Rainbow Brackets Provide rainbow colors for the round brackets, the square brackets and the squiggly brackets</p> </li> <li> <p>Todo Tree This extension quickly searches the local repository workspace for comment tags like TODO and FIXME, and displays them in a tree view in the activity bar</p> </li> <li> <p>VScode-icons Icons for Visual Studio Code</p> </li> </ul>"},{"location":"References/iterative_development/vscode/#vscode-git-client","title":"VScode Git Client","text":"<p>Vscode built-in git commands :</p> <ul> <li>Review diffs, </li> <li>Stage files</li> <li>Make commits</li> <li>Push </li> <li>pull</li> <li>and more</li> </ul>"},{"location":"References/iterative_development/vscode/#other-git-clients","title":"Other Git Clients","text":"<p>Alternatives to using built-in VScode <code>git</code> commands is to use the built in terminal or GitHub Desktop that abstract <code>gitHub</code> and with more <code>git</code> commands. It interacts with <code>GitHub</code> using a GUI instead of the command line or a web browser. </p> <p>GitHub Desktop and VSCode documents how to use GitHub Desktop with VScode. </p> <p>GUI Clients</p>"},{"location":"References/iterative_development/vscode/#references","title":"References","text":"<ul> <li>Introduction Videos</li> </ul>"},{"location":"References/iterative_development/workstations/","title":"Workstations","text":"<ul> <li> review</li> </ul> <p>Workstations are the key to website development productivity. </p> <p>Web site development is not easy, time consuming, and expensive. Optimizing the website development environment is critical.</p> <p>The key hardware for website developers are workstations. They need to be:</p> <ul> <li>Fast</li> <li>Reliable</li> <li>Supportable</li> <li>Secure</li> <li>Support Large or Multiple Screens</li> <li>Run Software Development Applications</li> </ul> <p>The contemporary choice for web development workstations are Apple, Linux, and Microsoft. My experience building and maintaining web sites with purchased or bare metal built Linux or Microsoft systems, was my reason choosing Apple products for exploring Internet technologies and creating web sites.</p> <p>Traditionally these companies built workstation products with Intel processors. They are diversifying their product line with ARM-based and RISC-architecture processors</p>"},{"location":"References/iterative_development/workstations/#apple","title":"Apple","text":"<p>Apple is a computer manufacturing company delivering workstation products with Apple developed macOS certified UNIX operating systems.</p> <p>Apple has released Mac products built with the ARM-based, M2 Apple silicon designed system on a chip containing 20 billion transistors, solis-state drive, and optimized the Mac operating system. The system on a chip means there are no mother board plugins, memory, or solid-state drive upgrades,  possible. The configuration is chosen at purchase time.</p> <p>The last Apple processor transition was the Motorola 68000 to the Intel x86. It took time for Apple vendors and users to update their hardware and software to run on the x86. Apple created the Rosetta translation application that ran Motorola 68000 binary code on x86 machines. The M2 translation layer Rosetta 2, is about 80% the speed of the of native Apple Silicon code. The single-core Rosetta 2 benchmark running on a low end M2 MacBook Air with 8GB of RAM, is faster than other x86 Mac machines in single core benchmark. The M2 MacBook Air running native is faster than most any competitors top of the line x86 machine.</p> <p>Apple products prices may be higher than their competitors. It is mitigated by the  robustness, reliability, security, speed, vendor hardware and software support, and relative ease of use.</p> <p>Any web developer workstation downtime is expensive. Apple has responsibility for maintaining their hardware and software products from sale to retirement. Apple Stores and other services are equipped to diagnose and repair Apple products.</p> <p>Operating systems updates have been free for years, and work when applied. </p> <p>Apple continues to have the highest customer satisfaction in the industry.</p>"},{"location":"References/iterative_development/workstations/#linux","title":"Linux","text":"<p>Linux is an examples of free and open-source software collaboration. The source code may be used, modified and distributed commercially or non-commercially by anyone under the terms of its respective licenses</p> <p>Linux is the leading operating system on web servers. Its greatest success in the consumer market is mobile device. Android being one of the dominant smartphones Linux-based operating system</p> <p>There are a some Linux vendor supporting hardware platforms or Linux software distributions. The diversity of Linux distributions means that not all software or hardware runs all distributions or applications. Software and hardware repositories may be specific to particular distributions</p> <p>Not all peripheral device vendors support Linux. The Linux open-source community supplies several missing device drivers.</p> <p>The price of Linux-based systems is attractive. The operating system software is free. Ready-made hardware platforms are available, or can be bare metal built by choosing hardware and software components, and having the skills to assemble and maintain them.</p> <p>The robustness, reliability, security, and speed of Linux systems varies from high to low, depending on the knowledge and skills of the vendors, builders and maintainers</p> <p>Responsibility for maintaining Linux workstation hardware, operating systems, and device drivers is fragmented or doesn't exist, except from some vendors, builders and maintainers</p> <p>There are computer repair services that are equipped to diagnosed and repaired Linux systems, but not to the extent of Apple Stores</p>"},{"location":"References/iterative_development/workstations/#microsoft","title":"Microsoft","text":"<p>Many companies sell hardware platforms with Microsoft Windows installed. Many peripheral device vendors support Windows drivers.</p> <p>Consumer versions of Windows were originally designed for ease-of-use on a single-user PC without a network connection, and did not have security features built in from the outset. Windows updates are regularly improving security.</p> <p>Windows is one of hackers prime data hunting grounds, even with frequent security updates. Windows systems are everywhere and stores or has access to vast amounts of data. There are Windows installations that do not keep Windows updated. One reason may be issues with updates. Microsoft Windows update problem 2022 are recent examples.</p> <p>The reliability, robustness, security, and supportability of Microsoft systems varies from high to low, depending on the knowledge and skills of vendors, builders and maintainers. The combinations and permutations of vendor hardware platforms, software applications, and peripheral vendors and device support, may be contributing to Microsoft Windows update problems.</p> <p>There are computer repair services that are equipped to diagnosed and repaired Windows systems, but not to the extent of Apple Stores.</p> <p>Workstations from these vendors are being used to develop web sited. Some are better than others.</p> <p>I use apple products for exploring Internet technologies and creating web sites. It seems simpler, more reliable, secure, and supportable than building web sites with purchased or bare metal built Linux or Microsoft systems. </p>"},{"location":"Topics/AI/GPT/","title":"GPT","text":""},{"location":"Topics/AI/GPT/#generative-pre-learned-transformer","title":"Generative Pre-learned Transformer","text":"<p>Generative Pre-learned Transformer (GPT) is an artificial intelligence (AI) language model capable of machine learning by processing vast amounts of data, including human language. It was developed by OpenAI and its purpose is to automatically generate human-like text based on inputs provided. GPT's architecture relies on self-supervised learning, which means that it can learn from unstructured data sources without being manually pre-labeled or classified.</p> <p>The latest version of GPT is GPT-3, which has over 175 billion parameters making it one of the largest models in the industry. Its large size allows it to perform various natural language processing tasks such as translation, summarization, and question answering efficiently. Because of this, GPT-3 has shown exciting promise across various industries, including finance, healthcare, and technology.</p>"},{"location":"Topics/AI/GPT/#what-is-generative-pre-learned-transform-mean","title":"What Is Generative Pre-Learned Transform Mean","text":"<p>Generative Pre-trained Transformer (GPT) is a state-of-the-art language generation model developed by OpenAI. It utilizes deep learning techniques, specifically transformer architecture, to generate human-like natural language text based on input prompts.</p> <p>The training phase of the model involves unsupervised learning on large amounts of text data, allowing it to learn patterns and relationships within the language corpus. Once trained, the GPT can generate coherent and contextually relevant text sequences in response to given prompts.</p> <p>One of the notable features of the model is its ability to \"continue\" generating new text based on its previous generated output, creating a long streak of coherent text without requiring a new prompt from the user.</p> <p>GPT has been used in various applications like chatbots, content creation, and text summarization.</p>"},{"location":"Topics/AI/GPT/#neural-networks","title":"Neural Networks","text":"<p>In the field of machine learning and artificial intelligence, Neural Networks (NNs) are algorithms that have the ability to recognize patterns in datasets. They are modeled after the structure and function of the human brain, consisting of interconnected nodes or neurons that process and transmit information.</p> <p>Structure A neural network typically consists of three types of layers: input layer, hidden layer, and output layer.</p> <p>The input layer is responsible for receiving and encoding the input data, which can be numerical, categorical, or image data. The hidden layer(s) perform computational tasks based on the input data, and through training, learn to identify relevant features within the input data by adjusting the weights and biases associated with each neuron. The output layer provides a prediction or classification based on this learned information. Training Neural networks need to be trained using large datasets of labeled examples. During training, the network's parameters \u2013 weights and biases \u2013 are adjusted iteratively to minimize the difference between the predicted outputs and actual outputs. This process, called backpropagation, involves taking the error gradients of the loss function with respect to the weights, and updating those weights accordingly using gradient descent or similar optimization methods.</p> <p>Applications Neural networks have been successfully applied in a wide range of applications, including computer vision, natural language processing, speech recognition, and other areas where pattern recognition or classification is needed.</p> <p>That conservatism stemmed in part from the unpredictability of the neural network, the computing paradigm that modern AI is based on, which is inspired by the human brain. Instead of the traditional approach to computer programming, which relies on precise sets of instructions yielding predictable results, neural networks effectively teach themselves to spot patterns in data. The more data and computing power these networks are fed, the more capable they tend to become.</p> <p>In the early 2010s, Silicon Valley woke up to the idea that neural networks were a far more promising route to powerful AI than old-school programming. But the early AIs were painfully susceptible to parroting the biases in their training data: spitting out misinformation and hate speech. When Microsoft unveiled its chatbot Tay in 2016, it took less than 24 hours for it to tweet \u201cHitler was right I hate the jews\u201d and that feminists should \u201call die and burn in hell.\u201d OpenAI\u2019s 2020 predecessor to ChatGPT exhibited similar levels of racism and misogyny.</p> <p>The AI boom really began to take off around 2020, turbocharged by several crucial breakthroughs in neural-network design, the growing availability of data, and the willingness of tech companies to pay for gargantuan levels of computing power. But the weak spots remained, and the history of embarrassing AI stumbles made many companies, including Google, Meta, and OpenAI, mostly reluctant to publicly release their cutting-edge models. In April 2022, OpenAI announced Dall-E 2, a text-to-image AI model that could generate photorealistic imagery. But it initially restricted the release to a waitlist of \u201ctrusted\u201d users, whose usage would, OpenAI said, help it to \u201cunderstand and address the biases that DALL\u00b7E has inherited from its training data.\u201d</p>"},{"location":"Topics/AI/GPT/#parameters","title":"Parameters","text":"<p>The GPT (Generative Pre-trained Transformer) model has a large number of parameters that define its architecture, training goals, and the way it generates text. These parameters are learned during the pre-training phase of the model, where the model is trained on large amounts of text data to learn patterns in language and generate coherent text.</p> <p>The main parameters of the GPT model include:</p> <p>Embedding size: The size of the vector used to represent each word in the model. Usually set to 768 in the case of GPT models.</p> <p>Hidden size: The size of the hidden layer used in the transformer blocks to perform computations on the input. It is usually set to 768 as well.</p> <p>Number of layers: The number of transformer blocks stacked on top of each other to create the GPT model. Currently, GPT-2 uses 12 or 24 layers depending on the variant.</p> <p>Attention heads: The number of parallel attention mechanisms used in the self-attention mechanism in the transformer block. Set to 12 in the case of GPT-2 models.</p> <p>Vocabulary size: The number of unique tokens in the pre-training corpus, which defines the size of the embedding matrix.</p> <p>Dropout rate: The probability of dropping out nodes from the transformation layers during training. Typically set to 0.1 for GPT models.</p> <p>These parameters altogether determine the size, capacity and efficiency of the GPT model as well as its performance in generating coherent and natural language text.</p>"},{"location":"Topics/AI/GPT/#how-parameters-work","title":"How Parameters Work","text":"<p>In machine learning, parameters represent the weights and biases that the model uses to make predictions on new data. These values are learned during the training process to minimize the error between the predicted output of the model and the actual target values.</p> <p>There are different types of machine learning models, each with its own set of parameters which vary depending on the complexity of the model. For example, in a linear regression model, there are two parameters: the slope and the intercept. In a neural network, there can be thousands or even millions of parameters representing the weights on the connections between neurons in the network.</p> <p>During the training process, the model iteratively adjusts these parameters to reduce the error between the predicted output of the model and the actual target values. This is done by computing the loss function, which measures the difference between the predicted output and the target value. The gradients of the loss function with respect to the parameters are then computed using backpropagation, and the parameters are updated accordingly using an optimization algorithm such as stochastic gradient descent (SGD).</p> <p>Once the training process is complete, the learned parameters are used to make predictions on new data. Because these parameters have been optimized during training, the model should be able to generalize well to unseen data, making accurate predictions in most cases.</p>"},{"location":"Topics/AI/ai_hype_curve/","title":"AI Hype Curve","text":""},{"location":"Topics/AI/ai_hype_curve/#artificial-intelligence-hype","title":"Artificial Intelligence Hype","text":"AI Hype Curve <p>AI has been on the hype curve for several years now, and its position on the curve has shifted over time. In the early 2010s, AI was in the \"Innovation Trigger\" stage, where it generated a lot of excitement and interest. By the mid-2010s, AI had moved into the \"Peak of Inflated Expectations\" stage, as companies and investors poured money into the technology, and there was a lot of hype around its potential.</p>"},{"location":"Topics/AI/ai_singularity/","title":"Singularity","text":""},{"location":"Topics/AI/ai_singularity/#ai-singularity","title":"AI Singularity","text":"<p>AI Singularity refers to the hypothetical point in time when artificial intelligences reach an intelligence level that exceeds human-level intelligence and continues to self-improve, creating an exponential increase in technological advancement. It is often portrayed as a future event in science fiction media.</p> <p>The idea of AI singularity has been popularized by futurist Ray Kurzweil, who predicts that it will occur in 2045. He believes that AI will become so advanced that it will be able to improve itself faster than humans can keep up, leading to an explosion of technological progress.</p> <p>Some experts argue that AI singularity is unlikely to occur or that it may not have the utopian outcome that some predict. There are concerns about the potential risks of powerful AI systems that could potentially outsmart humans or pose existential threats.</p> <p>Overall, the concept of AI singularity raises important questions about the future of technology and the potential impact of artificial intelligence on society.</p>"},{"location":"Topics/AI/backward_propagation/","title":"Back Propagation","text":""},{"location":"Topics/AI/backward_propagation/#backward-propagation","title":"Backward Propagation","text":""},{"location":"Topics/AI/backward_propagation/#example","title":"Example","text":"<p>Backward propagation, also known as backpropagation or simply \"backprop,\" is an algorithm used in deep learning to train neural networks by adjusting the weights and biases of the neurons. It is called \"backward\" because it begins at the output layer and works backwards through the layers until it reaches the input layer.</p> <p>Here's a simple example to illustrate how backward propagation works:</p> <p>Suppose we have a neural network with one hidden layer that takes two inputs, x1 and x2, and produces one output, y. The network has the following weights and biases:</p> <ul> <li>w1 = 0.5</li> <li>w2 = -0.3</li> <li>b1 = 0.4</li> <li>w3 = 0.2</li> <li>b2 = 0.1</li> </ul> <p>We use this neural network to predict the output of a certain input (x1=1, x2=0). Suppose the actual output is y_true = 1.0.</p> <p>Forward Propagation: To make a prediction, we start with the first layer and calculate the weighted sum and apply the activation function (ReLU) to obtain the hidden layer outputs. Then, we do the same for the output layer to get the predicted value <code>y_pred</code>.</p> <pre><code>z1 = x1*w1 + x2*w2 + b1\nh1 = ReLU(z1)\nz2 = h1*w3 + b2\ny_pred = z2\n</code></pre> <p>where <code>ReLU</code> is the rectified linear unit activation function defined as <code>max(0,x)</code>.</p> <p>This gives us:</p> <ul> <li>z1 = 0.5*1 + (-0.3)*0 + 0.4 = 0.9</li> <li>h1 = max(0, z1) = 0.9</li> <li>z2 = 0.9*0.2 + 0.1 = 0.28</li> <li>y_pred = z2 = 0.28</li> </ul> <p>Calculate the Loss: To determine how good our prediction is, we need to define a loss function to measure the error between the predicted value and the true value. Here we use the mean squared error (MSE) loss function:</p> <pre><code>J = (y_pred - y_true)**2\n</code></pre> <p>So, in this case, the loss would be:</p> <ul> <li>J = (0.28 - 1.0)^2 = 0.5184</li> </ul> <p>Update Weights Using Backward Propagation: To improve the performance of the neural network, we need to adjust the weights and biases so that the predicted output is closer to the true output. To do this, we use gradient descent to update the weights and biases based on the calculated the gradient of the loss function i.e. partial derivatives of the loss function with respect to each weight and bias parameter.</p> <p>Firstly, let's calculate the gradients step-by-step.</p> <p>Partial derivative of <code>J</code> with respect to <code>z2</code>:</p> <pre><code>dJ/dz2 = 2*(y_pred - y_true) * 1 = 2*(-0.72) = -1.44\n</code></pre> <p>Partial derivative of <code>J</code> with respect to <code>w3</code>:</p> <pre><code>dJ/d_w3 = dJ/d_z2 * dz2/d_w3 = dJ/d_z2 * h1 = -1.20648\n</code></pre> <p>Partial derivative of <code>J</code> with respect to <code>b2</code>:</p> <pre><code>dJ/db2 = dJ/d_z2 * dz2/db2 = dJ/d_z2 * 1 = -1.44\n</code></pre> <p>Partial derivative of <code>J</code> with respect to <code>h1</code>:</p> <pre><code>dJ/d_h1 = dJ/d_z2 * dz2/d_h1 = dJ/d_z2 * w3 = -0.288\n</code></pre> <p>Partial derivative of <code>J</code> with respect to <code>z1</code>:</p> <pre><code>dJ/d_z1 = dJ/d_h1 * dh1/d_z1 = dJ/d_h1 if z1&gt;0 else 0 = -0.288\n</code></pre> <p>Partial derivative of <code>J</code> with respect to <code>w1</code>:</p> <pre><code>dJ/d_w1 = dJ/d_z1 * dz1/d_w1 = dJ/d_z1 * x1 = -0.288\n</code></pre> <p>Partial derivative of <code>J</code> with respect to <code>w2</code>:</p> <pre><code>dJ/d_w2 = dJ/d_z1 * dz1/d_w2 = dJ/d_z1 * x2 = 0\n</code></pre> <p>Partial derivative of <code>J</code> with respect to <code>b1</code>:</p> <pre><code>dJ/db1 = dJ/d_z1 * dz1/db1 = dJ/d_z1 * 1 = -0.288\n</code></pre> <p>Now we can update the weights and biases using the following formulas:</p> <pre><code>New weight_i = Old weight_i - Learning_rate * (gradient of loss function with respect to weight_i)\nNew \n</code></pre>"},{"location":"Topics/AI/eliza/","title":"ELIZA","text":""},{"location":"Topics/AI/eliza/#how-the-first-chatbot-predicted-the-dangers-of-ai-more-than-50-years-ago","title":"How The First Chatbot Predicted The Dangers Of Ai More Than 50 Years Ago","text":"<p>From ELIZA onwards, humans love their digital reflections.</p> <p>Some fifty years ago working in a research facility, I obtained a source copy of ELIZA, compiled it, and noticed some of the ways people interacted with it, similar to what is described in this and the following article. </p>"},{"location":"Topics/AI/eliza/#the-eliza-effect","title":"The ELIZA Effect","text":"<p>Throughout Joseph Weizenbaum\u2019s life, he liked to tell this story about a computer program he\u2019d created back in the 1960s as a professor at MIT. It was a simple chatbot named ELIZA that could interact with users in a typed conversation. As he enlisted people to try it out, Weizenbaum saw similar reactions again and again \u2014 people were entranced by the program. They would reveal very intimate details about their lives. It was as if they\u2019d just been waiting for someone (or something) to ask.</p>"},{"location":"Topics/AI/forward_propagation/","title":"Forward Propagation","text":"<p>-</p>"},{"location":"Topics/AI/forward_propagation/#forward-propagation","title":"Forward Propagation","text":"<p>Forward propagation is the process of feeding a set of inputs through a neural network to obtain an output prediction. Each layer in the network performs a series of mathematical operations on the input data to generate a new set of outputs that are passed on to the next layer.</p> <p>The process continues until the data reaches the final layer, also known as the output layer, where the final prediction is generated. During forward propagation, no learning or updating of weights occurs, and the output is solely based on the initial input values and the weights of the neurons.</p> <p>Here's an example of forward propagation for a simple neural network with one hidden layer:</p> <p>Copy Insert New import numpy as np</p>"},{"location":"Topics/AI/forward_propagation/#define-input-layer","title":"Define input layer","text":"<p>inputs = np.array([0.5, 0.3, 0.2])</p>"},{"location":"Topics/AI/forward_propagation/#initialize-weights-and-biases","title":"Initialize weights and biases","text":"<p>weights_hidden = np.array([[0.4, 0.2, -0.1], [-0.3, 0.1, 0.2]]) biases_hidden = np.array([0.1, 0.2])</p> <p>weights_output = np.array([0.3, -0.2]) bias_output = 0.05</p>"},{"location":"Topics/AI/forward_propagation/#define-sigmoid-activation-function","title":"Define sigmoid activation function","text":"<p>def sigmoid(x):     return 1 / (1 + np.exp(-x))</p>"},{"location":"Topics/AI/forward_propagation/#perform-forward-propagation","title":"Perform forward propagation","text":"<p>hidden_layer = sigmoid(np.dot(weights_hidden, inputs) + biases_hidden) output_layer = sigmoid(np.dot(weights_output, hidden_layer) + bias_output)</p> <p>print(output_layer) In this example, we start by defining our input layer consisting of three neurons. We then initialize the weights and biases for our hidden layer and output layer using numpy arrays.</p> <p>We define the sigmoid function as our activation function and use it to perform the forward propagation calculations for each layer. Finally, we print out the output prediction generated by our neural network.</p>"},{"location":"Topics/AI/forward_propagation/#example","title":"Example","text":"<p>Sure, here is an example for forward propagation:</p> <p>Suppose we have a neural network with one input layer (2 nodes), one hidden layer (3 nodes), and one output layer (1 node) which we want to use to predict the price of a house based on its size in square feet and the number of bedrooms.</p> <p>Our input variables are x1 (size in sq ft) and x2 (number of bedrooms) and we want to predict the price of a house y.</p> <p>The weights connecting the input layer to the hidden layer are w1 = 0.8, w2 = -0.5, w3 = 0.2, w4 = 1.0, w5 = 0.4, w6 = -0.6 and the bias terms for the hidden layer nodes are b1 = 0.3, b2 = -0.1, b3 = 0.9.</p> <p>The weights connecting the hidden layer to the output layer are w7 = 0.5, w8 = -1.0, w9 = 0.3 and the bias term for the output layer node is b4 = 0.2.</p> <p>The equations for computing the activation values for the hidden layer nodes are:</p> <p>z1 = x1 * w1 + x2 * w2 + b1 a1 = sigmoid(z1)</p> <p>z2 = x1 * w3 + x2 * w4 + b2 a2 = relu(z2)</p> <p>z3 = x1 * w5 + x2 * w6 + b3 a3 = tanh(z3)</p> <p>where sigmoid, relu, and tanh are the activation functions applied to the weighted sum inputs.</p> <p>The equation for computing the activation value for the output layer node is:</p> <p>z4 = a1 * w7 + a2 * w8 + a3 * w9 + b4 y = z4</p> <p>We can now plug in some numerical values for the input features and compute the predicted price using forward propagation. For example, if the size of our house is 2000 sq ft and it has 3 bedrooms, then we have:</p> <p>z1 = 2000 * 0.8 + 3 * (-0.5) + 0.3 = 1600.3 a1 = sigmoid(z1) = 0.999</p> <p>z2 = 2000 * 0.2 + 3 * 1.0 + (-0.1) = 599.9 a2 = relu(z2) = max(0, 599.9) = 599.9</p> <p>z3 = 2000 * 0.4 + 3 * (-0.6) + 0.9 = 888.9 a3 = tanh(z3) = tanh(888.9) = 1.0</p> <p>z4 = 0.999 * 0.5 + 599.9 * (-1.0) + 1.0 * 0.3 + 0.2 = -598.3 y = z4 = -598.3</p> <p>So, the predicted price for this house is negative, which doesn't make much sense. This could be due to issues with the neural network architecture, the choice of activation functions, or the training data. We would need to investigate further and potentially adjust our model to improve its predictions.</p>"},{"location":"Topics/AI/generalized_learning/","title":"Generalized Learning","text":""},{"location":"Topics/AI/generalized_learning/#generalized-learning","title":"Generalized Learning","text":"<p>Generalized Learning refers to the ability of a machine learning model to apply what it has learned from the training data to new, unseen data accurately.</p> <p>A model that can generalize well is expected to perform well on data that it has never seen before, making it more reliable for predictions in real-world applications.</p> <p>Overfitting is one of the common challenges in achieving generalization. It occurs when a model learns patterns in the training data that are not applicable to new and diverse data. To avoid overfitting, techniques such as regularization, early stopping, and cross-validation can be used.</p> <p>Other ways to improve generalized learning include:</p> <ul> <li> <p>Increasing the dataset: Having more training data can help the model learn better, as it will have access to more diverse samples that capture different characteristics of the target variable.</p> </li> <li> <p>Data Augmentation: By transforming and generating new data from the existing dataset, we can create a more robust and varied set of examples for the model to learn from.</p> </li> <li> <p>Ensemble Methods: We could leverage multiple models and combine their predictions to make a better overall prediction. Each model will provide its strengths based on the nuances between them.</p> </li> </ul> <p>Overall, the ability of a model to generalize well is an important metric of its performance in real-world applications that involve noisy data and variations.</p>"},{"location":"Topics/AI/generative_pre_learning_transform/","title":"Generative Pre-Learning Transform","text":""},{"location":"Topics/AI/generative_pre_learning_transform/#generative-pre-learned-transform","title":"Generative Pre-Learned Transform","text":"<p>Generative Pre-Learned Transform, or GPT, is a family of large neural language models that are capable of generating human-like text. These models are pre-trained on massive amounts of text data, allowing them to learn the underlying patterns and structures of natural language. GPT models are typically trained using unsupervised learning, meaning that they are not given explicit labels or guidance on what to learn.</p> <p>The \"Pre-Learned Transform\" part of the name refers to the fact that GPT models are based on a type of neural network called a transformer. The transformer architecture was introduced in a 2017 paper by Google researchers, and has since become a popular choice for building large language models. The transformer uses a mechanism called self-attention to allow the model to selectively focus on different parts of the input text, enabling it to process long sequences of text more efficiently.</p> <p>The \"Generative\" part of the name refers to the fact that GPT models are designed to generate text. Given a prompt or starting sentence, a GPT model can generate a continuation of that sentence, or even an entire paragraph or essay. GPT models have been used for a variety of natural language processing tasks, including language translation, text summarization, and chatbot development.</p>"},{"location":"Topics/AI/llm/","title":"Large Language Model","text":""},{"location":"Topics/AI/llm/#large-language-models","title":"Large Language Models","text":"<p>Large language models are a type of artificial intelligence (AI) model that is designed to generate human-like language. These models are built using deep learning techniques, specifically a type of neural network called a transformer, which has been shown to be particularly effective in natural language processing tasks.</p> <p>The basic idea behind a large language model is to train a neural network on a large corpus of text data, such as books, articles, and web pages. The network learns the statistical patterns and structures of the language, allowing it to generate text that is similar in style and content to the training data. The resulting model can then be used for a variety of natural language processing tasks, such as text generation, language translation, and sentiment analysis.</p> <p>Some of the most well-known large language models include OpenAI's GPT (Generative Pre-trained Transformer) series, Google's BERT (Bidirectional Encoder Representations from Transformers), and Facebook's RoBERTa (Robustly Optimized BERT approach). These models are typically trained on massive amounts of text data, often in the order of billions of words, and can consist of hundreds of millions or even billions of parameters.</p> <p>While large language models have shown impressive results in natural language processing tasks, they also raise concerns about issues such as data privacy, bias, and their potential to automate jobs that were traditionally performed by humans. Nevertheless, the development of large language models continues to be a significant area of research and development in the field of AI.</p>"},{"location":"Topics/AI/loss_calculation/","title":"Loss Calculation","text":""},{"location":"Topics/AI/loss_calculation/#loss-calculation-example","title":"Loss Calculation Example","text":"<p>Sure, here's an example of calculating loss:</p> <p>Let's say we have a model that predicts housing prices based on features like the number of bedrooms, square footage, and location. We have a dataset of 1000 houses with their actual selling prices and corresponding features.</p> <p>Our model is a simple linear regression that looks like this:</p> <p><code>predicted_price = w0 + w1*bedrooms + w2*square_footage + w3*location</code></p> <p>To train the model, we use the mean squared error (MSE) as our loss function:</p> <p><code>loss = (1/N) * \u2211(i=1 to N) (actual_price_i - predicted_price_i)^2</code></p> <p>Where <code>N</code> is the number of houses in our dataset, <code>actual_price_i</code> is the actual selling price of the i-th house, and <code>predicted_price_i</code> is the predicted selling price of the i-th house using our model.</p> <p>During training, we adjust the weights <code>w0</code>, <code>w1</code>, <code>w2</code>, and <code>w3</code> to minimize the loss function using an optimization algorithm like gradient descent.</p> <p>Once the model is trained, we can evaluate its performance on a test set of houses by calculating the MSE between the actual selling prices and predicted selling prices on the test set. The lower the MSE, the better the performance of our model.</p>"},{"location":"Topics/AI/neural_networks/","title":"Neural Networks","text":""},{"location":"Topics/AI/neural_networks/#how-do-neural-networks-work","title":"How Do Neural Networks Work","text":"<p>Neural Networks are a set of algorithms designed to recognize patterns. They are inspired by the structure and functioning of the human brain. Neural networks consist of multiple layers of interconnected nodes (artificial neurons) that process and transmit information. Each layer extracts features from the input data, and the output of one layer becomes the input of the next layer until the final output is produced.</p> <p>Here are the steps involved in the working of a neural network:</p> <ol> <li> <p>Data preprocessing: The input data is preprocessed to remove noise, normalize the data, and ensure that the data is in the correct format for processing.</p> </li> <li> <p>Forward propagation: The input data is fed into the first layer of the neural network, and each neuron processes the data using a weighted sum function and an activation function. The output of one layer becomes the input of the next layer, and this process continues until the final output is produced.</p> </li> <li> <p>Loss calculation: The difference between the predicted output and the actual output is calculated using a loss function. The goal of training a neural network is to minimize this loss.</p> </li> <li> <p>Backpropagation: This is the process of adjusting the weights of the connections between the neurons to reduce the loss. This is done by propagating the error backward through the network and updating the weights to improve the accuracy of the predictions.</p> </li> <li> <p>Model evaluation: Once the neural network is trained, it can be used to make predictions on new data. The accuracy of the model is evaluated using various metrics like precision, recall, and F1 score.</p> </li> </ol> <p>Neural networks have been proven to be highly effective in image recognition, speech recognition, natural language processing, and many other areas where pattern recognition is required. However, they require large amounts of data to train effectively, and they can be computationally expensive to train and use.</p>"},{"location":"Topics/AI/parameters/","title":"Parameters","text":""},{"location":"Topics/AI/parameters/#parameters","title":"Parameters","text":"<p>GPT refers to a family of transformer-based language models that are trained on large amounts of text data and can generate coherent and fluent texts given some initial prompts. These models usually have several hyperparameters that can be adjusted for specific tasks or datasets, such as the number of layers, the size of the hidden layers, the learning rate, the dropout rate, etc.</p> <p>If you have a specific question or problem related to GPT, feel free to ask and I'll do my best to provide an answer!</p>"},{"location":"Topics/AI/parameters/#model-parameters","title":"Model Parameters","text":"<p>The GPT (Generative Pre-trained Transformer) model has a large number of parameters that define its architecture, training goals, and the way it generates text. These parameters are learned during the pre-training phase of the model, where the model is trained on large amounts of text data to learn patterns in language and generate coherent text.</p> <p>The main parameters of the GPT model include:</p> <p>Embedding size: The size of the vector used to represent each word in the model. Usually set to 768 in the case of GPT models.</p> <p>Hidden size: The size of the hidden layer used in the transformer blocks to perform computations on the input. It is usually set to 768 as well.</p> <p>Number of layers: The number of transformer blocks stacked on top of each other to create the GPT model. Currently, GPT-2 uses 12 or 24 layers depending on the variant.</p> <p>Attention heads: The number of parallel attention mechanisms used in the self-attention mechanism in the transformer block. Set to 12 in the case of GPT-2 models.</p> <p>Vocabulary size: The number of unique tokens in the pre-training corpus, which defines the size of the embedding matrix.</p> <p>Dropout rate: The probability of dropping out nodes from the transformation layers during training. Typically set to 0.1 for GPT models.</p> <p>These parameters altogether determine the size, capacity and efficiency of the GPT model as well as its performance in generating coherent and natural language text.</p>"},{"location":"Topics/AI/parameters/#how-do-parameters-work","title":"How Do Parameters Work","text":"<p>In machine learning, parameters represent the weights and biases that the model uses to make predictions on new data. These values are learned during the training process to minimize the error between the predicted output of the model and the actual target values.</p> <p>There are different types of machine learning models, each with its own set of parameters which vary depending on the complexity of the model. For example, in a linear regression model, there are two parameters: the slope and the intercept. In a neural network, there can be thousands or even millions of parameters representing the weights on the connections between neurons in the network.</p> <p>During the training process, the model iteratively adjusts these parameters to reduce the error between the predicted output of the model and the actual target values. This is done by computing the loss function, which measures the difference between the predicted output and the target value. The gradients of the loss function with respect to the parameters are then computed using backpropagation, and the parameters are updated accordingly using an optimization algorithm such as stochastic gradient descent (SGD).</p> <p>Once the training process is complete, the learned parameters are used to make predictions on new data. Because these parameters have been optimized during training, the model should be able to generalize well to unseen data, making accurate predictions in most cases.</p>"},{"location":"Topics/AI/tensor_flow/","title":"Tensor Flow","text":""},{"location":"Topics/AI/tensor_flow/#what-is-tensor","title":"What Is Tensor","text":"<p>A tensor is a mathematical object that represents data in multiple dimensions. For example, a scalar could be considered a 0-dimensional tensor, a vector a 1-dimensional tensor, a matrix a 2-dimensional tensor, and so on.</p> <p>In programming, tensors are typically used to represent numerical data, such as images or audio recordings. They can be manipulated using linear algebra operations like addition and multiplication, which makes them useful for machine learning algorithms.</p> <p>In summary: A tensor is a mathematical object used to represent data in multiple dimensions.</p>"},{"location":"Topics/AI/tensor_flow/#what-is-tensorflow","title":"What Is Tensorflow","text":"<p>TensorFlow is an open-source software library developed and supported by Google that is widely used for the development of machine learning models. It was built to make it easier for developers to create, train, and deploy machine learning models through a flexible and efficient computation framework. TensorFlow allows for the creation and execution of computational graphs that represent complex mathematical algorithms in a way that can be easily visualized and optimized. It supports a wide range of machine learning techniques such as neural networks, decision trees, clustering, and regression among others, making it a powerful tool for solving a variety of real-world problems across different domains. TensorFlow is compatible with many programming languages, including Python, C++, and Java, which makes it accessible to a large community of developers worldwide.</p>"},{"location":"Topics/AI/tensor_flow/#python-tensor-tensorflow","title":"Python Tensor TensorFlow","text":"<p>TensorFlow is an open-source software library for dataflow and differentiable programming across a range of tasks. It is used for developing Machine Learning models to achieve high-quality predictions, in fields such as image classification, natural language processing, recommendation systems, and more.</p> <p>Developed by engineers and researchers at Google, TensorFlow was first released in 2015 and has since become one of the most popular libraries for building and training machine learning models.</p>"},{"location":"Topics/AI/tensor_flow/#tensor-example","title":"Tensor Example","text":"<p>In the context of TensorFlow (and more generally in Linear Algebra), a tensor refers to a multidimensional array. A scalar is a single number, a vector consists of an array of numbers arranged in a line, matrices are 2-dimensional arrays of numbers, while tensors can have N number of dimensions.</p> <p>For example, here is a representation of a 3x4x2 tensor:</p> <pre><code>[\n [[1, 2], [3, 4], [5, 6], [7, 8]], \n [[9, 10], [11, 12], [13, 14], [15, 16]],\n [[17, 18], [19, 20], [21, 22], [23, 24]]\n]\n</code></pre> <p>In TensorFlow, we use tensors to represent inputs and outputs of operations that take place within a computation graph. The tensors flow through the nodes of the graph, which represent mathematical operations or functions.</p>"},{"location":"Topics/AI/tensor_flow/#python-tensor","title":"Python Tensor","text":"<p>The term \"Python Tensor\" can refer to a couple of things. In the context of pure Python, it may refer to libraries, such as NumPy, that provide functionality for creating and manipulating tensors.</p> <p>However, in the context of this question, I suspect you may be referring to how tensors are represented in Python code, when using TensorFlow. In TensorFlow, you create tensors using the <code>tf.Tensor()</code> class, passing in a <code>value</code> (the data contained within the tensor), and an optional <code>dtype</code> argument specifying the data type:</p> <pre><code>import tensorflow as tf\n\n# creates a rank-2 tensor (matrix) with shape (3,3)\ntensor_a = tf.constant([[1,2,3],[4,5,6],[7,8,9]], dtype=tf.float32)\n\n# creates a rank-1 tensor (vector) with shape (4,)\ntensor_b = tf.constant([1,2,3,4], dtype=tf.int32)\n</code></pre> <p>Once you have created a tensor, you can perform various operations on it, including arithmetic operations, matrix multiplication, reshaping, and more.</p>"},{"location":"Topics/AI/what_is_ai/","title":"What is AI","text":""},{"location":"Topics/AI/what_is_ai/#artificial-intelligence","title":"Artificial Intelligence","text":"<p>Artificial Intelligence (AI) refers to the ability of computer systems to perform tasks that would typically require human intelligence, such as perception, reasoning, learning, and decision-making. AI systems use algorithms and machine learning techniques to analyze and interpret data, recognize patterns, and make predictions or decisions.</p> <p>There are different types of AI, including:</p> <p>Reactive machines - These AI systems can only react to current situations based on pre-defined rules and cannot learn or use past experiences to inform their decisions. Limited memory machines - These AI systems can learn from past experiences and use that knowledge to improve their decision-making abilities. However, they still have limited memory and cannot apply that knowledge to new situations. Theory of mind machines - These AI systems can understand the beliefs, desires, and intentions of other entities, including humans, and use that information to interact with them in more human-like ways. Self-aware machines - These AI systems can not only understand their environment and make decisions but also have a sense of self-awareness and consciousness. AI has a wide range of applications, from healthcare and finance to entertainment and transportation. Some examples of AI applications include voice assistants like Siri and Alexa, self-driving cars, recommendation systems on streaming platforms, and fraud detection in financial transactions.</p> <p>However, AI also raises ethical concerns, such as the potential for bias in decision-making algorithms, job displacement, and the misuse of personal data. Therefore, it is crucial to consider the ethical implications of AI and develop responsible AI practices that prioritize transparency, fairness, and accountability.---</p>"},{"location":"Topics/Astronomy/neutrino/","title":"Neutrino","text":""},{"location":"Topics/Astronomy/neutrino/#what-are-neutrinos","title":"What Are Neutrinos","text":"<p>Neutrinos are subatomic particles that are similar to electrons but have no electric charge and a very small mass, which makes them difficult to detect. They are often produced in high-energy nuclear reactions, such as those that occur in the sun or in supernovae, and are also created in certain types of radioactive decay.</p> <p>There are three types, or \"flavors,\" of neutrinos: electron neutrinos, muon neutrinos, and tau neutrinos. Neutrinos can change from one flavor to another as they travel through space, a phenomenon known as neutrino oscillation.</p> <p>Neutrinos have been studied extensively in particle physics and are of great interest to scientists because they may hold clues to the nature of the universe and the fundamental laws of physics. They are also important in astrophysics, as they can provide information about the inner workings of stars and other celestial bodies.</p>"},{"location":"Topics/Astronomy/neutrino/#how-are-they-created","title":"How Are They Created","text":"<p>Neutrinos can be created in a variety of ways, including:</p> <p>Nuclear fusion: In the sun and other stars, nuclear reactions fuse atomic nuclei together to form heavier elements, releasing energy in the process. Neutrinos are produced as a byproduct of these reactions. Radioactive decay: Certain radioactive isotopes, such as uranium and plutonium, decay and emit neutrinos as they break down. Particle collisions: High-energy particle collisions in accelerators, such as the Large Hadron Collider (LHC), can produce neutrinos as well as other particles. Cosmic rays: High-energy cosmic rays from space can produce neutrinos when they collide with particles in the Earth's atmosphere. Regardless of how they are created, neutrinos are extremely difficult to detect because they interact very weakly with matter. This means that they can pass through vast amounts of material, including the Earth, without being absorbed or deflected, making them extremely challenging to observe directly.</p>"},{"location":"Topics/Astronomy/sun/","title":"Sun","text":""},{"location":"Topics/Astronomy/sun/#how-fast-does-the-sun-rotate","title":"How Fast Does The Sun Rotate","text":"<p>The Sun rotates on its axis with an equatorial rotation speed of about 25.05 days per rotation, which is slower than its polar rotation speed of about 34.4 days per rotation. This means that different parts of the Sun's surface rotate at different speeds, which causes the Sun's magnetic field to become twisted and distorted, leading to sunspots, solar flares, and other solar activity. It's worth noting that the rotation of the Sun varies with latitude, with the equator rotating faster than the poles, a phenomenon known as differential rotation.</p>"},{"location":"Topics/Astronomy/sun/#how-are-photon-created-in-the-sun","title":"How Are Photon Created In The Sun","text":"<p>A photon is a quantum of electromagnetic radiation, and it is created in the Sun through a process known as nuclear fusion. In the core of the Sun, where temperatures and pressures are extremely high, hydrogen nuclei (protons) collide and fuse together to form helium nuclei. During this fusion process, some of the mass is converted into energy in the form of photons.</p> <p>Specifically, the fusion process that creates photons in the Sun is called the proton-proton chain. In this process, four hydrogen nuclei (protons) are fused together to form a helium nucleus, two positrons, and two neutrinos. The positrons quickly annihilate with electrons, releasing more photons. The neutrinos escape the Sun without interacting with matter and can be detected on Earth, providing important information about the Sun's interior.</p> <p>The photons created through nuclear fusion in the Sun's core are absorbed and re-emitted many times as they travel through the dense layers of the Sun's interior. Eventually, they make their way to the surface of the Sun and are emitted into space as visible light, ultraviolet radiation, and other forms of electromagnetic radiation.</p>"},{"location":"Topics/Astronomy/sun/#what-is-an-equinox","title":"What Is An Equinox","text":"<p>An equinox is a astronomical event that occurs twice a year, around March 20th and September 22nd. During an equinox, the sun is positioned directly above the Earth's equator, and the length of day and night are nearly equal in all parts of the world.</p> <p>The word \"equinox\" comes from the Latin words \"aequus,\" meaning equal, and \"nox,\" meaning night. The equinox marks the transition from one season to another, with the March equinox marking the beginning of spring in the Northern Hemisphere and the beginning of autumn in the Southern Hemisphere, and the September equinox marking the beginning of autumn in the Northern Hemisphere and the beginning of spring in the Southern Hemisphere.</p> <p>The equinox is an important event in many cultures and is often associated with the start of new cycles, renewal, and balance.</p>"},{"location":"Topics/Autonomous_Vehicles/5g/","title":"5G - Autonomous Vehicles","text":""},{"location":"Topics/Autonomous_Vehicles/5g/#5g-autonomous-vehicles","title":"5G - Autonomous Vehicles","text":"<p>Autonomous vehicles are expected to transform the way we think about transportation. These vehicles have the potential to reduce traffic congestion, improve safety, and increase mobility for people who are unable to drive. However, the development of autonomous vehicles is dependent on several technological advancements, including advances in sensors, artificial intelligence, and communication technologies.</p> <p>One of the key challenges facing the development of autonomous vehicles is the need for high-speed, low-latency communication between vehicles and their surroundings. Autonomous vehicles rely on a wide range of sensors, such as radar, lidar, and cameras, to detect obstacles and navigate roads. However, these sensors have limitations, and there are situations where they may not be able to detect obstacles or hazards on the road.</p> <p>This is where 5G comes in. 5G networks provide faster data transfer rates, higher capacity, and lower latency compared to previous generations of mobile networks. This makes it possible for autonomous vehicles to communicate with their surroundings in real-time, enabling them to detect and avoid obstacles and hazards on the road.</p> <p>For example, imagine a situation where an autonomous vehicle is driving on a highway and encounters a road closure due to an accident. With 5G, the vehicle can receive real-time information about the road closure and adjust its route accordingly. This can help to reduce traffic congestion and improve safety on the road.</p> <p>In addition to enabling real-time communication between vehicles and their surroundings, 5G can also support advanced applications and services that are critical for autonomous vehicles. For example, 5G can support the transmission of high-definition video data, which is essential for autonomous vehicles to detect and respond to their surroundings.</p> <p>Overall, the combination of autonomous vehicles and 5G has the potential to transform the way we think about transportation. By enabling real-time communication between vehicles and their surroundings, 5G can help to improve safety, reduce traffic congestion, and increase mobility for people who are unable to drive.</p>"},{"location":"Topics/Autonomous_Vehicles/ev_black_box/","title":"Autonomous Vehicles Black Box","text":"<p>Yes, many autonomous vehicles have a \"black box\" similar to those found in airplanes, which is designed to record and store important information about the vehicle's operation.</p> <p>The black box in an autonomous vehicle typically consists of a data recorder that captures a range of data, including sensor readings, GPS coordinates, and other information about the vehicle's performance and behavior. This data can be used to analyze the vehicle's performance and identify any issues that may have contributed to an accident or malfunction.</p> <p>The use of black boxes in autonomous vehicles is becoming increasingly common, as regulators and manufacturers recognize the importance of gathering accurate and detailed data about the operation of these vehicles. The data collected by these devices can be used to improve the safety and reliability of autonomous vehicles, as well as to inform regulatory and policy decisions related to their operation.</p> <p>However, it's important to note that the specific requirements for black boxes in autonomous vehicles can vary depending on the jurisdiction and the specific type of vehicle in question. Some jurisdictions may require more or less extensive data collection, and some types of autonomous vehicles may have different data collection needs based on their design and intended use.</p>"},{"location":"Topics/Autonomous_Vehicles/ev_hype/","title":"Ev hype","text":""},{"location":"Topics/Autonomous_Vehicles/ev_hype/#autonomous-vehicles-hype","title":"Autonomous Vehicles Hype","text":"<p>Autonomous vehicles have been a topic of hype and discussion for many years now. The idea of cars that can drive themselves is incredibly exciting, and many people believe that it has the potential to revolutionize transportation as we know it. However, it is also true that there has been a lot of hype around autonomous vehicles that may not be entirely justified.</p> <p>One of the main issues with autonomous vehicles is that the technology is still in its early stages, and there are many challenges that need to be overcome before self-driving cars become a reality. For example, autonomous vehicles need to be able to navigate complex and unpredictable environments, such as city streets and highways, and they need to be able to make split-second decisions to avoid accidents. There are also legal and regulatory issues that need to be addressed before autonomous vehicles can be widely deployed on public roads.</p> <p>Another issue with the hype around autonomous vehicles is that it can create unrealistic expectations about what the technology can actually do. For example, some people may believe that autonomous vehicles will eliminate all car accidents, but the reality is that accidents may still occur due to unforeseen circumstances or technical glitches. Similarly, some people may expect that autonomous vehicles will be able to drive in any weather condition or on any road, but there may be limitations to what the technology can handle.</p> <p>Overall, it is important to be realistic about the potential of autonomous vehicles and to acknowledge that there are still many challenges that need to be overcome. While the technology has the potential to revolutionize transportation and make our roads safer and more efficient, it is unlikely that we will see widespread deployment of autonomous vehicles in the near future.</p>"},{"location":"Topics/Autonomous_Vehicles/ev_video/","title":"Autonomous Vehicles Video","text":"<p>Video is an essential component of many autonomous vehicles' sensing systems, as it allows them to \"see\" and interpret their surroundings. These vehicles typically use a combination of cameras, sensors, and other technologies to gather visual data from their environment.</p> <p>The video feeds from the cameras are typically processed by onboard computer systems, which use advanced algorithms to detect and interpret objects and obstacles in the vehicle's path. These algorithms can identify and track other vehicles, pedestrians, and even road signs and lane markings, providing the autonomous vehicle with the information it needs to navigate safely and efficiently.</p> <p>In addition to the basic visual data, autonomous vehicles may also incorporate other features such as depth sensing, infrared imaging, and lidar technology to provide more accurate and comprehensive information about their environment. This allows the vehicle to make more informed decisions about how to respond to changing road conditions, traffic patterns, and other variables.</p> <p>Overall, video is a critical tool for autonomous vehicles, providing them with the real-time data they need to make safe, reliable driving decisions. As technology continues to advance, we can expect to see even more sophisticated video-based systems deployed in the autonomous vehicles of the future.</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_cars/","title":"Autonomous Cars","text":""},{"location":"Topics/Autonomous_Vehicles/self_driving_cars/#what-are-self-driving-cars","title":"What Are Self Driving Cars","text":"<p>Self-driving cars, also known as autonomous vehicles, are cars that are capable of sensing their environment and navigating without the need for human input. They use a combination of sensors, cameras, radar, and other technologies to perceive their surroundings, make decisions, and navigate roads safely.</p> <p>Self-driving cars are designed to operate without human intervention or with minimal human supervision. They are typically equipped with advanced software and hardware systems that allow them to perceive their environment, understand traffic patterns, and make decisions based on that information. The goal of self-driving cars is to make transportation safer, more efficient, and more convenient by reducing accidents, traffic congestion, and the need for human intervention while driving.</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_cars/#what-are-the-levels-of-autonomous-vehicles","title":"What Are The Levels Of Autonomous Vehicles","text":"<p>There are generally five levels of autonomous vehicles, defined by the Society of Automotive Engineers (SAE):</p> <ul> <li> <p>Level 0: No Automation - The driver is in complete control of the vehicle with no automation or assistance.</p> </li> <li> <p>Level 1: Driver Assistance - The vehicle has some driver assistance features, such as cruise control, lane departure warnings, or automatic braking.</p> </li> <li>Level 2: Partial Automation - The vehicle can control steering, acceleration, and braking, but the driver must still be alert and ready to take control if necessary.</li> <li>Level 3: Conditional Automation - The vehicle can handle most driving tasks, but the driver must still be ready to intervene when prompted by the system.</li> <li>Level 4: High Automation - The vehicle is capable of handling all driving tasks under specific conditions or in certain environments, and the driver may not need to be attentive at all times.</li> <li>Level 5: Full Automation - The vehicle can handle all driving tasks in all environments, and there is no need for a human driver.</li> </ul>"},{"location":"Topics/Autonomous_Vehicles/self_driving_cars/#are-autonomous-vehicles-safe","title":"Are Autonomous Vehicles Safe","text":"<p>Autonomous vehicles are designed to improve safety on the road by reducing the number of accidents caused by human error. However, like any new technology, there are still safety concerns associated with autonomous vehicles.</p> <p>Overall, autonomous vehicles have the potential to be safer than human-driven vehicles because they are not subject to human error, such as distraction, fatigue, or impairment. Autonomous vehicles are equipped with sensors and advanced software that allow them to perceive their environment and make decisions based on that information.</p> <p>However, there have been some incidents involving autonomous vehicles, including accidents that have resulted in injuries or fatalities. These incidents highlight the need for continued research and development to improve the safety of autonomous vehicles.</p> <p>It's important to note that even with the best technology, accidents can still occur due to factors such as weather conditions, unexpected obstacles on the road, or mechanical failures. As with any technology, it's important to ensure that autonomous vehicles are thoroughly tested and regulated to ensure their safety on the road.</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_cars/#radar-and-lidar","title":"Radar And Lidar","text":"<p>Radar and LiDAR are two types of sensors commonly used in autonomous vehicles to help detect and navigate their environment.</p> <p>Radar, which stands for Radio Detection and Ranging, is a sensor that uses radio waves to detect objects and their distance from the vehicle. Radar sensors can detect the speed and direction of objects, such as other vehicles, pedestrians, or cyclists, and can provide information about their distance from the vehicle. This information can help the vehicle's software make decisions about speed, braking, and steering.</p> <p>LiDAR, which stands for Light Detection and Ranging, is a sensor that uses laser light to create a 3D map of the vehicle's surroundings. LiDAR sensors emit laser pulses that bounce off surrounding objects and return to the sensor, providing precise information about the distance, size, and shape of objects in the environment. This information can be used to create a detailed map of the environment and help the vehicle's software navigate safely and avoid obstacles.</p> <p>Both radar and LiDAR sensors can work together to provide a more comprehensive understanding of the environment around the vehicle. By combining the data from multiple sensors, the vehicle's software can build a detailed and accurate picture of its surroundings and make decisions about navigation, speed, and safety.</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_cars/#visual-sensor","title":"Visual Sensor","text":"<p>Visual sensors are another type of sensor used in autonomous vehicles to detect and navigate the environment. Visual sensors typically use cameras to capture images and video of the vehicle's surroundings, which are then processed by the vehicle's software to create a 3D map of the environment.</p> <p>Visual sensors can provide valuable information about the vehicle's environment, such as lane markings, traffic signals, signs, and other objects. This information can be used to help the vehicle navigate safely and make decisions about speed, braking, and steering.</p> <p>In addition to traditional cameras, some autonomous vehicles also use thermal imaging cameras, which detect heat signatures to help detect objects in low-light or poor weather conditions.</p> <p>While visual sensors can provide a wealth of information about the environment, they also have limitations. For example, they may struggle in poor weather conditions, such as heavy rain or snow, or in areas with poor lighting. Additionally, visual sensors may be subject to issues such as glare or reflections, which can impact their accuracy.</p> <p>Despite these limitations, visual sensors remain an important part of autonomous vehicle technology and are often used in conjunction with other types of sensors, such as radar and LiDAR, to create a comprehensive understanding of the vehicle's surroundings.</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_trucks/","title":"Autonomous Trucks","text":""},{"location":"Topics/Autonomous_Vehicles/self_driving_trucks/#what-are-self-driving-trucks","title":"What Are Self Driving Trucks","text":"<p>Autonomous trucks are self-driving vehicles that can transport goods without the need for a human driver. These trucks use various sensors, cameras, and GPS technology to navigate roads and highways safely while avoiding obstacles.</p> <p>The implementation of self-driving trucks has the potential to revolutionize the transportation industry. It could significantly reduce the cost of transporting goods and increase delivery speed. Autonomous trucks can operate 24/7 without the need for breaks, reducing shipping times and improving efficiency.</p> <p>However, autonomous trucks also raise concerns about job displacement, as many truck drivers may be replaced by self-driving vehicles. Additionally, there are also concerns about safety and cybersecurity risks associated with these types of vehicles.</p> <p>Overall, the implementation of autonomous trucks holds both benefits and challenges. While it has the potential to improve efficiency and reduce costs, it must also be implemented in a responsible and safe manner.</p> <p>Autonomous trucks are intended to ultimately have better safety records than those with human drivers. Let's discuss the safety aspects of autonomous trucks below:</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_trucks/#safety-benefits-of-autonomous-trucks","title":"Safety Benefits of Autonomous Trucks","text":"<p>Fewer road accidents: Human errors such as driver fatigue, distracted driving, and reckless behaviors are some of the most frequent reasons for automobile incidents. Autonomous vehicles use sensors and cameras to evaluate the surroundings, which could assist in reducing such mishaps caused by human error.</p> <p>Increased accuracy: Automation helps maintain precise routes and speeds, as well as reduce the need for sudden stops or turns that might cause sudden disruption on the road.</p> <p>Improved response time: Self-driving vehicles can respond to changes in traffic patterns faster than their human counterparts.</p> <p>Predictive Maintenance: Autonomous trucks equipped with IoT technology can proactively detect maintenance issues before they become serious, lowering the risk of breakdowns or accidents caused by equipment failure.</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_trucks/#challenges-with-autonomous-trucks-safety","title":"Challenges with Autonomous Trucks Safety","text":"<p>System failures: A glitch in the cameras or sensors used by autonomous trucks may result in incorrect decisions being made by the vehicle. However, autonomous trucks utilize redundant systems to keep operations running normally, ensuring safety, even in challenging circumstances.</p> <p>Adapting to weather and infrastructure: Autonomous vehicles are constantly evolving to adapt to changing conditions, such as adjusting sensitivity settings on cameras or sensors during inclement weather. However, changing road conditions, construction, and infrastructure can still pose challenges for autonomous vehicle technology when it is unable to collect sufficient data to make the correct decision.</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_trucks/#are-autonomous-trucks-safe","title":"Are Autonomous Trucks Safe","text":"<p>Autonomous trucks are intended to ultimately have better safety records than those with human drivers. Let's discuss the safety aspects of autonomous trucks below:</p> <p>Safety Benefits of Autonomous Trucks: Fewer road accidents: Human errors such as driver fatigue, distracted driving, and reckless behaviors are some of the most frequent reasons for automobile incidents. Autonomous vehicles use sensors and cameras to evaluate the surroundings, which could assist in reducing such mishaps caused by human error.</p> <p>Increased accuracy: Automation helps maintain precise routes and speeds, as well as reduce the need for sudden stops or turns that might cause sudden disruption on the road.</p> <p>Improved response time: Self-driving vehicles can respond to changes in traffic patterns faster than their human counterparts.</p> <p>Predictive Maintenance: Autonomous trucks equipped with IoT technology can proactively detect maintenance issues before they become serious, lowering the risk of breakdowns or accidents caused by equipment failure.</p> <p>Challenges with Autonomous Trucks Safety System failures: A glitch in the cameras or sensors used by autonomous trucks may result in incorrect decisions being made by the vehicle. However, autonomous trucks utilize redundant systems to keep operations running normally, ensuring safety, even in challenging circumstances.</p> <p>Adapting to weather and infrastructure: Autonomous vehicles are constantly evolving to adapt to changing conditions, such as adjusting sensitivity settings on cameras or sensors during inclement weather. However, changing road conditions, construction, and infrastructure can still pose challenges for autonomous vehicle technology when it is unable to collect sufficient data to make the correct decision.</p> <p>Conclusion: While autonomous trucks have several safety advantages over traditional human-driven vehicles, there is always a chance of occasional glitches or unexpected events. The safety benefits outweigh the drawbacks when evaluated as a whole, and considerable investment is being made towards advancing this technology to make it safer and more reliable.</p>"},{"location":"Topics/Autonomous_Vehicles/self_driving_trucks/#conclusion","title":"Conclusion","text":"<p>While autonomous trucks have several safety advantages over traditional human-driven vehicles, there is always a chance of occasional glitches or unexpected events. The safety benefits outweigh the drawbacks when evaluated as a whole, and considerable investment is being made towards advancing this technology to make it safer and more reliable.</p>"},{"location":"Topics/Electronics/nonlinear_modulation/","title":"Nonlinear Modulation","text":""},{"location":"Topics/Electronics/nonlinear_modulation/#nonlinear-modulation","title":"Nonlinear Modulation","text":"<p>Nonlinear modulation is a technique used in communication systems to modulate a signal by changing the amplitude, frequency, or phase of a carrier wave in a nonlinear way. Unlike linear modulation techniques such as amplitude modulation (AM) and frequency modulation (FM), nonlinear modulation does not preserve the linearity of the original signal.</p> <p>In nonlinear modulation, the information signal is superimposed on the carrier wave by modifying its amplitude, frequency, or phase in a nonlinear fashion. This results in a distorted version of the original signal, which can be demodulated at the receiver end using suitable demodulation techniques.</p> <p>One common example of nonlinear modulation is quadrature amplitude modulation (QAM), which is widely used in digital communication systems such as satellite, cable, and wireless communication. In QAM, the amplitude and phase of a carrier wave are modulated by two independent information signals, resulting in a non-linear modulation scheme.</p> <p>Nonlinear modulation schemes are generally more complex than linear modulation schemes, but they can offer higher data rates and improved spectral efficiency. However, they also require more sophisticated signal processing techniques and are more susceptible to noise and interference.</p> <p>--</p>"},{"location":"Topics/Electronics/nonlinear_modulation/#nonlinear-modulation-frequencies","title":"Nonlinear Modulation Frequencies","text":"<p>The frequencies produced in a nonlinear modulation scheme depend on the specific modulation technique used and the characteristics of the modulating signal. In general, nonlinear modulation techniques can generate a wide range of frequencies, including both harmonic and non-harmonic frequencies.</p> <p>For example, in a nonlinear modulation technique such as amplitude modulation (AM), the carrier wave is modulated by the information signal in a nonlinear fashion, resulting in a sideband spectrum containing frequencies that are integer multiples of the information signal frequency. The frequency spectrum of the modulated signal includes both the carrier frequency and the two sidebands, which are located at frequencies above and below the carrier frequency.</p> <p>In other nonlinear modulation techniques such as frequency modulation (FM), the carrier wave is modulated by the information signal in a nonlinear fashion that results in a frequency deviation of the carrier frequency. The frequency spectrum of the modulated signal in this case includes a range of frequencies centered around the carrier frequency, with the bandwidth of the spectrum depending on the magnitude of the frequency deviation.</p>"},{"location":"Topics/Electronics/software_defined_radio/","title":"Software Defined Radio","text":""},{"location":"Topics/Electronics/software_defined_radio/#software-defined-radio","title":"Software Defined Radio","text":"<p>Software Defined Radio (SDR) is a radio communication system where the traditional hardware components are replaced or complemented by software for signal processing. This means that instead of using specialized hardware circuits for filtering, mixing, and demodulating radio signals, SDR uses a flexible software-based approach to implement these functions.</p> <p>SDR systems typically consist of a general-purpose processor, an analog-to-digital converter (ADC), and a digital-to-analog converter (DAC). The ADC samples the incoming analog radio signal and converts it to a digital signal, which can then be processed by the software running on the general-purpose processor. The processed digital signal is then converted back to analog form by the DAC, and transmitted over the air.</p> <p>The advantage of SDR is that it offers a high degree of flexibility and versatility, as the software can be reconfigured to support different radio communication standards or frequencies. This makes it possible to use the same hardware platform for different applications, simply by changing the software.</p> <p>SDR has a wide range of applications in areas such as military communications, public safety, wireless sensor networks, and amateur radio. It can also be used in research and development to simulate different radio communication scenarios and test new algorithms and protocols.</p>"},{"location":"Topics/Electronics/software_defined_radio/#how-does-it-work","title":"How Does It Work","text":"<p>A software-defined radio (SDR) system works by using software to perform signal processing functions that would normally be implemented in hardware in a traditional radio system. This software-based approach provides flexibility and allows the system to adapt to different radio communication standards or frequencies.</p> <p>The basic components of an SDR system include a radio frequency (RF) front-end, an analog-to-digital converter (ADC), a digital signal processor (DSP), and a digital-to-analog converter (DAC).</p> <p>The RF front-end is responsible for filtering and amplifying the incoming RF signal, and converting it to an intermediate frequency (IF) signal. The IF signal is then digitized by the ADC and passed to the DSP for processing.</p> <p>In the DSP, the digital signal is filtered, demodulated, and decoded according to the desired radio communication standard or protocol. The resulting digital data is then passed to the DAC, which converts it back to an analog signal that can be transmitted over the air.</p> <p>The software used in an SDR system typically consists of several modules or blocks, each performing a specific signal processing function. These modules can be configured and reconfigured as needed to support different radio communication standards or frequencies.</p> <p>One of the main advantages of an SDR system is its flexibility. Because the signal processing functions are performed in software, the system can be easily reconfigured to support different applications or radio communication standards without requiring hardware changes. This makes SDR systems ideal for applications where a high degree of adaptability and flexibility is required.</p>"},{"location":"Topics/Health/cellulitis/","title":"What Is Cellulitis","text":""},{"location":"Topics/Health/cellulitis/#what-is-cellulitis","title":"What Is Cellulitis","text":"<p>Cellulitis is a bacterial skin infection that affects the deeper layers of skin and the tissues beneath the skin. It can occur anywhere on the body but most commonly affects the legs, arms, and face.</p> <p>Cellulitis typically starts as a small red or pink area of skin that gradually spreads, becoming swollen, warm, and painful. Other symptoms may include fever, chills, and swollen lymph nodes.</p> <p>Cellulitis is caused by bacteria, most commonly Staphylococcus or Streptococcus, entering the skin through a cut, scrape, or other opening. It can also occur in areas where the skin is already damaged, such as with eczema or a surgical wound.</p> <p>If left untreated, cellulitis can lead to serious complications, such as sepsis, gangrene, or lymphangitis. Treatment typically involves antibiotics to fight the bacterial infection and may require hospitalization in severe cases.</p>"},{"location":"Topics/Health/pilonidal/","title":"What is Pilonidal Cyst","text":""},{"location":"Topics/Health/pilonidal/#pilonidal-cyst","title":"Pilonidal Cyst","text":"<p>A pilonidal cyst is a type of skin condition that occurs at the top of the buttocks, near the tailbone. It is formed when hair and skin debris get trapped in a small depression or pit in the skin in that area, leading to an infection.</p> <p>The cyst appears as a small, painful lump or swelling that can become red and inflamed. Sometimes, it can also cause drainage of pus or blood from the affected area. Pilonidal cysts can be acute, meaning they come on suddenly and are short-lived, or chronic, meaning they persist for a longer time and can recur.</p> <p>Risk factors for pilonidal cysts include having a family history of the condition, being male, being overweight, and having a job that involves prolonged sitting. Treatment typically involves antibiotics, pain relief, and drainage of the cyst if necessary. In some cases, surgery may be required to remove the cyst completely.</p>"},{"location":"Topics/Health/quadriceps/","title":"What is Quadriceps Rupture","text":""},{"location":"Topics/Health/quadriceps/#quadriceps-rupture","title":"Quadriceps Rupture","text":"<p>Quadriceps rupture is a condition where one or more of the muscles in the quadriceps group tears or separates from the tendons that attach them to the knee. The quadriceps muscles are located at the front of the thigh and are responsible for extending the knee joint.</p> <p>Quadriceps ruptures can be partial or complete, and they often occur during high-impact activities like jumping or sudden movements that place excessive strain on the quadriceps. They can also occur as a result of a direct blow or injury to the thigh.</p> <p>Symptoms of a quadriceps rupture include sudden, severe pain at the front of the thigh, swelling, bruising, weakness in the affected leg, and difficulty walking or straightening the knee. In some cases, there may be a visible gap or bulge in the muscle where the tear has occurred.</p> <p>Treatment for a quadriceps rupture typically involves rest, ice, compression, and elevation to reduce pain and swelling. Physical therapy may also be recommended to help restore strength and range of motion to the affected leg. In severe cases, surgery may be necessary to repair the torn muscle or tendon.</p>"},{"location":"Topics/Health/yawn/","title":"Why Do We Yawn","text":""},{"location":"Topics/Health/yawn/#why-do-we-yawn","title":"Why Do We Yawn","text":"<p>Yawning is a reflexive behavior that involves opening the mouth wide and inhaling deeply. It is a common phenomenon that has been observed in many animals, including humans, and it can occur for a variety of reasons.</p> <p>One popular theory suggests that we yawn to regulate the levels of oxygen and carbon dioxide in our bodies. When we yawn, we inhale a large amount of air, which can help to increase the amount of oxygen in the blood and remove excess carbon dioxide. This theory is supported by the observation that we tend to yawn more frequently when we are tired or sleepy, as our breathing rate may decrease during these times.</p> <p>Another theory suggests that yawning may be a way of communicating or signaling social cues. For example, yawning has been shown to be contagious, meaning that seeing or hearing someone else yawn can trigger a yawn in oneself. This may be a way of signaling boredom, fatigue, or disinterest in a social situation, or it may be a way of synchronizing the behavior of a group.</p> <p>Overall, while the exact reason why we yawn is still not fully understood, it is likely that a combination of factors are involved, including physiological regulation and social communication.</p>"},{"location":"Topics/Meta/metaverse/","title":"Metaverse","text":""},{"location":"Topics/Meta/metaverse/#metaverse-news","title":"Metaverse News","text":"<p>On Tuesday March 13, 2023 Facebook parent Meta (META) announced that it will lay off another 10,000 employees. The move is part of CEO Mark Zuckerberg\u2019s so-called \u201cYear of Efficiency\u201d during which the company is cutting back on spending amid falling digital advertising revenue and rising interest rates.</p> <p>\u201cOur single largest investment is in advancing AI and building it into every one of our products,\u201d Zuckerberg wrote. \u201cOur leading work building the metaverse and shaping the next generation of computing platforms also remains central to defining the future of social connection.\u201d</p>"},{"location":"Topics/Python/jupyter/","title":"Jupyter","text":""},{"location":"Topics/Python/jupyter/#jupyter","title":"Jupyter","text":"<p>Jupyter is an open-source web-based interactive computing environment used for data science, scientific computing, and education. It supports various programming languages such as Python, R, Julia, and others. Jupyter is an acronym for Julia, Python, and R, which are the three primary programming languages it was designed for.</p> <p>Jupyter notebooks are documents that can contain live code, equations, visualizations, and narrative text. They are widely used for data exploration, data analysis, machine learning, scientific simulations, and teaching programming. Jupyter notebooks can be run locally on your computer or in the cloud using services such as Google Colaboratory or Microsoft Azure Notebooks.</p> <p>Jupyter notebooks consist of two main components: the notebook interface and the kernel. The notebook interface is a web application that allows users to create, edit, and run Jupyter notebooks. The kernel is the computational engine that executes the code in the notebook.</p> <p>Jupyter notebooks are becoming increasingly popular among data scientists and software engineers due to their ability to combine code, data, and documentation in a single file. They also allow for easy sharing and collaboration, as notebooks can be shared online or through version control systems such as Git.</p> <p>Overall, Jupyter notebooks are a powerful tool for data science and scientific computing, providing an interactive and intuitive way to work with data and code.</p>"},{"location":"Topics/Python/pandas/","title":"Pandas","text":"<p>sum of pandas Dataframe column To find the sum of a pandas DataFrame column, you can use the sum() method of the DataFrame. Here's an example:</p> <p>bash Copy code import pandas as pd</p>"},{"location":"Topics/Python/pandas/#create-a-sample-dataframe","title":"create a sample dataframe","text":"<p>df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})</p>"},{"location":"Topics/Python/pandas/#find-the-sum-of-column-a","title":"find the sum of column A","text":"<p>sum_of_A = df['A'].sum()</p> <p>print(sum_of_A)  # output: 6 In this example, we created a DataFrame df with two columns 'A' and 'B'. We then used the sum() method to find the sum of column 'A' and stored it in a variable sum_of_A. Finally, we printed the value of sum_of_A.</p> <p>um of pandas Dataframe column dollars Assuming that you have a pandas DataFrame called df and a column named dollars containing numeric values in dollars, you can calculate the sum of the column using the following code:</p> <p>bash Copy code sum_of_dollars = df['dollars'].sum() This will return the sum of all the values in the dollars column. If you want to round the result to a certain number of decimal places, you can use the round() function:</p> <p>bash Copy code sum_of_dollars_rounded = round(df['dollars'].sum(), 2) This will round the sum to two decimal places. You can adjust the number of decimal places by changing the second argument of the round() function.</p> <p>pandas remove currency dollar signs and commas To remove dollar signs and commas from a pandas DataFrame column containing currency values, you can use the str.replace() method. Here's an example:</p> <p>bash Copy code import pandas as pd</p>"},{"location":"Topics/Python/pandas/#create-a-sample-dataframe_1","title":"create a sample DataFrame","text":"<p>df = pd.DataFrame({'Amount': ['\\(1,000.00', '\\)2,500.50', '$500.75']})</p>"},{"location":"Topics/Python/pandas/#remove-dollar-signs-and-commas","title":"remove dollar signs and commas","text":"<p>df['Amount'] = df['Amount'].str.replace('$', '').str.replace(',', '')</p> <p>print(df) This will output the following DataFrame:</p> <p>yaml Copy code     Amount 0  1000.00 1  2500.50 2   500.75 In the code above, we first import pandas and create a sample DataFrame with a column called 'Amount' containing currency values. We then use the str.replace() method twice to remove the dollar signs and commas from the 'Amount' column. The first call to str.replace() removes the dollar signs ('$') and the second call removes the commas (','). We assign the result of these operations back to the 'Amount' column, overwriting the original values.</p> <p>pandas replace row using regex To replace rows in a pandas DataFrame using regex, you can use the replace() method with the regex parameter set to True. Here's an example:</p> <p>python Copy code import pandas as pd</p>"},{"location":"Topics/Python/pandas/#create-a-sample-dataframe_2","title":"create a sample DataFrame","text":"<p>df = pd.DataFrame({'text': ['hello world', 'foo bar', 'baz qux']})</p>"},{"location":"Topics/Python/pandas/#replace-rows-containing-the-word-world-with-universe","title":"replace rows containing the word \"world\" with \"universe\"","text":"<p>df = df.replace({'text': r'.world.'}, {'text': 'universe'}, regex=True)</p> <p>print(df) Output:</p> <p>arduino Copy code         text 0   universe 1    foo bar 2    baz qux In this example, the replace() method is called on the DataFrame df. The first argument is a dictionary where the keys are the columns to be replaced, and the values are the replacement values. The second argument is regex=True, indicating that the replacement values are regular expressions.</p> <p>In the dictionary, the regular expression r'.world.' matches any string containing the word \"world\". The replacement value is the string 'universe'.</p> <p>Note that this method replaces the entire row, not just the specific cell that matches the regular expression. If you want to replace only a specific cell, you can use boolean indexing and assignment, like this:</p> <p>python Copy code</p>"},{"location":"Topics/Python/pandas/#replace-the-cell-in-the-first-row-and-first-column-containing-world-with-universe","title":"replace the cell in the first row and first column containing \"world\" with \"universe\"","text":"<p>df.loc[df['text'].str.contains('world'), 'text'] = 'universe'</p> <p>pandas replace line with regex To replace a line containing a certain pattern or regular expression in Pandas, you can use the str.contains() method to create a Boolean mask and then use the mask to select the rows that need to be replaced. Here's an example:</p> <p>Suppose you have a DataFrame df with a column named text, and you want to replace all the lines that contain the word \"foo\" with the word \"bar\". Here's how you can do it:</p> <p>python Copy code import pandas as pd</p>"},{"location":"Topics/Python/pandas/#create-a-sample-dataframe_3","title":"Create a sample DataFrame","text":"<p>data = {'text': ['this line does not contain foo',                  'this line contains foo',                  'another line without foo']} df = pd.DataFrame(data)</p>"},{"location":"Topics/Python/pandas/#create-a-boolean-mask-to-select-the-rows-that-contain-foo","title":"Create a Boolean mask to select the rows that contain \"foo\"","text":"<p>mask = df['text'].str.contains('foo')</p>"},{"location":"Topics/Python/pandas/#replace-the-selected-rows-with-bar","title":"Replace the selected rows with \"bar\"","text":"<p>df.loc[mask, 'text'] = df.loc[mask, 'text'].str.replace('foo', 'bar')</p> <p>In this example, we create a Boolean mask mask by calling str.contains() on the text column of df, which returns a Series of Booleans indicating whether each element in the column contains the string \"foo\". We then use this mask to select the rows that contain \"foo\" using df.loc[mask]. Finally, we call str.replace() on the selected rows to replace \"foo\" with \"bar\". Note that we use df.loc[mask, 'text'] to select only the text column of the selected rows.</p> <p>You can insert an empty row after a row with a specific string in a pandas DataFrame using the following steps:</p> <p>Find the index of the row with the specific string using the loc method. Use the iloc method to insert an empty row at the index after the row with the specific string. Here's an example code snippet that demonstrates this:</p> <p>python Copy code import pandas as pd</p>"},{"location":"Topics/Python/pandas/#example-dataframe","title":"Example DataFrame","text":"<p>df = pd.DataFrame({     'A': ['foo', 'bar', 'baz'],     'B': [1, 2, 3] })</p>"},{"location":"Topics/Python/pandas/#find-the-index-of-the-row-with-the-specific-string","title":"Find the index of the row with the specific string","text":"<p>idx = df.loc[df['A'] == 'bar'].index[0]</p>"},{"location":"Topics/Python/pandas/#insert-an-empty-row-after-the-row-with-the-specific-string","title":"Insert an empty row after the row with the specific string","text":"<p>df = pd.concat([df.iloc[:idx+1], pd.DataFrame(columns=df.columns), df.iloc[idx+1:]]).reset_index(drop=True)</p> <p>print(df) Output:</p> <p>css Copy code      A    B 0  foo  1.0 1  bar  2.0 2  NaN  NaN 3  baz  3.0 In this example, we first create a DataFrame with three rows and two columns. We then use the loc method to find the index of the row with the string 'bar'. We then use the iloc method to insert an empty row at the index after the row with the string 'bar'. Finally, we print the updated DataFrame.</p>"},{"location":"Topics/Python/python_pandas/","title":"Python","text":""},{"location":"Topics/Python/python_pandas/#pandas-delete-dataframe-line","title":"Pandas Delete Dataframe Line","text":"<p>To delete a line from a <code>pandas</code> dataframe,  can use the <code>drop</code> method. For example:</p> <pre><code>import pandas as pd\n\ndf = pd.DataFrame({'A': [0, 1, 2, 3, 4], \n                   'B': [5, 6, 7, 8, 9], \n                   'C': [10, 11, 12, 13, 14]})\n\n# Drop row with index value of 2\ndf.drop(2, inplace=True)\n</code></pre> <p>This will delete the third line from the dataframe and <code>inplace=True</code> is used to make the changes permanent without reassigning the variable.</p> <p>The best way to delete a line from a <code>pandas</code> dataframe is by using the <code>Dataframe.drop()</code> method.  can specify a line to be deleted by giving it either the index of the line or a Boolean condition.</p> <p>For example, if  wanted to delete the third line in the dataframe,  could use:</p> <pre><code>dataframe.drop(2)\n</code></pre> <p>If  instead wanted to delete lines that contained a certain substring (in this case using regex),  could use:</p> <pre><code>import re\n\ndataframe[~dataframe['column_name'].str.contains(re.compile('regex'))]\n</code></pre> <p>This will return all rows which don't contain the given substring according to the regex pattern.</p>"},{"location":"Topics/Python/python_pandas/#python-columns-same-width","title":"Python Columns Same Width","text":"<p>It is possible to make the columns in a python table have the same width by using the <code>\\ setlength</code> command. To demonstrate this, let's create a simple table with 3 columns.</p> <pre><code>from tabulate import tabulate\ntable = []\ntable.append([\"Column_1\", \"Column_2\", \"Column_3\"])\ntable.append([\"a\", \"b\", \"c\"])\nprint(tabulate(table, tablefmt=\"grid\"))\n\n# Output:\n# +------+------+------+\n# | Column_1 | Column_2 | Column_3 |\n# +==========+==========+==========+\n# | a        | b        | c        |\n# +------+------+------+\n\n# To make the columns the same width, use \\setlength\n\n\\setlength{\\tabcolsep}{0.7em}\nprint(tabulate(table, tablefmt=\"grid\"))\n\n# Output: \n# +-------+-------+-------+\n# | Column_1  | Column_2  | Column_3  |\n# +===========+===========+===========+\n# | a         | b         | c         |\n# +-------+-------+-------+\n</code></pre>"},{"location":"Topics/Python/python_pandas/#python-columns-width-fits-data","title":"Python Columns Width Fits Data","text":"<p>To make a column in Python so that its width fits the data,  can use <code>.auto_set_column_width()</code> on the worksheet object.</p> <p>For example:</p> <pre><code>worksheet.auto_set_column_width(0,1)\n</code></pre> <p>This will auto-set the first column to its optimal width. To set all the columns to their optimal width,  can use:</p> <pre><code>worksheet.auto_set_column_width((0, worksheet.ncols))\n</code></pre>"},{"location":"Topics/Python/python_pandas/#python-run-shell-commands","title":"Python Run Shell Commands","text":"<p>Using Python to run shell commands can be easily achieved using the <code>subprocess</code> library.</p> <p>Here is an example of how to use <code>subprocess</code> to run a ping command:</p> <pre><code>import subprocess\n\n# Run the ping command with a timeout of 5 seconds\nproc = subprocess.Popen([\"ping\", \"-c\", \"4\", \"google.com\"], stdout=subprocess.PIPE, stderr=subprocess.PIPE, timeout=5) \n\n# Grab the output from the command\nout, err = proc.communicate()\n\n# Print the output\nprint(\"Out: \", out.decode(\"utf-8\"))\nprint(\"Err: \", err.decode(\"utf-8\"))\n</code></pre>"},{"location":"Topics/Python/python_pandas/#split-line-delimited-by-spaces-and-process-each-field","title":"Split Line Delimited By Spaces And Process Each Field","text":"<p>can achieve r goal by using the following approach:</p> <pre><code># Split the line up into a list\nline = line.split(' ')\n\n# Loop through the list\nfor field in line:\n    # Do something with each field\n    # ( can define how  want to process it here)\n</code></pre>"},{"location":"Topics/Python/python_pandas/#python-pick-out-each-field-in-each-line-of-a-file","title":"Python Pick Out Each Field In Each Line Of A File","text":"<p>No problem!  can use the <code>split()</code> method to pick out each field in each line of a file.</p> <p>For example, if r file contains this:</p> <pre><code>name age address\nBob 10 123 Main St.\nMary 12 124 Second Ave.\n</code></pre> <p>can create a loop that reads through each line and applies the <code>split()</code> method to break it up into individual fields. Here's an example of how  could do that:</p> <pre><code># Open the file \nwith open('file.txt') as f:\n    # Create a loop that reads each line \n    for line in f:\n        # Split the line with the space character \" \" \n        fields = line.split(\" \")\n        # Access the information for each field \n        name = fields[0]\n        age = fields[1]\n        address = fields[2]\n\n        print(name +\" \"+ age +\" \"+ address)\n</code></pre> <p>This will output:</p> <pre><code>Bob 10 123 Main St.\nMary 12 124 Second Ave.\n</code></pre> <p>Hope that helps!</p>"},{"location":"Topics/Python/python_pandas/#pandas-name-columns","title":"Pandas Name Columns","text":"<p>can use the <code>.rename()</code> method to rename pandas columns.</p> <p>Example:</p> <pre><code>df = pd.DataFrame({'Name': ['John', 'Mike', 'Sarah'], \n                   'Age': [21, 41, 19]} \n                  )\n\n# Rename 'Name' column to 'First Name'\ndf.rename(columns={'Name': 'First Name'}, inplace=True) \n</code></pre> <p>The <code>inplace</code> parameter is responsible for mutate the existing DataFrame and rename the columns.</p>"},{"location":"Topics/Python/python_pandas/#pandas-read-file","title":"Pandas Read File","text":"<p>To read a file with pandas,  can use the <code>read_csv</code> function.</p> <p>It takes files in a variety of formats and allows  to specify the columns and other variables if  wish. This could be used if  want to name the columns, as  can use the <code>names</code> argument.</p> <p>For example: <code>df = pd.read_csv('filename.csv', names=['column1','column2','column3','column4'])</code>.</p>"},{"location":"Topics/Python/python_pandas/#reading-files-in-pandas","title":"Reading Files in Pandas","text":"<p>The <code>pandas</code> library is equipped with numerous functions to help  load data into r program.</p> <p>First,  can <code>read_csv()</code> to import a file containing comma separated values.</p> <p>can also <code>read_table()</code> to import a file containing whitespace delimited values.</p> <p>When using the <code>read_csv()</code> and <code>read_table()</code> functions,  can specify the names for the columns of data in the file by using the <code>names</code> parameter. For example:</p> <pre><code>import pandas as pd\n\ndf = pd.read_csv('data.csv', names=['Col1', 'Col2', 'Col3'])\n</code></pre> <p>The code above will read from the file <code>data.csv</code> and assign the given column names <code>Col1</code>, <code>Col2</code>, and <code>Col3</code> to each respective column in the file.</p> <p>can also use the <code>header</code> parameter to skip a certain number of lines at the beginning of the file:</p> <pre><code>df = pd.read_csv('data.csv', header=1, \n                 names=['Col1', 'Col2', 'Col3'])\n</code></pre> <p>In this example, the first line of the file would be skipped, allowing  to specify initial column names.</p>"},{"location":"Topics/Python/python_pandas/#python-drop-fields","title":"Python Drop Fields","text":"<p>To drop fields/columns from a Python DataFrame,  can use the <code>drop()</code> method of pandas.</p> <p>Here's an example:</p> <pre><code>import pandas as pd\n\n# Creating a sample DataFrame\ndf = pd.DataFrame({\n    'Name': ['John', 'Amy', 'Mike'],\n    'Age': [25, 30, 35],\n    'City': ['New York', 'Los Angeles', 'Chicago']\n})\n\n# Dropping the \"City\" field\ndf = df.drop('City', axis=1)\n\nprint(df)\n</code></pre> <p>In the code above, we import the pandas library and create a sample DataFrame with three fields. Then we use the <code>drop()</code> method to drop the \"City\" field by specifying its name as the first argument and the value <code>axis=1</code> as the second argument to indicate that we want to drop a column. Finally, we print the resulting DataFrame.</p> <p>can also drop multiple fields at once by passing a list of names to the <code>drop()</code> method:</p> <pre><code># Dropping the \"Age\" and \"City\" fields\ndf = df.drop(['Age', 'City'], axis=1)\n</code></pre> <p>This will drop both the \"Age\" and \"City\" fields from the DataFrame.</p>"},{"location":"Topics/Python/python_pandas/#drop-columns","title":"Drop Columns","text":"<p>To drop a column in a pandas dataframe,  can use the <code>drop()</code> method with the <code>columns</code> argument set to the name of the column  want to drop and <code>axis=1</code>. Here's an example:</p> <pre><code>import pandas as pd\n\n# sample dataframe\ndf = pd.DataFrame({\n    'A': [1, 2, 3],\n    'B': [4, 5, 6],\n    'C': [7, 8, 9]\n})\n\n# drop column 'B'\ndf = df.drop(columns='B', axis=1)\n</code></pre> <p>This will drop the column 'B' from the <code>df</code> dataframe. Note that the <code>drop()</code> method returns a new dataframe, so  need to assign the result to a variable (in this case, we're overwriting the original <code>df</code>).</p>"},{"location":"Topics/Python/python_pandas/#drop-dataframe-row","title":"Drop Dataframe Row","text":"<p>To drop a row from a dataframe in Python, we can use the <code>.drop()</code> method. We usually specify <code>axis=0</code> to drop one or more rows.</p> <p>The syntax for deleting a single row at a given index, say i, can be written as:</p> <pre><code>dataframe.drop(i, axis=0)\n</code></pre> <p>For example, suppose we have a pandas DataFrame with three columns and want to delete the row with index 2:</p> <pre><code>import pandas as pd\n\n# create dataframe\ndata = {'name': ['Alice', 'Bob', 'Charlie'], \n        'age': [25, 30, 35],\n        'city': ['New York', 'Paris', 'Berlin']}\ndf = pd.DataFrame(data)\n\n# remove row with index 2\ndf = df.drop(2, axis=0)\nprint(df)\n</code></pre> <p>This will output the following:</p> <pre><code>      name  age      city\n0    Alice   25  New York\n1      Bob   30     Paris\n</code></pre> <p>If  want to drop multiple rows together,  can pass a list of indices to the <code>.drop()</code> function:</p> <pre><code>df = df.drop([1, 2], axis=0)\n</code></pre> <p>This will result in a DataFrame containing only the first row:</p> <pre><code>    name  age      city\n0  Alice   25  New York\n</code></pre>"},{"location":"Topics/Python/python_pandas/#delete-file-lines","title":"Delete File Lines","text":"<p>To delete lines from a file using Python,  can use the following steps:</p> <ol> <li>Open the File in Read Mode.</li> <li>Read all lines from the file into a list.</li> <li>Open the same file in Write Mode to overwrite its contents.</li> <li>Loop through the lines of the list and write them back to the file, but skip the lines  want to delete.</li> </ol> <p>Here is an example Python code that deletes lines containing a certain word from a file:</p> <pre><code>with open('file.txt', 'r') as input_file:\n    # read all lines into a list\n    lines = input_file.readlines()\n\nwith open('file.txt', 'w') as output_file:\n    # loop through the lines and write them back to the file, skipping those we want to delete\n    for line in lines:\n        if \"word\" not in line:\n            output_file.write(line)\n</code></pre> <p>In this example, replace <code>file.txt</code> with the name of r file, and <code>word</code> with the word or phrase that identifies the lines  want to delete.</p> <p>Note: This code will permanently delete the specified lines from the file, so it's recommended to make a backup of the original file before running the code.</p>"},{"location":"Topics/Science/maxwell/","title":"Maxwell Equations","text":""},{"location":"Topics/Science/maxwell/#maxwell-equations","title":"Maxwell Equations","text":"<p>Maxwell's Equations are a set of four fundamental equations that describe the behavior of electromagnetic fields in space. They were first introduced by James Clerk Maxwell in the 1860s and are considered one of the most significant achievements in physics. Here are the four equations:</p> <p>Gauss's Law for Electric Fields: This states that the electric flux through any closed surface is proportional to the net charge inside the surface. \\(\\(\\nabla \\cdot E = \\frac{\\rho}{\\epsilon_0}\\)\\)</p> <p>Gauss's Law for Magnetic Fields: This states that the magnetic flux through any closed surface is always zero, which means that there are no magnetic monopoles. \\(\\(\\nabla \\cdot B = 0\\)\\)</p> <p>Faraday's Law of Induction: This states that a changing magnetic field induces an electric field. \\(\\(\\nabla \\times E = -\\frac{\\partial B}{\\partial t}\\)\\)</p> <p>Ampere-Maxwell Law: This states that a changing electric field also induces a magnetic field. \\(\\(\\nabla \\times B = \\mu_0\\Big(\\epsilon_0\\frac{\\partial E}{\\partial t} + J\\Big)\\)\\)</p> <p>Where:</p> <p>\\(E\\) is the electric field \\(B\\) is the magnetic field \\(\\rho\\) is the charge density \\(J\\) is the current density \\(\\epsilon_0\\) is the permittivity of free space \\(\\mu_0\\) is the permeability of free space</p> <p>These equations are used extensively in the field of electromagnetism and have many practical applications in the areas of electronics, communications, and power generation.</p>"},{"location":"Topics/Science/space_time/","title":"Space-Time","text":""},{"location":"Topics/Science/space_time/#space-time","title":"Space-Time","text":"<p>Space-time refers to the four-dimensional space that includes physical objects and events. It is the combination of three dimensions of space (length, width, and height) with one dimension of time.</p>"},{"location":"Topics/Science/space_time/#special-theory-of-relativity","title":"Special Theory of Relativity","text":"<p>The concept of space-time was introduced by Albert Einstein in his special theory of relativity. According to this theory, space and time are not separate but are part of a four-dimensional space-time continuum. The theory also proposes that the laws of physics are universal and invariant in all inertial frames of reference.</p>"},{"location":"Topics/Science/space_time/#general-theory-of-relativity","title":"General Theory of Relativity","text":"<p>In his general theory of relativity, Einstein went one step further and suggested that the curvature of space-time is affected by the presence of matter and energy. This curvature then affects the motion of other objects in the vicinity. This theory has been confirmed through numerous observations and experiments, including the observation of gravitational waves.</p>"},{"location":"Topics/Science/theory_of_relativity/","title":"Theory of Relativity","text":""},{"location":"Topics/Science/theory_of_relativity/#einsteins-theory-of-relativity","title":"Einstein's Theory of Relativity","text":"<p>Albert Einstein's theory of relativity is a fundamental theory in physics. It provides an explanation for the behavior of objects in motion and their interaction with gravity. There are two main components to the theory: special relativity and general relativity.</p>"},{"location":"Topics/Science/theory_of_relativity/#special-relativity","title":"Special Relativity","text":"<p>Special relativity deals with the laws of physics in inertial frames of reference, or those frames that are moving at a constant velocity relative to one another. The theory assumes that the speed of light is always constant, no matter how fast or slow the observer is moving relative to the light source. This leads to some strange phenomena, such as time dilation (time seems to move slower for objects moving at high speeds) and length contraction (objects appear shorter when they are moving at high speeds).</p>"},{"location":"Topics/Science/theory_of_relativity/#general-relativity","title":"General Relativity","text":"<p>General relativity expands on special relativity by describing the curvature of space-time in the presence of mass or energy. According to this theory, massive objects like stars and planets warp the fabric of space-time, causing nearby objects to be attracted towards them. This can explain why objects fall towards the Earth and why planets orbit around the Sun.</p> <p>Einstein's theory of relativity has been extensively tested and has repeatedly been confirmed. It forms the basis of many modern technologies, including GPS systems and particle accelerators.</p>"},{"location":"Topics/Science/Physics/physics_made_up/","title":"Math","text":""},{"location":"Topics/Science/Physics/physics_made_up/#everything-in-physics-is-completely-made-up","title":"Everything In Physics Is Completely Made Up","text":"<p>Note</p> <p>Quoted from Yes, everything in physics is completely made up \u2013 that\u2019s the whole point by Dr Katie Mack</p> <p>A physicist's task is to constantly create equations that keep up with our observations of physical phenomena.</p> <p>Everything in physics is made up to make the math work out.</p> <p>Physics isn\u2019t built around ultimate truth, but rather the constant production and refinement of mathematical approximations. It\u2019s not just because we\u2019ll never have perfect precision in our observations. It\u2019s that, fundamentally, the entire point of physics is to create a model universe in math - a set of equations that remain true when we plug in numbers from observations of physical phenomena.aa agends</p>"},{"location":"Topics/Science/Physics/rocket_engine/","title":"Rocket engine","text":""},{"location":"Topics/Science/Physics/rocket_engine/#rocket-engines","title":"Rocket Engines","text":"<p>Rocket engines are devices that generate thrust by expelling mass in one direction. This is known as the principle of action and reaction, which is based on Newton's Third Law of Motion. According to this law, for every action, there is an equal and opposite reaction. In other words, when a rocket expels mass in one direction, the rocket experiences a force in the opposite direction. This force propels the rocket forward.</p> <p>There are two main types of rocket engines: liquid rocket engines and solid rocket engines.</p> <p>Liquid rocket engines use liquid propellants that are stored in tanks within the rocket. These propellants consist of a fuel and an oxidizer that are stored separately until they are mixed and burned in the engine's combustion chamber. The fuel is typically a hydrocarbon, such as kerosene or liquid hydrogen, while the oxidizer is usually liquid oxygen or nitrogen tetroxide. The fuel and oxidizer are pumped into the combustion chamber at high pressure and ignited to create a high-velocity stream of hot gases that exit the nozzle at the back of the engine. This stream of gases creates thrust that propels the rocket forward.</p> <p>The design of the nozzle is critical to the performance of a liquid rocket engine. The nozzle is designed to expand the hot gases as they exit the combustion chamber, increasing the velocity and pressure of the gases and converting the thermal energy of the exhaust into kinetic energy. The nozzle also provides a means of directing the exhaust gases in a specific direction to create the desired thrust vector.</p> <p>Solid rocket engines use solid propellants that are stored in the rocket's motor. These propellants consist of a fuel and an oxidizer that are mixed together and formed into a solid block. When the solid propellant is ignited, it burns and produces a high-velocity stream of hot gases that exit the nozzle at the back of the engine. The design of the nozzle is critical to the performance of the engine, as it determines the velocity and direction of the exhaust gases and thus the thrust generated.</p> <p>Solid rocket engines are often used as boosters to provide additional thrust during the initial stages of a rocket's flight. They are also used as upper stage engines to provide additional thrust during the later stages of a rocket's flight, when the rocket is in space and requires less thrust to maneuver.</p> <p>Both liquid and solid rocket engines have advantages and disadvantages. Liquid rocket engines are more efficient and can be throttled or shut down if necessary. They are also more complex and expensive to build and operate. Solid rocket engines are simpler and less expensive to build and operate, but they cannot be throttled or shut down once they are ignited, and their performance is difficult to control.</p> <p>In summary, rocket engines are critical components of spaceflight and have enabled humans to explore space and send spacecraft to other planets and beyond. The design and development of rocket engines continues to be an active area of research and innovation, as scientists and engineers work to improve their efficiency, reliability, and safety.</p>"},{"location":"Topics/Science/Quantum_Mechanics/boson/","title":"Boson","text":""},{"location":"Topics/Science/Quantum_Mechanics/boson/#bosons","title":"Bosons","text":"<p>Bosons are a type of subatomic particle that follow the laws of quantum mechanics. They are characterized by having integer spin, such as 0, 1, 2, etc. Examples of bosons include photons, which are responsible for the electromagnetic force, and W and Z bosons, which are responsible for the weak nuclear force.</p> <p>Bosons work by mediating the fundamental forces of nature. They are carrier particles that transmit the forces between other particles, such as electrons and protons, or between atomic nuclei. For example, photons are responsible for transmitting the electromagnetic force between charged particles, while W and Z bosons mediate the weak nuclear force, which is responsible for certain types of radioactive decay.</p> <p>In addition, bosons can also exhibit a phenomenon known as Bose-Einstein condensation, where a large number of bosons can occupy the same quantum state and behave as a single entity. This phenomenon is important in the study of superfluidity and superconductivity.</p> <p>Overall, bosons play a fundamental role in the behavior of subatomic particles and the fundamental forces of nature.</p>"},{"location":"Topics/Science/Quantum_Mechanics/boson/#how-do-bosons-create-mass","title":"How Do Bosons Create Mass","text":"<p>Bosons themselves do not create mass. Rather, the Higgs boson, which is a type of boson, is responsible for the creation of mass in particles.</p> <p>According to the Standard Model of particle physics, particles gain mass by interacting with the Higgs field, which permeates all of space. The Higgs boson is the particle associated with this field, and its discovery was a major breakthrough in the understanding of the origin of mass.</p> <p>The Higgs boson interacts with other particles, such as quarks and leptons, to give them mass. The strength of this interaction depends on the mass of the particle. Heavier particles interact more strongly with the Higgs field, and therefore have a greater mass.</p> <p>The mechanism by which the Higgs boson creates mass is known as the Higgs mechanism. It is a crucial part of the Standard Model, which describes the behavior of subatomic particles and the fundamental forces of nature.</p> <p>In summary, while bosons in general do not create mass, the Higgs boson, a type of boson, is responsible for the creation of mass in particles through the Higgs mechanism.</p>"},{"location":"Topics/Science/Quantum_Mechanics/boson/#explain-higgs-boson","title":"Explain Higgs Boson","text":"<p>The Higgs boson is a type of subatomic particle that is associated with the Higgs field, which permeates all of space. It was first proposed by physicists Peter Higgs, Francois Englert, and Robert Brout in the 1960s as part of the mechanism by which particles acquire mass.</p> <p>The Higgs boson is a fundamental particle, which means that it cannot be broken down into smaller components. It has a mass of approximately 125 giga-electronvolts (GeV) and a spin of zero. It is also a type of boson, which means that it follows Bose-Einstein statistics and can therefore occupy the same quantum state as other bosons.</p> <p>According to the Standard Model of particle physics, particles gain mass by interacting with the Higgs field. The Higgs boson is the particle associated with this field, and its discovery was a major breakthrough in the understanding of the origin of mass.</p> <p>The Higgs boson was first observed in 2012 at the Large Hadron Collider (LHC), a particle accelerator at CERN in Switzerland. Physicists detected the particle by smashing protons together at very high energies and analyzing the resulting debris.</p> <p>The discovery of the Higgs boson was a major achievement in particle physics and confirmed a key prediction of the Standard Model. It also opened up new avenues for research into the nature of the universe, such as the study of dark matter and the search for new particles beyond the Standard Model.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum%20_computers/","title":"Quantum Computers","text":"<p>--</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum%20_computers/#quantum-computing","title":"Quantum Computing","text":""},{"location":"Topics/Science/Quantum_Mechanics/quantum%20_computers/#introduction-to-quantum-computing","title":"Introduction to Quantum Computing.","text":"<p>Quantum computing is a cutting-edge technology that utilizes the principles of quantum mechanics to perform highly complex computations at a much faster rate than classical computers.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum%20_computers/#how-quantum-computing-works","title":"How Quantum Computing Works","text":"<p>Quantum computing uses quantum bits, or qubits, to perform operations. Unlike classical bits, which can only be in one of two states (0 or 1), qubits can exist in both states simultaneously. This is known as superposition.</p> <p>In addition to superposition, qubits are also capable of entanglement; when two or more qubits are entangled, their states become dependent on one another. This allows for extremely fast computation and the ability to perform large numbers of operations simultaneously.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum%20_computers/#applications-of-quantum-computing","title":"Applications of Quantum Computing","text":"<p>Quantum computing has the potential to revolutionize many fields, including cryptography, optimization, and drug discovery. It could greatly improve our ability to simulate complex systems, such as the behavior of molecules or the interactions between celestial bodies.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum%20_computers/#challenges-of-quantum-computing","title":"Challenges of Quantum Computing","text":"<p>Despite its significant potential, there are still many challenges associated with quantum computing. For example, qubits are highly sensitive to their environment and can quickly lose their coherence, leading to errors in calculations. Additionally, scaling up quantum computers is a difficult task, and they are currently limited to performing very specific tasks.</p> <p>Conclusion Quantum computing is an exciting and rapidly evolving field that has the potential to drastically change how we approach challenges in science, engineering, and beyond. While there are still many hurdles to overcome, continued investment in this technology is likely to yield substantial dividends in the coming years.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum/","title":"Introduction","text":""},{"location":"Topics/Science/Quantum_Mechanics/quantum/#introduction-to-quantum-mechanics","title":"Introduction to Quantum Mechanics","text":"<p>Quantum mechanics is a branch of physics that studies the behavior of matter and energy at the atomic and subatomic level. It was developed in the early 20th century to explain various phenomena that classical mechanics and electromagnetism were unable to explain accurately.</p> <p>Quantum mechanics provides a framework for understanding the nature of particles such as electrons, protons, and photons, and how they interact with each other. Unlike classical mechanics, which describes particles and objects using definite positions, quantum mechanics relies on the concept of wave-particle duality.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum/#wave-particle-duality","title":"Wave-Particle Duality","text":"<p>Wave-particle duality is the idea that particles can behave like waves, and waves can behave like particles. This means that particles, such as electrons and photons, have both wave-like and particle-like properties.</p> <p>One of the most famous experiments demonstrating wave-particle duality is the double-slit experiment, where electrons are fired through two parallel slits in a barrier onto a screen behind it. According to classical mechanics, the electrons should create a pattern of two lines on the screen. However, in reality, the electrons produce an interference pattern that is typical of wave behavior. This phenomenon is one of the core concepts of quantum mechanics.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum/#superposition-and-entanglement","title":"Superposition and Entanglement","text":"<p>Another fundamental principle of quantum mechanics is superposition. According to this principle, a particle can exist in multiple states simultaneously until it is observed or measured, at which point it collapses into one particular state. This means that particles can be in two or more places (or states) at the same time.</p> <p>Entanglement is another concept in quantum mechanics that involves the correlation of two or more particles, even when they are far apart. When two particles are entangled, changing the state of one particle will instantly affect the state of the other particle, regardless of the distance between them. This concept has led to the development of quantum computing, which holds the potential to revolutionize information technology.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum/#conclusion","title":"Conclusion","text":"<p>Quantum mechanics is a fascinating field of study that has radically transformed our understanding of the universe at its smallest scales. Despite its counterintuitive principles and complexities, it has led to numerous remarkable discoveries and technological developments, and continues to inspire new areas of research today.</p>"},{"location":"Topics/Science/Quantum_Mechanics/quantum_field_theory/","title":"Quantum Field Theory","text":""},{"location":"Topics/Science/Quantum_Mechanics/quantum_field_theory/#quantum-field-theory","title":"Quantum Field Theory","text":"<p>Quantum field theory (QFT) is a theoretical framework that combines quantum mechanics and special relativity to describe the behavior of subatomic particles and their interactions. In QFT, particles are considered as excitations of quantum fields, which are continuous fields that permeate all of space and time.</p> <p>According to QFT, the fundamental forces of nature arise from the exchange of particles known as bosons. For example, the electromagnetic force is mediated by photons, while the strong force is mediated by gluons.</p> <p>In addition to the bosons, QFT also describes the behavior of particles known as fermions, which include quarks and electrons. Fermions are subject to the Pauli exclusion principle, which states that no two fermions can occupy the same quantum state simultaneously.</p> <p>One of the major successes of QFT is the development of the Standard Model, which is a theory that describes the interactions of all known elementary particles and the forces that govern them. The Standard Model has been extensively tested and is considered to be one of the most successful theories in physics. However, QFT is still an active area of research, and many physicists are working to extend it to include gravity and other phenomena that are not currently explained by the Standard Model.</p>"},{"location":"Topics/Security/2fa_totp/","title":"2FA TOTP","text":""},{"location":"Topics/Security/2fa_totp/#what-is-2fa-totp","title":"What Is 2FA TOTP","text":"<p>TOTP stands for Time-Based One-Time Password, which is a two-factor authentication (2FA) mechanism that generates a one-time password based on the current time and a shared secret key between the user and the service provider. The users enter this OTP code in addition to their regular credentials to authenticate themselves to access the protected resources.</p> <p>A TOTP token is a small software program that uses a cryptographic algorithm to generate a new 6-8 digit OTP every 30 seconds or a period duration selected by the service provider. These tokens are commonly used in applications that require strong authentication, such as online banking, corporate accounts, and other security-critical systems.</p> <p>The TOTP algorithm is widely recognized and supported by many vendors, including Google Authenticator, Microsoft Authenticator, and RSA SecurID. It works by combining a secret key with the current Unix timestamp to create a unique hash value. The hash then gets truncated to generate an OTP code that is displayed to the user.</p> <p>In short, TOTP is a more secure version of two-factor authentication (2FA) that generates an OTP based on the current date and time instead of a static password.</p>"},{"location":"Topics/Security/2fa_totp/#how-does-it-work","title":"How Does It Work","text":"<p>TOTP stands for Time-based One-Time Password. It\u2019s a type of two-factor authentication (2FA) that generates temporary passwords which expire after a certain time period.</p> <p>The TOTP algorithm runs on the user's device, such as a smartphone, and is synced with the server's clock to generate a secure six-digit code which changes every 30 seconds.</p> <p>Here\u2019s how the process typically works:</p> <ol> <li>User enters their login credentials on the website/app.</li> <li>The system detects that TOTP is enabled for the user's account and sends a secret key to the authenticator app.</li> <li>The authenticator app uses the TOTP algorithm to generate a unique one-time passcode, based on a combination of the secret key and the current time.</li> <li>The user enters this code into the website/application within the given timeframe (typically 30 seconds).</li> <li>If the code is correct, access is granted.</li> </ol> <p>This adds an extra layer of security to verify the user's identity, making it difficult for attackers to gain access even if they have the user's username and password.</p>"},{"location":"Topics/Security/2fa_totp/#security","title":"Security","text":"<p>Unlike passwords, TOTP codes are single-use, so a compromised credential is only valid for a limited time. However, users must enter TOTP codes into an authentication page, which creates the potential for phishing attacks. Due to the short window in which TOTP codes are valid, attackers must proxy the credentials in real time.</p> <p>TOTP credentials are also based on a shared secret known to both the client and the server, creating multiple locations from which a secret can be stolen. An attacker with access to this shared secret could generate new, valid TOTP codes at will. This can be a particular problem if the attacker breaches a large authentication database.</p>"},{"location":"Topics/Security/AI_TOC/","title":"AI TOC","text":""},{"location":"Topics/Security/AI_TOC/#ai-table-of-contents","title":"AI Table of contents","text":"<p>Generative Pre-learned Transformer What Is Generative Pre-Learned Transform Mean Neural Networks Parameters How Parameters Work</p> <p>How Do Neural Networks Work</p> <p>Forward Propagation Define input layer Initialize weights and biases Define sigmoid activation function Perform forward propagation Example</p> <p>Loss Calculation Example</p> <p>Backward Propagation Example</p> <p>Parameters Model Parameters How Do Parameters Work</p> <p>What Is Tensor What Is Tensorflow Python Tensor TensorFlow Tensor Example Python Tensor</p> <p>AI Singularity</p>"},{"location":"Topics/Security/block_chain/","title":"Block Chain","text":""},{"location":"Topics/Security/block_chain/#understanding-blockchain","title":"Understanding Blockchain","text":"<p>A blockchain is an open, distributed ledger that records transactions between two parties in a secure, immutable and efficient way.</p> <p>Instead of relying on a central authority or a third party to validate the transaction, a blockchain uses a network of computers to process the transaction and record it on a shared digital ledger.</p> <p>Each block in the chain contains a cryptographic hash of the previous block, along with the new transaction data, which makes it difficult to tamper with the Transaction history.</p> <p>Blockchain technology has gained popularity due to its decentralized nature, which eliminates the need for intermediaries and reduces transaction fees. It has numerous use cases including but not limited to cryptocurrencies, supply chain management, voting systems, and smart contracts.</p>"},{"location":"Topics/Security/block_chain/#blockchain-problems","title":"BlockChain Problems","text":"<p>BlockChain is an innovative technology that has the potential to revolutionize various industries. It brings many benefits, including decentralization, security, transparency, and immutability. However, there are also some problems associated with this technology that need to be addressed.</p> <p>Here are some of the significant blockchain problems:</p> <ol> <li> <p>Scalability: The current architecture of blockchain networks often limits their scalability. The transactions per second (TPS) rate for most blockchains is significantly lower compared to other payment systems like credit card networks. This low TPS rate could hinder the use of blockchain in many applications where high throughput is a must.</p> </li> <li> <p>Security Concerns: Although blockchains are designed to be secure, they are still vulnerable to malicious attacks. For example, if more than 51% of nodes on a blockchain network get compromised, it can lead to a 51% attack, enabling attackers to double-spend or manipulate transactions.</p> </li> <li> <p>High Energy Consumption: Most blockchains operate using a proof-of-work consensus mechanism that requires a lot of computational power. As a result, blockchain mining requires significant amounts of energy, increasing carbon footprint, and incurring an ethical cost .</p> </li> <li> <p>Interoperability: Incompatible protocols and platforms prevent different blockchains from communicating with each other. This lack of interoperability means that developers have to work harder to create new applications that interact across multiple blockchains.</p> </li> <li> <p>Lack of Regulations: The decentralized nature of blockchain technology makes it difficult for regulatory bodies to formulate specific regulations over its operation. It creates ambiguity in the legal status of how transactions take place and provides a safe-haven for nefarious actors to exploit the system.</p> </li> </ol> <p>Overall, these blockchain challenges pose significant barriers to widespread adoption. Developers will have to address these issues satisfactorily before blockchain becomes an integral part of everyday life.</p>"},{"location":"Topics/Security/cloudflare_warp/","title":"Cloudflare Warp","text":""},{"location":"Topics/Security/cloudflare_warp/#cloudflare-warp","title":"Cloudflare Warp","text":"<p>Cloudflare Warp is a virtual private network (VPN) service offered by Cloudflare, a company that provides content delivery network (CDN) and cybersecurity services. Cloudflare Warp is designed to secure and speed up internet connections for individuals and businesses.</p> <p>Cloudflare Warp works by encrypting internet traffic and routing it through Cloudflare's global network of servers. This makes it difficult for hackers or other third parties to intercept or access the data. Cloudflare Warp also uses optimized routing algorithms to ensure that internet traffic takes the fastest path possible between the user's device and the destination server, which can help to reduce latency and improve browsing speeds.</p> <p>One of the key benefits of Cloudflare Warp is that it is designed to be easy to use. The service is available as a mobile app for iOS and Android devices, as well as a desktop application for Windows and macOS. Users can simply download and install the app, and then activate the service with a single click.</p> <p>Another advantage of Cloudflare Warp is that it offers both a free and a paid version of the service. The free version of the service offers basic VPN functionality, while the paid version, called Warp+, offers additional benefits such as faster connection speeds and enhanced security features.</p> <p>Overall, Cloudflare Warp is a useful tool for individuals and businesses looking to secure their internet connections and improve their browsing speeds.</p>"},{"location":"Topics/Software/markdown/","title":"Markdown Math processing","text":""},{"location":"Topics/Software/markdown/#markdown-math-processing","title":"Markdown Math Processing","text":"<p>If you need to display mathematical expressions or equations in a Markdown document, there are different options available. Here are some of them:</p>"},{"location":"Topics/Software/markdown/#mathjax","title":"MathJax","text":"<p>Another option is to use MathJax, which is a JavaScript library that renders math in your browser. You can include it in your Markdown document like this at the top of your Markdown file:</p> <pre><code>&lt;script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.1.1/es5/tex-mml-chtml.min.js\" integrity=\"sha384-H0o/kegZMYHiPoZKjBr4HmGQ9XAl6UOjyUUE+kDpP99nmUInL+jZMWEeqZKd4EVb\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n</code></pre> <p>After including MathJax, you can use LaTeX syntax as before, but enclose your math expression between double dollar signs <code>$$</code>. For example:</p> \\[\\\\int\\_0^\\\\infty e^{-x^2} dx = \\\\frac{\\\\sqrt{\\\\pi}}{2}\\] <p>will produce</p> \\[\\\\int\\_0^\\\\infty e^{-x^2} dx = \\\\frac{\\\\sqrt{\\\\pi}}{2}\\] <p>The advantage of using MathJax is that it allows you to write complex math with great readability.</p>"},{"location":"Topics/Software/markdown/#markdown-it-plugin","title":"Markdown-it plugin","text":"<p>Another way of handling math is to use a plugin for Markdown-it. It comes with many plugins that allow sourcing different sources.</p> <p>All these methods have their strengths and weaknesses, and the best one depends on your specific requirements of what do you want to achieve while displaying math.</p>"},{"location":"Topics/Software/nzb_files/","title":"NZB Files","text":""},{"location":"Topics/Software/nzb_files/#nzb-files","title":"Nzb Files","text":"<p>NZB files are a type of file format used for downloading binary files from newsgroups. Newsgroups are online discussion forums where users can post messages and files to be shared with others.</p> <p>NZB files are used as a way to simplify the process of downloading large files from newsgroups. These files contain information about the location of the individual parts of a larger binary file, as well as metadata such as the file name, file size, and the newsgroup from which the file was originally posted.</p> <p>NZB files can be used with a variety of software programs called Usenet clients, which are specifically designed to download files from newsgroups. When you open an NZB file with an Usenet client, it will automatically download the parts of the binary file from the newsgroup servers listed in the NZB file, and assemble them into the complete file on your computer.</p> <p>NZB files are often used as an alternative to BitTorrent for downloading large files, as they offer faster download speeds and greater privacy, as well as the ability to download files in smaller pieces from multiple servers.</p>"},{"location":"Topics/Software/vscode/","title":"VScode","text":""},{"location":"Topics/Software/vscode/#vscode","title":"VSCode","text":"<p>VSCode (Visual Studio Code) is a free and open-source code editor developed by Microsoft that can be used for various programming languages, including JavaScript, Python, C++, and many more. It is a popular choice among developers due to its fast performance, extensive library of extensions, and customizable interface.</p> <p>VSCode has many features that make it a powerful code editor, such as syntax highlighting, code completion, debugging tools, version control integration, and a built-in terminal. It also has a large library of extensions that can be easily installed and used to add additional functionality to the editor, such as support for different programming languages, linters, code formatters, and more.</p> <p>One of the most notable features of VSCode is its IntelliSense engine, which provides intelligent code suggestions and completions based on the context of the code. This feature can help save time and reduce errors when writing code.</p> <p>Additionally, VSCode has a user-friendly interface that can be customized to fit the user's preferences. It also supports various themes, allowing users to customize the look and feel of the editor.</p> <p>Overall, VSCode is a powerful and versatile code editor that is well-suited for a wide range of programming tasks. Its extensive features, performance, and flexibility make it a popular choice among developers.</p>"},{"location":"Topics/Telecom/4g/","title":"4G","text":""},{"location":"Topics/Telecom/4g/#4g","title":"4G","text":"<p>4G cellular networks, also known as fourth-generation networks, are the fourth generation of wireless mobile telecommunications technology. They are designed to provide faster data transfer rates, higher capacity, and improved voice and data quality compared to the previous 3G networks.</p> <p>4G networks are based on Long-Term Evolution (LTE) technology, which uses a combination of advanced signal processing techniques and high-speed data transfer protocols to enable faster data transfer rates. LTE technology supports data transfer rates of up to 100 Mbps for downloads and up to 50 Mbps for uploads.</p> <p>One of the major advantages of 4G networks is their ability to support multimedia services such as high-definition video streaming, online gaming, and video conferencing, which were not feasible with previous generation networks. 4G networks also provide improved network security and better battery life for mobile devices.</p> <p>Overall, 4G networks have significantly improved the mobile communication experience, allowing users to access high-speed internet on their mobile devices, and facilitating the development of new applications and services that were not possible with previous generations of mobile networks.</p>"},{"location":"Topics/Telecom/5g/","title":"5G","text":""},{"location":"Topics/Telecom/5g/#5g","title":"5G","text":"<p>5G refers to the fifth generation of wireless mobile network technology, which promises to deliver faster internet speeds, lower latency, and increased capacity compared to its predecessor, 4G. The key features of 5G technology include:</p> <p>Faster speeds: 5G is designed to offer peak data speeds of up to 20 gigabits per second, which is 100 times faster than 4G. Lower latency: 5G is expected to deliver significantly lower latency, which means there will be less delay in sending and receiving data. This is important for applications that require real-time communication, such as online gaming or remote surgery. Increased capacity: 5G networks will have more capacity than 4G networks, which means they will be able to support more connected devices and users simultaneously. Improved coverage: 5G technology is expected to provide better coverage, even in areas where 4G signal strength is weak. New use cases: 5G is expected to enable new use cases and applications, such as autonomous vehicles, smart cities, and virtual and augmented reality. Overall, 5G technology promises to revolutionize the way we use and interact with mobile devices and the internet, offering faster, more reliable connectivity and opening up new possibilities for innovation and development.</p>"},{"location":"Topics/Telecom/5g/#deployment","title":"Deployment","text":"<p>Deployment of 5G networks involves a complex and multi-stage process that typically involves the following steps:</p> <p>Planning and design: The first step is to plan and design the 5G network, including selecting the frequency bands, determining the coverage area, and designing the network architecture. Infrastructure build-out: Once the planning and design stage is completed, the next step is to build out the necessary infrastructure, including installing new base stations, upgrading existing ones, and laying fiber optic cables. Testing and optimization: After the infrastructure is in place, the network must be tested and optimized to ensure that it is functioning correctly and delivering the promised speeds and performance. Launch and commercialization: Once the network has been tested and optimized, it can be launched and made available to customers. This involves marketing the new service, pricing plans, and promoting the benefits of the 5G technology to consumers and businesses. Expansion and upgrades: Over time, the 5G network will need to be expanded to cover more areas and upgraded to support new technologies and applications as they become available. Deployment of 5G networks is a complex process that requires significant investment in infrastructure, expertise, and resources. The rollout of 5G networks is expected to take several years and will likely be staggered, with some areas receiving coverage before others.</p>"},{"location":"Topics/Telecom/5g/#technology","title":"Technology","text":"<p>5G technology is built on a combination of new and existing technologies, including:</p> <p>Millimeter Wave (mmWave) frequencies: 5G uses high-frequency bands, including the millimeter wave (mmWave) spectrum, to deliver faster speeds and lower latency. These frequencies have shorter range but higher capacity and can support large amounts of data transfer. Small cells: To support the high-frequency bands, 5G networks rely on a denser network of small cells, which are low-powered base stations that can be installed on buildings, light poles, and other structures. Massive MIMO: 5G networks use massive MIMO (Multiple Input Multiple Output) technology, which uses multiple antennas to improve network capacity and coverage. Network Slicing: 5G technology enables network slicing, which allows for the creation of virtual networks with specific characteristics to meet the needs of different applications and use cases. Cloud computing: 5G networks rely on cloud computing and edge computing to offload processing tasks and reduce latency, making it possible to deliver real-time services and applications. Internet of Things (IoT): 5G technology is expected to play a key role in enabling the growth of the Internet of Things (IoT), by providing the necessary connectivity to support large numbers of connected devices. Overall, 5G technology is a complex and advanced network architecture that relies on a combination of new and existing technologies to deliver faster, more reliable connectivity and support new use cases and applications.</p>"},{"location":"Topics/Telecom/6g/","title":"6G","text":"<p>6G refers to the sixth generation of wireless communication technology that is expected to be developed and deployed in the coming years. It is the successor to 5G technology, which is currently being rolled out in many countries.</p> <p>Although there is no standard definition of what 6G technology will be, it is expected to offer significant improvements over 5G in terms of data speeds, latency, reliability, and capacity. Some of the potential features and benefits of 6G include:</p> <p>Faster speeds: 6G is expected to deliver peak data rates of up to 1 terabit per second (Tbps), which is several times faster than 5G. Lower latency: 6G is expected to have lower latency, which will enable real-time applications like remote surgery, autonomous vehicles, and augmented reality. Increased capacity: 6G will likely be able to support many more connected devices and provide more bandwidth to each device, which will be critical for the internet of things (IoT). Enhanced security: 6G is expected to have stronger encryption and other security features to protect against cyberattacks and other threats. More energy-efficient: 6G will likely be more energy-efficient than 5G, which will be important for battery-powered devices. Novel applications: 6G may enable new applications and use cases that are not possible with 5G, such as holographic communication, advanced virtual reality, and brain-computer interfaces. Overall, 6G is expected to be a major leap forward in wireless communication technology, offering faster, more reliable, and more secure connectivity for a wide range of applications and devices. However, it is still in the early stages of development, and it may take several years before it becomes widely available.</p>"},{"location":"Topics/Telecom/cellular_networks/","title":"Cellular Networks","text":""},{"location":"Topics/Telecom/cellular_networks/#cellular-networks","title":"Cellular Networks","text":"<p>Cellular networks are a type of wireless communication system that allows mobile devices to communicate with each other and with the Internet. They are called \"cellular\" because the network is divided into small geographic areas called cells, each of which is served by a base station or cell site.</p> <p>Cellular networks are designed to provide wide area coverage and support high-speed data transmission, enabling users to access the Internet, make voice calls, send and receive text messages, and use various mobile applications. These networks use various technologies such as Global System for Mobile Communications (GSM), Code Division Multiple Access (CDMA), Long-Term Evolution (LTE), and 5G.</p> <p>The GSM technology is the most widely used cellular technology worldwide, and it uses a combination of time division multiple access (TDMA) and frequency division multiple access (FDMA) to enable multiple users to share the same frequency band. The CDMA technology, on the other hand, uses a spread spectrum technique to enable multiple users to share the same frequency band, and it is commonly used in the United States and parts of Asia.</p> <p>LTE is a 4G cellular technology that offers higher data rates and lower latency than its predecessors. It uses a different modulation scheme than GSM and CDMA, and it is designed to support voice calls over an Internet Protocol (IP) network. The 5G technology is the latest generation of cellular networks, and it offers even higher data rates, lower latency, and more advanced features such as network slicing and massive machine-type communications.</p> <p>Cellular networks are typically operated by mobile network operators (MNOs), who own and maintain the infrastructure, including cell sites, base stations, and core network equipment. The infrastructure is connected to the Internet through high-speed links, such as fiber optic cables, microwave links, or satellite links.</p> <p>Cellular networks are designed to be resilient and fault-tolerant, and they employ various techniques to ensure reliability and availability. For example, the network can switch a user's connection to another cell site if the signal strength from the current site is weak, or it can route traffic through alternative paths if a link fails.</p> <p>In conclusion, cellular networks are an essential part of modern communication systems, enabling people to stay connected and access information on the go. They use various technologies and are operated by mobile network operators, who ensure their reliability and availability.</p>"},{"location":"Topics/Telecom/cellular_networks/#back-haul","title":"Back Haul","text":"<p>In the context of telecommunications networks, backhaul refers to the infrastructure and equipment used to transport data and voice traffic from cell sites (such as base stations or towers) to the core network.</p> <p>In cellular networks, backhaul is the link between the radio access network (RAN) and the core network, which is responsible for routing data and voice traffic between different cells and other networks. The backhaul link can be wired (e.g. fiber optic cables) or wireless (e.g. microwave or satellite), and it typically carries large amounts of data traffic between the cell sites and the core network.</p> <p>The backhaul infrastructure plays a critical role in the performance and capacity of the cellular network. A well-designed and properly provisioned backhaul can help to ensure that the network can handle high volumes of data traffic, reduce latency, and improve the overall quality of service for users.</p> <p>However, inadequate or overloaded backhaul can cause congestion, network outages, and slow data transfer rates, which can lead to poor network performance and dissatisfied users. Therefore, mobile network operators need to carefully plan, design, and optimize their backhaul infrastructure to ensure that it meets the needs of their network and users.</p>"},{"location":"Topics/Telecom/cellular_networks/#triangulation","title":"Triangulation","text":"<p>Triangulation is a technique used in various fields, including surveying, navigation, and telecommunications, to determine the location of an object or signal by measuring the angles or distances from multiple reference points.</p> <p>In the context of telecommunications, triangulation is often used to locate the position of a mobile device, such as a cell phone or GPS-enabled device, based on the signals it receives from nearby cell towers or GPS satellites. By analyzing the signal strength and timing of signals from three or more reference points, the location of the device can be estimated with a high degree of accuracy.</p> <p>To perform triangulation in a cellular network, the network operator uses the signal strength and timing information from at least three nearby cell towers to calculate the location of the mobile device. This technique is often used for various purposes, including locating lost or stolen devices, tracking the movement of vehicles, and providing location-based services.</p> <p>It's important to note that the accuracy of triangulation depends on various factors, including the number and distribution of reference points, the quality of the signal, and the processing algorithms used to calculate the location. While triangulation can be a useful tool for locating mobile devices, it is not always accurate and may be affected by factors such as interference and signal reflections.</p>"},{"location":"Topics/UNIX/history/","title":"UNIX History","text":""},{"location":"Topics/UNIX/history/#history-of-unix","title":"History Of Unix","text":"<p>UNIX is a popular operating system that was originally developed at Bell Labs in the 1960s. Here's a brief history of UNIX:</p> <ul> <li> <p>In 1969, Ken Thompson and Dennis Ritchie at Bell Labs began work on a new operating system called UNIX, which was designed to be portable and flexible enough to run on a variety of hardware platforms.</p> </li> <li> <p>In the early 1970s, UNIX was rewritten in the C programming language, which made it much easier to port to different computer architectures.</p> </li> <li> <p>In 1973, the first version of UNIX was released to external users. This version, known as UNIX Version 4 (or V4), included several new features, such as pipes and the ability to handle multiple users at the same time.</p> </li> <li> <p>Throughout the 1970s and 1980s, UNIX became increasingly popular, especially in academic and research circles. Many universities and research institutions developed their own versions of UNIX, which led to a proliferation of different flavors of the operating system.</p> </li> <li> <p>In the late 1980s and early 1990s, a consortium of UNIX vendors formed the Open Software Foundation (OSF) to create a standardized version of UNIX called OSF/1.</p> </li> <li> <p>In the 1990s, the Linux operating system, which was based on the UNIX architecture, was developed by Linus Torvalds and quickly gained popularity among developers and users.</p> </li> </ul> <p>Today, UNIX and its derivatives are widely used in a variety of industries, including finance, government, and healthcare. The most popular versions of UNIX today are Solaris, AIX, HP-UX, and Linux.</p>"},{"location":"Topics/UNIX/linux/","title":"Linux","text":""},{"location":"Topics/UNIX/linux/#linux","title":"Linux","text":"<p>Linux is a free and open-source operating system that was first developed by Linus Torvalds in 1991. It is based on the Unix operating system and is commonly used in servers, supercomputers, and mobile devices.</p> <p>One of the key features of Linux is its flexibility and customizability, as it allows users to modify the source code to suit their needs. Linux also has a large community of developers and users who contribute to its development and provide support through forums and online resources.</p> <p>Linux is known for its stability, security, and speed, which makes it a popular choice for web servers and other mission-critical applications. It also supports a wide range of programming languages and comes with a vast array of software tools and applications.</p> <p>Some popular Linux distributions include Ubuntu, Debian, Fedora, and CentOS, each with its own unique set of features and user interface. Overall, Linux is a powerful and versatile operating system that is widely used in various industries and applications.</p>"},{"location":"Topics/UNIX/macos/","title":"macOS","text":""},{"location":"Topics/UNIX/macos/#macos","title":"macOS","text":"<p>macOS is the operating system developed by Apple Inc. for their line of Macintosh computers. It is the successor to the original Mac OS, which was introduced in 1984, and it has been continuously developed and improved since then.</p> <p>macOS is a Unix-based operating system, which means it has many similarities to other Unix-based systems such as Linux. It is known for its user-friendly interface, stability, and security features.</p> <p>Some of the key features of macOS include:</p> <p>The Dock: a graphical user interface element that provides quick access to frequently used applications and documents. Finder: the default file manager and graphical user interface shell of macOS. Time Machine: a backup software included with macOS that automatically backs up all of your files and documents. Spotlight: a search tool that allows you to quickly find files, documents, and applications on your Mac. Siri: a voice-controlled personal assistant that can help you with a variety of tasks, such as setting reminders, sending messages, or finding information on the web. iCloud: Apple's cloud-based storage service that allows you to store your files, photos, and documents in the cloud and access them from any device. Overall, macOS is a powerful and user-friendly operating system that is designed to work seamlessly with Apple's hardware, providing a reliable and secure computing experience for users.</p>"},{"location":"Topics/UNIX/unix/","title":"UNIX","text":""},{"location":"Topics/UNIX/unix/#unix","title":"UNIX","text":"<p>UNIX is a popular multi-tasking and multi-user operating system developed in the 1960s and 1970s by a team of AT&amp;T Bell Labs researchers, including Ken Thompson and Dennis Ritchie. It was designed to be portable, flexible, and modular, allowing users to interact with the system using a command-line interface (CLI) and to execute various tasks such as file management, text processing, and system administration. It has since become one of the most widely used operating systems in the world, powering everything from servers to smartphones.</p> <p>UNIX is known for its scalability and robustness, making it a popular choice for both large and small organizations. It has been widely adopted in academia, government, and the business world, and has served as the foundation for many other operating systems, including Linux and macOS.</p> <p>Here are some key features and characteristics of Unix:</p> <ul> <li>Multi-user and Multi-tasking: Unix is designed to allow multiple users to simultaneously access and use the system, and to perform multiple tasks simultaneously.</li> <li>Command-Line Interface: Unix is primarily controlled through a command-line interface, where users type in text commands to perform tasks. This allows for a great deal of flexibility and power, but can also be intimidating for new users.</li> <li>File System: Unix uses a hierarchical file system, with all files and directories organized in a tree-like structure. This allows for easy navigation and management of files and directories.</li> <li>Portability: Unix was designed to be highly portable, meaning it can run on a wide variety of hardware platforms, from mainframes to smartphones.</li> <li>Open-source: Many versions of Unix are open-source, meaning that the source code is freely available for anyone to view, modify, and redistribute.</li> <li>Networking: Unix was designed to support networking from the ground up, making it an ideal platform for servers and other network-connected devices.</li> <li>Security: Unix was designed with security in mind, and many of its features are focused on ensuring the system is secure and difficult to compromise.</li> <li>Shell: Unix shells are powerful scripting environments that allow users to automate tasks and create custom tools and utilities.</li> <li>Overall, Unix is a highly flexible and powerful operating system that has stood the test of time. </li> <li>Despite its age, Unix is still widely used today in many different contexts, and is likely to remain an important part of the computing landscape for years to come.</li> </ul> <p>Overall, UNIX has had a significant impact on the development of computing and continues to be an important tool for many users and organizations today.</p>"},{"location":"Topics/UNIX/usenet/","title":"USENET","text":""},{"location":"Topics/UNIX/usenet/#usenet","title":"Usenet","text":"<p>Usenet is a global distributed discussion system, which was one of the earliest forms of internet-based communication. It was created in 1979 by Tom Truscott and Jim Ellis as a way to facilitate discussions and information sharing among computer science students at Duke University.</p> <p>Usenet is organized into newsgroups, which are like online discussion forums that cover a wide range of topics. Users can read and post messages to newsgroups, and replies to messages are threaded for easy follow-up. Usenet messages are distributed across a vast network of interconnected servers, making it a decentralized system.</p> <p>Usenet was a popular way for people to communicate and share information before the advent of the World Wide Web and modern social media platforms. It is still in use today, but its popularity has declined in recent years due to the rise of web-based forums and social media networks. However, Usenet still remains a valuable resource for some specialized communities and continues to be an important part of the history of the internet.</p>"},{"location":"Topics/UNIX/usenet/#uunet","title":"UUNET","text":"<p>UUNET, also known as \"Unix-to-Unix Network,\" was one of the earliest commercial Internet Service Providers (ISPs) in the United States. It was founded in 1987 and was acquired by WorldCom in 1996, which later became part of Verizon Communications.</p> <p>UUNET was instrumental in the development and popularization of the commercial internet, providing connectivity services for businesses, organizations, and individuals. Its network infrastructure and services helped establish the foundation for the modern internet.</p> <p>UUNET's pioneering efforts played a critical role in the growth and expansion of the internet, and its legacy can still be felt in today's digital landscape.</p>"},{"location":"Topics/Utilities/mac/","title":"Mac","text":""},{"location":"Topics/Utilities/mac/#mac-utilities","title":"Mac Utilities","text":"<ul> <li><code>sudo lsof -nP -i:&lt;port&gt;</code>   List open ports</li> </ul>"},{"location":"Topics/Utilities/rust/","title":"Rust","text":""},{"location":"Topics/Utilities/rust/#rust-utilities","title":"Rust Utilities","text":"<p>A Curated List Of Command-Line Utilities Written In Rust</p>"},{"location":"Topics/Web/css/","title":"CSS","text":"<p>CSS stands for Cascading Style Sheets. It is a language used to describe the presentation or the style of a web page written in HTML (Hypertext Markup Language) or XML (Extensible Markup Language).</p> <p>CSS allows developers to separate the content of a web page from its presentation, making it easier to manage and maintain. It provides a wide range of formatting options that allow developers to control the appearance of HTML elements such as text, images, tables, and forms.</p> <p>CSS consists of a set of rules, which are applied to HTML elements to specify their style. These rules include selectors, properties, and values.</p> <p>Selectors: CSS selectors are used to select HTML elements based on their tag name, class, or ID. For example, to select all paragraphs in a web page, the selector would be \"p\", while to select a specific paragraph with a class \"intro\", the selector would be \".intro\". Properties: CSS properties are used to define the style of an HTML element. They include font-size, color, background-color, border, margin, padding, and many more. Values: CSS values are used to set the value of a property. For example, for the property font-size, the value could be 16px, 1.2em, or larger. CSS also allows developers to define styles for multiple elements at once using classes and IDs. Classes are used to group elements with similar styles, while IDs are used to define unique styles for individual elements.</p> <p>CSS is an essential part of web development, as it allows developers to create visually appealing and responsive web pages that can be viewed on a variety of devices and screen sizes.</p>"},{"location":"Topics/Web/html/","title":"HTML","text":"<p>HTML stands for HyperText Markup Language, which is the standard markup language used to create web pages and other information that can be displayed on the World Wide Web. HTML uses a set of markup tags and attributes to describe the structure and content of a web page.</p> <p>HTML documents are made up of elements, which are defined by tags enclosed in angle brackets. These elements can be used to define the structure of a web page, such as headings, paragraphs, lists, tables, and forms, as well as to add images, videos, links, and other multimedia content.</p> <p>Here's an example of a simple HTML document:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;My Web Page&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Welcome to My Web Page&lt;/h1&gt;\n    &lt;p&gt;This is a paragraph of text.&lt;/p&gt;\n    &lt;ul&gt;\n      &lt;li&gt;Item 1&lt;/li&gt;\n      &lt;li&gt;Item 2&lt;/li&gt;\n      &lt;li&gt;Item 3&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In this example, the <code>&lt;!DOCTYPE html&gt;</code> declaration indicates that this is an HTML5 document. The <code>&lt;html&gt;</code> element encloses the entire document, and the <code>&lt;head&gt;</code> element contains meta information about the document, such as the title displayed in the browser's title bar. The <code>&lt;body&gt;</code> element contains the main content of the document, including a heading <code>&lt;h1&gt;</code>, a paragraph <code>&lt;p&gt;</code>, and an unordered list <code>&lt;ul&gt;</code>, with each item in the list represented by the <code>&lt;li&gt;</code>element.</p> <p>Overall, HTML is an essential component of web development, providing the foundational building blocks for creating and displaying web content.</p>"},{"location":"Topics/Web/javascript/","title":"JavaScript","text":""},{"location":"Topics/Web/javascript/#javascriptjavascript","title":"JavaScriptJavaScript","text":"<p>JavaScript is a programming language that is primarily used for creating dynamic and interactive web pages. It is a client-side scripting language, which means that it runs in a user's web browser, rather than on a web server. JavaScript is often used in conjunction with HTML and CSS, the other two main languages of the web, to create rich, dynamic, and interactive web experiences.</p> <p>JavaScript was first introduced in 1995 by Brendan Eich while he was working at Netscape Communications Corporation. Originally, it was called \"LiveScript,\" but its name was changed to \"JavaScript\" to capitalize on the popularity of Java, which was a popular programming language at the time. Despite its name, JavaScript is not related to Java, although the two languages share some syntax similarities.</p> <p>JavaScript is a versatile and powerful language, and it is used for a wide range of applications, including:</p> <p>Web development: JavaScript is commonly used to create interactive web pages, such as forms, animations, and dynamic content. Mobile app development: Many popular mobile app frameworks, such as React Native, use JavaScript as their primary language.</p> <p>Server-side development: JavaScript can also be used to build server-side applications using Node.js, a runtime environment that allows JavaScript to be used outside of the web browser.</p> <p>Game development: JavaScript is used in many popular game engines, such as Phaser and Three.js, to create web-based games.</p> <p>IoT development: With the advent of the Internet of Things (IoT), JavaScript is increasingly being used to build applications for connected devices, such as smart home devices and wearable technology.</p> <p>JavaScript has a wide variety of features, including support for object-oriented programming, functional programming, and asynchronous programming. It also has a large and active developer community, which has created many libraries, frameworks, and tools to make it easier to work with JavaScript. Some of the most popular JavaScript frameworks include React, Angular, and Vue.js, while popular tools include Webpack, Babel, and ESLint.</p>"},{"location":"Topics/Web/react/","title":"React","text":"<p>React is a JavaScript library for building user interfaces. It was created by Facebook and is now widely used in the web development industry.</p> <p>React allows developers to create reusable UI components that can be used in different parts of an application, making it easier to maintain and update the code. It also uses a virtual DOM (Document Object Model) which is a lightweight representation of the actual DOM. This means that React can efficiently update the DOM only when necessary, minimizing the number of changes required and improving the performance of the application.</p> <p>React is often used in combination with other libraries and frameworks, such as Redux for state management and React Router for navigation. It also supports server-side rendering, which means that the initial page load can be faster, improving the user experience.</p> <p>React is a popular choice for building single-page applications (SPAs) and is used by companies such as Facebook, Instagram, Netflix, and Airbnb. It has a large and active community, with many resources and tools available for developers to use.</p>"},{"location":"Topics/Web/static_site_generators/","title":"Static Site Generators","text":""},{"location":"Topics/Web/static_site_generators/#static-gite-generators","title":"Static Gite generators","text":"<p>Static site generators (SSGs) are software tools that generate static HTML pages from templates and content stored in files. Unlike dynamic websites, which are generated on the fly by web servers when a user requests a page, static websites consist of pre-built files that are served directly to users without any additional processing.</p> <p>SSGs work by taking input from various sources, such as Markdown files, JSON files, or CSV files, and combining them with templates to generate static HTML pages. This approach has several advantages over dynamic websites, including faster page load times, improved security, and easier deployment and hosting.</p> <p>Some popular SSGs include Jekyll, Hugo, Gatsby, and Hexo. These tools offer a wide range of features, including support for themes, plugins, and content management systems, as well as integration with various hosting platforms and version control systems.</p> <p>In summary, SSGs are a useful tool for building fast, secure, and scalable websites, especially for sites with predominantly static content such as blogs, portfolios, and documentation sites.</p>"},{"location":"Topics/Web/static_site_generators/#material-for-mkdocs","title":"Material for MkDocs","text":"<p>This site is built and maintained using Material for MkDocs</p> <p>Material for MkDocs is a theme for the MkDocs static site generator that is based on Google's Material Design guidelines. It provides a modern, clean, and responsive design that is optimized for documentation websites.</p> <p>MkDocs is a popular tool for generating static documentation sites from markdown files. It allows developers to create professional-looking documentation sites quickly and easily, without the need for complex templates or programming knowledge.</p> <p>Material for MkDocs is a theme that can be installed as a plugin for MkDocs, providing a pre-built, customizable design for documentation sites. The theme includes features such as a customizable navigation menu, search functionality, and support for syntax highlighting.</p> <p>Some of the key features of Material for MkDocs include:</p> <ul> <li>Responsive design: The theme is designed to look great on a wide range of devices, from desktops to mobile devices.</li> <li>Customizable navigation: Users can easily customize the navigation menu to suit their needs, including support for nested pages and dropdown menus.</li> <li>Search functionality: The theme includes a search bar that allows users to easily search the documentation site for specific keywords.</li> <li>Syntax highlighting: The theme supports syntax highlighting for a wide range of programming languages, making it easy to include code snippets in documentation pages.</li> <li>Overall, Material for MkDocs is a powerful and flexible theme that can help developers create professional-looking documentation sites quickly and easily. Its responsive design, customizable navigation, and support for search and syntax highlighting make it a popular choice among developers.</li> </ul>"},{"location":"Topics/Web/static_site_generators/#alternatives","title":"Alternatives","text":"<p>Some alternatives are:</p>"},{"location":"Topics/Web/static_site_generators/#docusaurus","title":"Docusaurus","text":"<p>Docusaurus by Facebook is a very popular documentation generator and a good choice if you or your company are already using React to build your site. It will generate a single page application which is fundamentally different from the site Material for MkDocs generates for you.</p>"},{"location":"Topics/Web/static_site_generators/#advantages","title":"Advantages","text":"<p>Very powerful, customizable and extendable. Provides many components that aid in technical writing Large and rich ecosystem, backed by Facebook</p>"},{"location":"Topics/Web/static_site_generators/#challenges","title":"Challenges","text":"<p>High learning curve, JavaScript knowledge mandatory JavaScript ecosystem is very volatile, rather high maintenance. More time needed to get up and running.</p> <p>While Docusaurus is one of the best choices when it comes to documentation sites that output a single page application, there are many more solutions, including Docz, Gatsby, Vuepress and Docsify that approach this problem similarly.</p>"},{"location":"Topics/Web/static_site_generators/#jekyll","title":"Jekyll","text":"<p>Jekyll is probably one of the most mature and widespread static site generators and is written in Ruby. It is not specifically geared towards technical project documentation and has many themes to choose from, which can be challenging.</p>"},{"location":"Topics/Web/static_site_generators/#advantages_1","title":"Advantages","text":"<p>Battle-tested, rich ecosystem, many themes to choose from. Brings great capabilities for blogging (permalinks, tags, etc.). Generates a SEO-friendly site, similar to Material for MkDocs</p>"},{"location":"Topics/Web/static_site_generators/#challenges_1","title":"Challenges","text":"<p>Not specifically geared towards technical project documentation. Limited Markdown capabilities, not as advanced as Python Markdown. More time needed to get up and running</p>"},{"location":"Topics/Web/static_site_generators/#sphinx","title":"Sphinx","text":"<p>Sphinx is an alternative static site generator specifically geared towards generating reference documentation, offering powerful capabilities that are lacking in MkDocs. It uses reStructured text, a format similar to Markdown, which some users find harder to use.</p>"},{"location":"Topics/Web/static_site_generators/#advantages_2","title":"Advantages","text":"<p>Very powerful, customizable and extendable Generates reference documentation from Python docstrings. Large and rich ecosystem, used by many Python projects</p>"},{"location":"Topics/Web/static_site_generators/#challenges_2","title":"Challenges","text":"<p>High learning curve, reStructured text syntax might be challenging.  Search is less powerful than the one provided by MkDocs. More time needed to get up and running. If you're considering using Sphinx because you need to generate reference documentation, you should give mkdocstrings a try \u2013 an actively maintained and popular framework building on top of MkDocs, implementing Sphinx-like functionality.</p>"},{"location":"Topics/Web/static_site_generators/#gitbook","title":"GitBook","text":"<p>GitBook offers a hosted documentation solution that generates a beautiful and functional site from Markdown files in your GitHub repository. However, it was once Open Source, but turned into a closed source solution some time ago.</p>"},{"location":"Topics/Web/static_site_generators/#advantages_3","title":"Advantages","text":"<p>Hosted solution, minimal technical knowledge required. Custom domains, authentication and other enterprise features. Great collaboration features for teams</p>"},{"location":"Topics/Web/static_site_generators/#challenges_3","title":"Challenges","text":"<p>Closed source, not free for proprietary projects. Limited Markdown capabilities, not as advanced as Python Markdown. Many Open Source projects moved away from GitBook. Many users switched from GitBook to Material for MkDocs, as they want to keep control and ownership of their documentation, favoring an Open Source solution.</p>"},{"location":"Topics/Web/web_browser/","title":"Browsers","text":""},{"location":"Topics/Web/web_browser/#web-browser","title":"Web Browser","text":"<p>When a user visits a website, the website's server checks the user's browser language settings to determine which language version of the website to display. If the website supports the user's preferred language, it will serve the website in that language. Otherwise, the website may default to another language or offer a language selection option to the user.</p> <p>Some common web browsers and their language settings options are:</p> <ul> <li> <p>Google Chrome: Users can set their preferred language by going to Settings &gt; Advanced &gt; Languages.</p> </li> <li> <p>Mozilla Firefox: Users can set their preferred language by going to Options &gt; Language.</p> </li> <li> <p>Microsoft Edge: Users can set their preferred language by going to Settings &gt; Languages.</p> </li> <li> <p>Apple Safari: Users can set their preferred language by going to Preferences &gt; Language.</p> </li> </ul> <p>It's important to note that browser language settings only affect the language of web pages and not the language of other browser interfaces, such as menus or settings.</p>"},{"location":"Topics/Web/web_browser/#browser-languages","title":"Browser Languages","text":"<p>A browser language refers to the language settings configured within a web browser. It determines the default language in which web pages are displayed to the user. Typically, web browsers allow users to set a preferred language and prioritize them in order of preference.</p> <p>There are several standard web languages that are widely used for developing web applications and websites. Some of the most popular standard web languages include:</p> <ul> <li> <p>HTML (Hypertext Markup Language): It is the standard language used for creating web pages. It is used to define the structure and content of a web page using tags and attributes.</p> </li> <li> <p>CSS (Cascading Style Sheets): It is used to style the web page created with HTML. It defines the layout, font, color, and other visual elements of the web page.</p> </li> <li> <p>JavaScript: It is a scripting language used to add interactivity to web pages. It enables the creation of dynamic web pages that can respond to user actions and provide a more engaging user experience.</p> </li> </ul> <p>These standard browser languages are often used in combination to create dynamic and interactive web applications and websites.</p>"},{"location":"Topics/Web/web_server/","title":"Servers","text":""},{"location":"Topics/Web/web_server/#web-servers","title":"Web Servers","text":"<p>Web server software is a program that runs on a web server and provides the ability to serve web pages and other content to clients who request them over the Internet. There are several popular web server software programs, including:</p> <ul> <li>Apache HTTP Server: This is a free and open-source web server software that is widely used on the internet. It supports multiple operating systems, such as Windows, Linux, macOS, and more.</li> <li>Microsoft Internet Information Services (IIS): This web server software is developed by Microsoft and is primarily used on Windows servers. It is commonly used for hosting websites and applications built using Microsoft technologies such as ASP.NET.</li> <li>Nginx: This is another popular open-source web server software that is known for its high performance and scalability. It is often used as a reverse proxy and load balancer, in addition to serving web content.</li> <li>Lighttpd: This is a lightweight and fast web server software that is often used for serving static content such as images, videos, and files.</li> </ul> <p>There are many other web server software programs available, each with its own unique features and advantages. The choice of which one to use often depends on the specific needs and requirements of the website or application being hosted.</p>"}]}